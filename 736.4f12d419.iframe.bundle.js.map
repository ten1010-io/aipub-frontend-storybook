{"version":3,"file":"736.4f12d419.iframe.bundle.js","mappings":";;;;;;AAuFA","sources":["webpack://aipub-frontend/./components/dialog/dialoger.tsx"],"sourcesContent":["'use client';\n\nimport { css, setup } from 'goober';\nimport * as React from 'react';\n\nimport {\n  DialogPosition,\n  DialogWrapperProps,\n  DialogerProps,\n  resolveValue,\n} from './types';\nimport { useDialoger } from './use-dialoger';\n\nsetup(React.createElement);\n\nconst DialogWrapper = ({\n  id,\n  className,\n  style,\n  onHeightUpdate,\n  children,\n}: DialogWrapperProps) => {\n  const ref = React.useCallback(\n    (el: HTMLElement | null) => {\n      if (el) {\n        const updateHeight = () => {\n          const height = el.getBoundingClientRect().height;\n          onHeightUpdate(id, height);\n        };\n        updateHeight();\n        new MutationObserver(updateHeight).observe(el, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n        });\n      }\n    },\n    [id, onHeightUpdate],\n  );\n\n  return (\n    <div ref={ref} className={className} style={style}>\n      {children}\n    </div>\n  );\n};\n\nconst getPositionStyle = (\n  position: DialogPosition,\n  offset: number,\n): React.CSSProperties => {\n  const top = position.includes('top');\n  const verticalStyle: React.CSSProperties = top ? { top: 0 } : { bottom: 0 };\n  const horizontalStyle: React.CSSProperties = position.includes('center')\n    ? {\n        justifyContent: 'center',\n      }\n    : position.includes('right')\n      ? {\n          justifyContent: 'flex-end',\n        }\n      : {};\n  return {\n    left: 0,\n    right: 0,\n    display: 'flex',\n    position: 'absolute',\n    // transition: prefersReducedMotion()\n    //   ? undefined\n    //   : `all 230ms cubic-bezier(.21,1.02,.73,1)`,\n    transition: `all 230ms cubic-bezier(.21,1.02,.73,1)`,\n    transform: `translateY(${offset * (top ? 1 : -1)}px)`,\n    ...verticalStyle,\n    ...horizontalStyle,\n  };\n};\n\nconst activeClass = css`\n  z-index: 9999;\n\n  > * {\n    pointer-events: auto;\n  }\n`;\n\nconst DEFAULT_OFFSET = 16;\n\nexport const Dialoger: React.FC<DialogerProps> = ({\n  reverseOrder,\n  position = 'top-center',\n  dialogOptions,\n  gutter,\n  children,\n  containerStyle,\n  containerClassName,\n}) => {\n  const { dialogs, handlers } = useDialoger(dialogOptions);\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        zIndex: 9999,\n        top: DEFAULT_OFFSET,\n        left: DEFAULT_OFFSET,\n        right: DEFAULT_OFFSET,\n        bottom: DEFAULT_OFFSET,\n        pointerEvents: 'none',\n        ...containerStyle,\n      }}\n      className={containerClassName}\n    >\n      {dialogs.map((dialog) => {\n        const dialogPosition = dialog.position || position;\n        const offset = handlers.calculateOffset(dialog, {\n          reverseOrder,\n          gutter,\n          defaultPosition: position,\n        });\n        const positionStyle = getPositionStyle(dialogPosition, offset);\n\n        return (\n          <DialogWrapper\n            id={dialog.id}\n            key={dialog.id}\n            onHeightUpdate={handlers.updateHeight}\n            className={dialog.visible ? activeClass : ''}\n            style={positionStyle}\n          >\n            {dialog.type === 'custom'\n              ? resolveValue(dialog.message, dialog)\n              : children\n                ? children(dialog)\n                : ''}\n          </DialogWrapper>\n        );\n      })}\n    </div>\n  );\n};\n"],"names":[],"sourceRoot":""}