"use strict";(self.webpackChunkaipub_frontend=self.webpackChunkaipub_frontend||[]).push([[63],{"./stories/chip-group.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Size:()=>Size,Type:()=>Type,Variant:()=>Variant,__namedExportsOrder:()=>__namedExportsOrder,default:()=>chip_group_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),dist=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),utils=__webpack_require__("./lib/utils.ts");const chipGroupVariants=(0,dist.F)("inline-flex items-center justify-center transition-colors duration-150 focus:outline-none",{variants:{type:{round:"rounded-full",oval:"rounded-md"},variant:{outline:"border border-[#D5D5DA]",fill:"border border-transparent bg-[#F7F8FB]"},size:{sm:"h-5 px-2",lg:"h-6 px-3"}},defaultVariants:{type:"round",variant:"outline",size:"sm"}}),ChipGroup=react.forwardRef((({className,type,variant,size="sm",children,...props},ref)=>{const childrenArray=react.Children.toArray(children);return(0,jsx_runtime.jsx)("div",{ref,className:(0,utils.cn)(chipGroupVariants({type,variant,size,className})),...props,children:childrenArray.map(((child,index)=>(0,jsx_runtime.jsxs)(react.Fragment,{children:[child,index<childrenArray.length-1&&("sm"===size?(0,jsx_runtime.jsx)("svg",{className:"mx-1 fill-current stroke-none text-[#B4B4BE]",width:"4",height:"10",viewBox:"0 0 4 10",xmlns:"http://www.w3.org/2000/svg",children:(0,jsx_runtime.jsx)("path",{d:"M3.67578 0.357422L1.16211 9.6709H0.324219L2.82715 0.357422H3.67578Z"})}):(0,jsx_runtime.jsx)("svg",{className:"mx-2 fill-current stroke-none text-[#B4B4BE]",width:"1",height:"8",viewBox:"0 0 1 8",xmlns:"http://www.w3.org/2000/svg",children:(0,jsx_runtime.jsx)("rect",{width:"1",height:"8"})}))]},index)))})}));ChipGroup.displayName="ChipGroup";const ChipItem=react.forwardRef((({className,...props},ref)=>(0,jsx_runtime.jsx)("div",{ref,className:(0,utils.cn)("text-xs font-medium text-[#555555]",className),...props})));ChipItem.displayName="ChipItem",ChipGroup.__docgenInfo={description:"`ChipGroup` 은 `Chip` 컴포넌트의 그룹 형태입니다.\n[Figma](https://www.figma.com/design/R6fle1eW2pVTbbhOW1PkNY/AI-Pub-R-Library?node-id=96-2541)\n- closable (개발중)",methods:[],displayName:"ChipGroup",props:{type:{required:!1,tsType:{name:"union",raw:"'round' | 'oval'",elements:[{name:"literal",value:"'round'"},{name:"literal",value:"'oval'"}]},description:"Chip의 모양을 설정합니다."},variant:{required:!1,tsType:{name:"union",raw:"'outline' | 'fill'",elements:[{name:"literal",value:"'outline'"},{name:"literal",value:"'fill'"}]},description:"Chip의 형태을 설정합니다."},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'lg'"}]},description:"Chip의 사이즈을 설정합니다. (sm:20, lg:24)",defaultValue:{value:"'sm'",computed:!1}}}},ChipItem.__docgenInfo={description:"",methods:[],displayName:"ChipItem"};const chip_group_stories={title:"ui/ChipGroup",component:ChipGroup,parameters:{layout:"centered"},tags:["autodocs"]},Default={argTypes:{type:{table:{defaultValue:{summary:"round"}}},variant:{table:{defaultValue:{summary:"outline"}}},size:{table:{defaultValue:{summary:"sm"}}}},args:{type:"round",variant:"outline",size:"sm"},render:args=>(0,jsx_runtime.jsxs)(ChipGroup,{...args,children:[(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"})]})},Type=()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-3",children:[(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)(ChipGroup,{type:"round",children:[(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"})]})}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)(ChipGroup,{type:"oval",children:[(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"})]})})]}),Variant=()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-3",children:[(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)(ChipGroup,{variant:"outline",children:[(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"})]})}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)(ChipGroup,{variant:"fill",children:[(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"})]})})]}),Size=()=>(0,jsx_runtime.jsxs)("div",{className:"space-y-3",children:[(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)(ChipGroup,{size:"sm",children:[(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"})]})}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)(ChipGroup,{size:"lg",children:[(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"}),(0,jsx_runtime.jsx)(ChipItem,{children:"Chip"})]})})]}),__namedExportsOrder=["Default","Type","Variant","Size"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  argTypes: {\n    type: {\n      table: {\n        defaultValue: {\n          summary: 'round'\n        }\n      }\n    },\n    variant: {\n      table: {\n        defaultValue: {\n          summary: 'outline'\n        }\n      }\n    },\n    size: {\n      table: {\n        defaultValue: {\n          summary: 'sm'\n        }\n      }\n    }\n  },\n  args: {\n    type: 'round',\n    variant: 'outline',\n    size: 'sm'\n  },\n  render: args => <ChipGroup {...args}>\n      <ChipItem>Chip</ChipItem>\n      <ChipItem>Chip</ChipItem>\n      <ChipItem>Chip</ChipItem>\n    </ChipGroup>\n}",...Default.parameters?.docs?.source}}},Type.parameters={...Type.parameters,docs:{...Type.parameters?.docs,source:{originalSource:'() => <div className="space-y-3">\n    <div>\n      <ChipGroup type="round">\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n      </ChipGroup>\n    </div>\n    <div>\n      <ChipGroup type="oval">\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n      </ChipGroup>\n    </div>\n  </div>',...Type.parameters?.docs?.source}}},Variant.parameters={...Variant.parameters,docs:{...Variant.parameters?.docs,source:{originalSource:'() => <div className="space-y-3">\n    <div>\n      <ChipGroup variant="outline">\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n      </ChipGroup>\n    </div>\n    <div>\n      <ChipGroup variant="fill">\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n      </ChipGroup>\n    </div>\n  </div>',...Variant.parameters?.docs?.source}}},Size.parameters={...Size.parameters,docs:{...Size.parameters?.docs,source:{originalSource:'() => <div className="space-y-3">\n    <div>\n      <ChipGroup size="sm">\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n      </ChipGroup>\n    </div>\n    <div>\n      <ChipGroup size="lg">\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n        <ChipItem>Chip</ChipItem>\n      </ChipGroup>\n    </div>\n  </div>',...Size.parameters?.docs?.source}}}}}]);