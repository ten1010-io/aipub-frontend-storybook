/*! For license information please see 236.3c122744.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkaipub_frontend=self.webpackChunkaipub_frontend||[]).push([[236],{"./node_modules/@react-aria/utils/dist/chain.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks){return(...args)=>{for(let callback of callbacks)"function"==typeof callback&&callback(...args)}}__webpack_require__.d(__webpack_exports__,{c:()=>$ff5963eb1fccf552$export$e08e3b67e392101e})},"./node_modules/@react-stately/utils/dist/useControlledState.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>$458b0a5536c1a7cf$export$40bfa8c7b0832715});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");function $458b0a5536c1a7cf$export$40bfa8c7b0832715(value,defaultValue,onChange){let[stateValue,setStateValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value||defaultValue),isControlledRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0!==value),isControlled=void 0!==value;(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{let wasControlled=isControlledRef.current;wasControlled!==isControlled&&console.warn(`WARN: A component changed from ${wasControlled?"controlled":"uncontrolled"} to ${isControlled?"controlled":"uncontrolled"}.`),isControlledRef.current=isControlled}),[isControlled]);let currentValue=isControlled?value:stateValue,setValue=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((value,...args)=>{let onChangeCaller=(value,...onChangeArgs)=>{onChange&&(Object.is(currentValue,value)||onChange(value,...onChangeArgs)),isControlled||(currentValue=value)};if("function"==typeof value){console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320"),setStateValue(((oldValue,...functionArgs)=>{let interceptedValue=value(isControlled?currentValue:oldValue,...functionArgs);return onChangeCaller(interceptedValue,...args),isControlled?oldValue:interceptedValue}))}else isControlled||setStateValue(value),onChangeCaller(value,...args)}),[isControlled,currentValue,onChange]);return[currentValue,setValue]}},"./node_modules/@ten1010-io/aipub-backend-client/dist/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation){void 0!==dryRun&&(queryParameters.dryRun=dryRun),void 0!==fieldManager&&(queryParameters.fieldManager=fieldManager),void 0!==fieldValidation&&(queryParameters.fieldValidation=fieldValidation)}function applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds){void 0!==_continue&&(queryParameters.continue=_continue),void 0!==fieldSelector&&(queryParameters.fieldSelector=fieldSelector),void 0!==labelSelector&&(queryParameters.labelSelector=labelSelector),void 0!==limit&&(queryParameters.limit=String(limit)),void 0!==resourceVersion&&(queryParameters.resourceVersion=resourceVersion),void 0!==resourceVersionMatch&&(queryParameters.resourceVersionMatch=resourceVersionMatch),void 0!==timeoutSeconds&&(queryParameters.timeoutSeconds=String(timeoutSeconds))}function applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force){void 0!==dryRun&&(queryParameters.dryRun=dryRun),void 0!==fieldManager&&(queryParameters.fieldManager=fieldManager),void 0!==fieldValidation&&(queryParameters.fieldValidation=fieldValidation),void 0!==force&&(queryParameters.force=String(force))}function applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation){void 0!==dryRun&&(queryParameters.dryRun=dryRun),void 0!==fieldManager&&(queryParameters.fieldManager=fieldManager),void 0!==fieldValidation&&(queryParameters.fieldValidation=fieldValidation)}function applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds){void 0!==_continue&&(queryParameters.continue=_continue),void 0!==dryRun&&(queryParameters.dryRun=dryRun),void 0!==fieldSelector&&(queryParameters.fieldSelector=fieldSelector),void 0!==gracePeriodSeconds&&(queryParameters.gracePeriodSeconds=String(gracePeriodSeconds)),void 0!==labelSelector&&(queryParameters.labelSelector=labelSelector),void 0!==limit&&(queryParameters.limit=String(limit)),void 0!==orphanDependents&&(queryParameters.orphanDependents=String(orphanDependents)),void 0!==propagationPolicy&&(queryParameters.propagationPolicy=propagationPolicy),void 0!==resourceVersion&&(queryParameters.resourceVersion=resourceVersion),void 0!==resourceVersionMatch&&(queryParameters.resourceVersionMatch=resourceVersionMatch),void 0!==timeoutSeconds&&(queryParameters.timeoutSeconds=String(timeoutSeconds))}function applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy){void 0!==dryRun&&(queryParameters.dryRun=dryRun),void 0!==gracePeriodSeconds&&(queryParameters.gracePeriodSeconds=String(gracePeriodSeconds)),void 0!==orphanDependents&&(queryParameters.orphanDependents=String(orphanDependents)),void 0!==propagationPolicy&&(queryParameters.propagationPolicy=propagationPolicy)}function applyCreateHeaderParameters(headerParameters,options){headerParameters["Content-Type"]="application/json",headerParameters.Accept=["application/json"].join(","),void 0!==options&&Object.assign(headerParameters,options.headers)}function applyListHeaderParameters(headerParameters,options){headerParameters.Accept=["application/json"].join(","),void 0!==options&&Object.assign(headerParameters,options.headers)}function applyReadHeaderParameters(headerParameters,options){headerParameters.Accept=["application/json"].join(","),void 0!==options&&Object.assign(headerParameters,options.headers)}function applyPatchHeaderParameters(headerParameters,options){headerParameters["Content-Type"]="application/json",headerParameters.Accept=["application/json"].join(","),void 0!==options&&Object.assign(headerParameters,options.headers)}function applyReplaceHeaderParameters(headerParameters,options){headerParameters["Content-Type"]="application/json",headerParameters.Accept=["application/json"].join(","),void 0!==options&&Object.assign(headerParameters,options.headers)}function applyDeleteCollectionHeaderParameters(headerParameters,options){headerParameters["Content-Type"]="application/json",headerParameters.Accept=["application/json"].join(","),void 0!==options&&Object.assign(headerParameters,options.headers)}function applyDeleteHeaderParameters(headerParameters,options){headerParameters["Content-Type"]="application/json",headerParameters.Accept=["application/json"].join(","),void 0!==options&&Object.assign(headerParameters,options.headers)}__webpack_require__.d(__webpack_exports__,{VUf:()=>AipubBackendClient});class HttpError extends Error{constructor(response){super("HTTP request failed"),this.name="HttpError",this.response=response}getResponse(){return this.response}}async function fetchCreate(window,path,queryParameters,headerParameters,body){const requestInit={method:"POST",headers:headerParameters,credentials:"include",body:JSON.stringify(body)},res=await window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);if(!res.ok)throw new HttpError(res);return await res.json()}async function fetchList(window,path,queryParameters,headerParameters){const requestInit={method:"GET",headers:headerParameters,credentials:"include"},res=await window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);if(!res.ok)throw new HttpError(res);return await res.json()}async function fetchRead(window,path,queryParameters,headerParameters){const requestInit={method:"GET",headers:headerParameters,credentials:"include"},res=await window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);if(!res.ok)throw new HttpError(res);return await res.json()}async function fetchPatch(window,path,queryParameters,headerParameters,body){const requestInit={method:"PATCH",headers:headerParameters,credentials:"include",body:JSON.stringify(body)},res=await window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);if(!res.ok)throw new HttpError(res);return await res.json()}async function fetchReplace(window,path,queryParameters,headerParameters,body){const requestInit={method:"PUT",headers:headerParameters,credentials:"include",body:JSON.stringify(body)},res=await window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);if(!res.ok)throw new HttpError(res);return await res.json()}async function fetchDeleteCollection(window,path,queryParameters,headerParameters,body){const requestInit={method:"DELETE",headers:headerParameters,credentials:"include",body:JSON.stringify(body)},res=await window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);if(!res.ok)throw new HttpError(res);return await res.json()}async function fetchDelete(window,path,queryParameters,headerParameters,body){const requestInit={method:"DELETE",headers:headerParameters,credentials:"include",body:JSON.stringify(body)},res=await window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);if(!res.ok)throw new HttpError(res);return await res.json()}class PodApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedPod(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/pods`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listPodForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/pods`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedPod(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/pods`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedPod(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/pods/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async readNamespacedPodLog(name,namespace,container,previous,sinceSeconds,tailLines,timestamps,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/pods/{name}/log`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};void 0!==container&&(queryParameters.container=container),void 0!==previous&&(queryParameters.previous=String(previous)),void 0!==sinceSeconds&&(queryParameters.sinceSeconds=String(sinceSeconds)),void 0!==tailLines&&(queryParameters.tailLines=String(tailLines)),void 0!==timestamps&&(queryParameters.timestamps=String(timestamps));const headerParameters={};headerParameters.Accept=["application/json"].join(","),void 0!==options&&Object.assign(headerParameters,options.headers);const requestInit={method:"GET",headers:headerParameters,credentials:"include"},res=await window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);if(!res.ok)throw new HttpError(res);return await res.text()}async patchNamespacedPod(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/pods/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedPod(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/pods/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedPod(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/pods`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedPod(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/pods/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ClusterRoleApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createClusterRole(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterroles`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listClusterRole(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterroles`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readClusterRole(name,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterroles/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchClusterRole(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterroles/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceClusterRole(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterroles/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionClusterRole(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterroles`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteClusterRole(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterroles/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ClusterRoleBindingApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createClusterRoleBinding(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterrolebindings`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listClusterRoleBinding(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterrolebindings`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readClusterRoleBinding(name,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchClusterRoleBinding(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceClusterRoleBinding(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionClusterRoleBinding(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterrolebindings`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteClusterRoleBinding(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ConfigMapApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedConfigMap(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/configmaps`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listConfigMapForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/configmaps`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedConfigMap(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/configmaps`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedConfigMap(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/configmaps/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedConfigMap(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/configmaps/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedConfigMap(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/configmaps/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedConfigMap(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/configmaps`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedConfigMap(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/configmaps/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class CronJobApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedCronJob(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/cronjobs`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listCronJobForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/batch/v1/cronjobs`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedCronJob(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/cronjobs`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedCronJob(name,namespace,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/cronjobs/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedCronJob(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/cronjobs/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedCronJob(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/cronjobs/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedCronJob(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/cronjobs`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedCronJob(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/cronjobs/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class CSIDriverApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createCSIDriver(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csidrivers`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listCSIDriver(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csidrivers`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readCSIDriver(name,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csidrivers/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchCSIDriver(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csidrivers/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceCSIDriver(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csidrivers/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionCSIDriver(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csidrivers`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteCSIDriver(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csidrivers/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class CSINodeApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createCSINode(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csinodes`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listCSINode(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csinodes`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readCSINode(name,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csinodes/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchCSINode(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csinodes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceCSINode(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csinodes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionCSINode(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csinodes`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteCSINode(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/csinodes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class CustomResourceDefinitionApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createCustomResourceDefinition(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apiextensions.k8s.io/v1/customresourcedefinitions`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listCustomResourceDefinition(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apiextensions.k8s.io/v1/customresourcedefinitions`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readCustomResourceDefinition(name,options){const path=`${this.k8sUri}/apis/apiextensions.k8s.io/v1/customresourcedefinitions/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchCustomResourceDefinition(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/apiextensions.k8s.io/v1/customresourcedefinitions/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceCustomResourceDefinition(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apiextensions.k8s.io/v1/customresourcedefinitions/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionCustomResourceDefinition(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/apiextensions.k8s.io/v1/customresourcedefinitions`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteCustomResourceDefinition(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/apiextensions.k8s.io/v1/customresourcedefinitions/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class DaemonSetApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedDaemonSet(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/daemonsets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listDaemonSetForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apps/v1/daemonsets`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedDaemonSet(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/daemonsets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedDaemonSet(name,namespace,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedDaemonSet(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedDaemonSet(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedDaemonSet(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/daemonsets`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedDaemonSet(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class DeploymentApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedDeployment(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/deployments`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listDeploymentForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apps/v1/deployments`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedDeployment(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/deployments`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedDeployment(name,namespace,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/deployments/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedDeployment(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/deployments/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedDeployment(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/deployments/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedDeployment(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/deployments`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedDeployment(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/deployments/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class EndpointsApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedEndpoints(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/endpoints`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listEndpointsForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/endpoints`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedEndpoints(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/endpoints`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedEndpoints(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/endpoints/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedEndpoints(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/endpoints/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedEndpoints(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/endpoints/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedEndpoints(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/endpoints`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedEndpoints(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/endpoints/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class V1HorizontalPodAutoscalerApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedHorizontalPodAutoscaler(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listHorizontalPodAutoscalerForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/autoscaling/v1/horizontalpodautoscalers`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedHorizontalPodAutoscaler(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedHorizontalPodAutoscaler(name,namespace,options){const path=`${this.k8sUri}/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedHorizontalPodAutoscaler(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedHorizontalPodAutoscaler(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedHorizontalPodAutoscaler(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedHorizontalPodAutoscaler(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class V2HorizontalPodAutoscalerApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedHorizontalPodAutoscaler(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listHorizontalPodAutoscalerForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/autoscaling/v2/horizontalpodautoscalers`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedHorizontalPodAutoscaler(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedHorizontalPodAutoscaler(name,namespace,options){const path=`${this.k8sUri}/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedHorizontalPodAutoscaler(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedHorizontalPodAutoscaler(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedHorizontalPodAutoscaler(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedHorizontalPodAutoscaler(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/autoscaling/v2/namespaces/{namespace}/horizontalpodautoscalers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class IngressApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedIngress(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listIngressForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/ingresses`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedIngress(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedIngress(name,namespace,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedIngress(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedIngress(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedIngress(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedIngress(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/ingresses/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class IngressClassApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createIngressClass(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/ingressclasses`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listIngressClass(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/ingressclasses`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readIngressClass(name,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/ingressclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchIngressClass(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/ingressclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceIngressClass(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/ingressclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionIngressClass(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/ingressclasses`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteIngressClass(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/ingressclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class JobApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedJob(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/jobs`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listJobForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/batch/v1/jobs`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedJob(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/jobs`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedJob(name,namespace,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/jobs/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedJob(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/jobs/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedJob(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/jobs/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedJob(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/jobs`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedJob(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/batch/v1/namespaces/{namespace}/jobs/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class LimitRangeApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedLimitRange(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/limitranges`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listLimitRangeForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/limitranges`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedLimitRange(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/limitranges`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedLimitRange(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/limitranges/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedLimitRange(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/limitranges/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedLimitRange(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/limitranges/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedLimitRange(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/limitranges`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedLimitRange(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/limitranges/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class MutatingWebhookConfigurationApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createMutatingWebhookConfiguration(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listMutatingWebhookConfiguration(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readMutatingWebhookConfiguration(name,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchMutatingWebhookConfiguration(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceMutatingWebhookConfiguration(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionMutatingWebhookConfiguration(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteMutatingWebhookConfiguration(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/mutatingwebhookconfigurations/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class NamespaceApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespace(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listNamespace(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespace(name,options){const path=`${this.k8sUri}/api/v1/namespaces/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespace(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespace(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteNamespace(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class NetworkPolicyApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedNetworkPolicy(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listNetworkPolicyForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/networkpolicies`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedNetworkPolicy(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedNetworkPolicy(name,namespace,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedNetworkPolicy(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedNetworkPolicy(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedNetworkPolicy(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedNetworkPolicy(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class NodeApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNode(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/nodes`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listNode(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/nodes`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNode(name,options){const path=`${this.k8sUri}/api/v1/nodes/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNode(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/nodes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNode(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/nodes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNode(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/nodes`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNode(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/nodes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class PersistentVolumeApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createPersistentVolume(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/persistentvolumes`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listPersistentVolume(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/persistentvolumes`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readPersistentVolume(name,options){const path=`${this.k8sUri}/api/v1/persistentvolumes/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchPersistentVolume(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/persistentvolumes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replacePersistentVolume(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/persistentvolumes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionPersistentVolume(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/persistentvolumes`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deletePersistentVolume(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/persistentvolumes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class PersistentVolumeClaimApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedPersistentVolumeClaim(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/persistentvolumeclaims`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listPersistentVolumeClaimForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/persistentvolumeclaims`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedPersistentVolumeClaim(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/persistentvolumeclaims`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedPersistentVolumeClaim(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedPersistentVolumeClaim(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedPersistentVolumeClaim(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedPersistentVolumeClaim(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/persistentvolumeclaims`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedPersistentVolumeClaim(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class PodDisruptionBudgetApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedPodDisruptionBudget(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listPodDisruptionBudgetForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/policy/v1/poddisruptionbudgets`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedPodDisruptionBudget(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedPodDisruptionBudget(name,namespace,options){const path=`${this.k8sUri}/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedPodDisruptionBudget(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedPodDisruptionBudget(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedPodDisruptionBudget(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedPodDisruptionBudget(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/policy/v1/namespaces/{namespace}/poddisruptionbudgets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class PriorityClassApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createPriorityClass(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/scheduling.k8s.io/v1/priorityclasses`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listPriorityClass(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/scheduling.k8s.io/v1/priorityclasses`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readPriorityClass(name,options){const path=`${this.k8sUri}/apis/scheduling.k8s.io/v1/priorityclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchPriorityClass(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/scheduling.k8s.io/v1/priorityclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replacePriorityClass(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/scheduling.k8s.io/v1/priorityclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionPriorityClass(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/scheduling.k8s.io/v1/priorityclasses`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deletePriorityClass(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/scheduling.k8s.io/v1/priorityclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ReplicaSetApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedReplicaSet(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/replicasets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listReplicaSetForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apps/v1/replicasets`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedReplicaSet(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/replicasets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedReplicaSet(name,namespace,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/replicasets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedReplicaSet(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/replicasets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedReplicaSet(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/replicasets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedReplicaSet(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/replicasets`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedReplicaSet(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/replicasets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ResourceQuotaApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedResourceQuota(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/resourcequotas`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listResourceQuotaForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/resourcequotas`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedResourceQuota(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/resourcequotas`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedResourceQuota(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/resourcequotas/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedResourceQuota(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/resourcequotas/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedResourceQuota(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/resourcequotas/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedResourceQuota(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/resourcequotas`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedResourceQuota(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/resourcequotas/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class RoleApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedRole(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listRoleForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/roles`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedRole(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedRole(name,namespace,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedRole(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedRole(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedRole(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedRole(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class RoleBindingApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedRoleBinding(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listRoleBindingForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/rolebindings`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedRoleBinding(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedRoleBinding(name,namespace,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedRoleBinding(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedRoleBinding(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedRoleBinding(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedRoleBinding(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class SecretApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedSecret(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/secrets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listSecretForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/secrets`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedSecret(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/secrets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedSecret(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/secrets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedSecret(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/secrets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedSecret(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/secrets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedSecret(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/secrets`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedSecret(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/secrets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ServiceAccountApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedServiceAccount(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/serviceaccounts`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listServiceAccountForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/serviceaccounts`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedServiceAccount(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/serviceaccounts`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedServiceAccount(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/serviceaccounts/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedServiceAccount(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/serviceaccounts/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedServiceAccount(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/serviceaccounts/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedServiceAccount(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/serviceaccounts`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedServiceAccount(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/serviceaccounts/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ServiceApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedService(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/services`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listServiceForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/services`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedService(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/services`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedService(name,namespace,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/services/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedService(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/services/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedService(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/services/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedService(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/services`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedService(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/api/v1/namespaces/{namespace}/services/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class StatefulSetApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedStatefulSet(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/statefulsets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listStatefulSetForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apps/v1/statefulsets`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedStatefulSet(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/statefulsets`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedStatefulSet(name,namespace,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedStatefulSet(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedStatefulSet(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedStatefulSet(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/statefulsets`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedStatefulSet(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/apps/v1/namespaces/{namespace}/statefulsets/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class StorageClassApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createStorageClass(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/storageclasses`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listStorageClass(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/storageclasses`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readStorageClass(name,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/storageclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchStorageClass(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/storageclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceStorageClass(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/storageclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionStorageClass(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/storageclasses`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteStorageClass(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/storage.k8s.io/v1/storageclasses/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ValidatingWebhookConfigurationApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createValidatingWebhookConfiguration(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listValidatingWebhookConfiguration(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readValidatingWebhookConfiguration(name,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchValidatingWebhookConfiguration(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceValidatingWebhookConfiguration(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionValidatingWebhookConfiguration(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteValidatingWebhookConfiguration(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/admissionregistration.k8s.io/v1/validatingwebhookconfigurations/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class K8sApi{constructor(window,k8sUri){this.clusterRoleApi=new ClusterRoleApi(window,k8sUri),this.clusterRoleBindingApi=new ClusterRoleBindingApi(window,k8sUri),this.configMapApi=new ConfigMapApi(window,k8sUri),this.cronJobApi=new CronJobApi(window,k8sUri),this.csiDriverApi=new CSIDriverApi(window,k8sUri),this.csiNodeApi=new CSINodeApi(window,k8sUri),this.customResourceDefinitionApi=new CustomResourceDefinitionApi(window,k8sUri),this.daemonSetApi=new DaemonSetApi(window,k8sUri),this.deploymentApi=new DeploymentApi(window,k8sUri),this.endpointsApi=new EndpointsApi(window,k8sUri),this.v1HorizontalPodAutoscalerApi=new V1HorizontalPodAutoscalerApi(window,k8sUri),this.v2HorizontalPodAutoscalerApi=new V2HorizontalPodAutoscalerApi(window,k8sUri),this.ingressApi=new IngressApi(window,k8sUri),this.ingressClassApi=new IngressClassApi(window,k8sUri),this.jobApi=new JobApi(window,k8sUri),this.limitRangeApi=new LimitRangeApi(window,k8sUri),this.mutatingWebhookConfigurationApi=new MutatingWebhookConfigurationApi(window,k8sUri),this.namespaceApi=new NamespaceApi(window,k8sUri),this.networkPolicyApi=new NetworkPolicyApi(window,k8sUri),this.nodeApi=new NodeApi(window,k8sUri),this.persistentVolumeApi=new PersistentVolumeApi(window,k8sUri),this.persistentVolumeClaimApi=new PersistentVolumeClaimApi(window,k8sUri),this.podApi=new PodApi(window,k8sUri),this.podDisruptionBudgetApi=new PodDisruptionBudgetApi(window,k8sUri),this.priorityClassApi=new PriorityClassApi(window,k8sUri),this.replicaSetApi=new ReplicaSetApi(window,k8sUri),this.resourceQuotaApi=new ResourceQuotaApi(window,k8sUri),this.roleApi=new RoleApi(window,k8sUri),this.roleBindingApi=new RoleBindingApi(window,k8sUri),this.secretApi=new SecretApi(window,k8sUri),this.serviceAccountApi=new ServiceAccountApi(window,k8sUri),this.serviceApi=new ServiceApi(window,k8sUri),this.statefulSetApi=new StatefulSetApi(window,k8sUri),this.storageClassApi=new StorageClassApi(window,k8sUri),this.validatingWebhookConfigurationApi=new ValidatingWebhookConfigurationApi(window,k8sUri)}getClusterRoleApi(){return this.clusterRoleApi}getClusterRoleBindingApi(){return this.clusterRoleBindingApi}getConfigMapApi(){return this.configMapApi}getCronJobApi(){return this.cronJobApi}getCSIDriverApi(){return this.csiDriverApi}getCSINodeApi(){return this.csiNodeApi}getCustomResourceDefinitionApi(){return this.customResourceDefinitionApi}getDaemonSetApi(){return this.daemonSetApi}getDeploymentApi(){return this.deploymentApi}getEndpointsApi(){return this.endpointsApi}getV1HorizontalPodAutoscalerApi(){return this.v1HorizontalPodAutoscalerApi}getV2HorizontalPodAutoscalerApi(){return this.v2HorizontalPodAutoscalerApi}getIngressApi(){return this.ingressApi}getIngressClassApi(){return this.ingressClassApi}getJobApi(){return this.jobApi}getLimitRangeApi(){return this.limitRangeApi}getMutatingWebhookConfigurationApi(){return this.mutatingWebhookConfigurationApi}getNamespaceApi(){return this.namespaceApi}getNetworkPolicyApi(){return this.networkPolicyApi}getNodeApi(){return this.nodeApi}getPersistentVolumeApi(){return this.persistentVolumeApi}getPersistentVolumeClaimApi(){return this.persistentVolumeClaimApi}getPodApi(){return this.podApi}getPodDisruptionBudgetApi(){return this.podDisruptionBudgetApi}getPriorityClassApi(){return this.priorityClassApi}getReplicaSetApi(){return this.replicaSetApi}getResourceQuotaApi(){return this.resourceQuotaApi}getRoleApi(){return this.roleApi}getRoleBindingApi(){return this.roleBindingApi}getSecretApi(){return this.secretApi}getServiceAccountApi(){return this.serviceAccountApi}getServiceApi(){return this.serviceApi}getStatefulSetApi(){return this.statefulSetApi}getStorageClassApi(){return this.storageClassApi}getValidatingWebhookConfigurationApi(){return this.validatingWebhookConfigurationApi}}class OperationApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedOperation(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operations`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listOperationForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/operations`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedOperation(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operations`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedOperation(name,namespace,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operations/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedOperation(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operations/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedOperation(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operations/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedOperation(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operations`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedOperation(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operations/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class MIGConfigApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createMIGConfig(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/coaster.ten1010.io/v1/migconfigs`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listMIGConfig(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/coaster.ten1010.io/v1/migconfigs`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readMIGConfig(name,options){const path=`${this.k8sUri}/apis/coaster.ten1010.io/v1/migconfigs/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchMIGConfig(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/coaster.ten1010.io/v1/migconfigs/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceMIGConfig(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/coaster.ten1010.io/v1/migconfigs/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionMIGConfig(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/coaster.ten1010.io/v1/migconfigs`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteMIGConfig(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/coaster.ten1010.io/v1/migconfigs/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ResourceTypeApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createResourceType(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/resourcetypes`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listResourceType(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/resourcetypes`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readResourceType(name,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/resourcetypes/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchResourceType(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/resourcetypes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceResourceType(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/resourcetypes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionResourceType(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/resourcetypes`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteResourceType(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/resourcetypes/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class FtpServerApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedFtpServer(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/namespaces/{namespace}/ftpservers`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listFtpServerForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/ftpservers`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedFtpServer(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/namespaces/{namespace}/ftpservers`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedFtpServer(name,namespace,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/namespaces/{namespace}/ftpservers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedFtpServer(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/namespaces/{namespace}/ftpservers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedFtpServer(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/namespaces/{namespace}/ftpservers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedFtpServer(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/namespaces/{namespace}/ftpservers`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedFtpServer(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1/namespaces/{namespace}/ftpservers/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class HarborProjectGroupApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createHarborProjectGroup(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroups`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listHarborProjectGroup(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroups`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readHarborProjectGroup(name,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroups/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchHarborProjectGroup(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroups/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceHarborProjectGroup(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroups/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionHarborProjectGroup(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroups`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteHarborProjectGroup(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroups/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class HarborProjectGroupBindingApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createHarborProjectGroupBinding(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroupbindings`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listHarborProjectGroupBinding(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroupbindings`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readHarborProjectGroupBinding(name,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroupbindings/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchHarborProjectGroupBinding(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroupbindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceHarborProjectGroupBinding(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroupbindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionHarborProjectGroupBinding(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroupbindings`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteHarborProjectGroupBinding(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/harborprojectgroupbindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class NodeGroupApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNodeGroup(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroups`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listNodeGroup(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroups`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNodeGroup(name,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroups/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNodeGroup(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroups/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNodeGroup(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroups/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNodeGroup(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroups`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNodeGroup(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroups/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class NodeGroupBindingApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNodeGroupBinding(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroupbindings`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listNodeGroupBinding(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroupbindings`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNodeGroupBinding(name,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroupbindings/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNodeGroupBinding(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroupbindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNodeGroupBinding(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroupbindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNodeGroupBinding(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroupbindings`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNodeGroupBinding(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/nodegroupbindings/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class ProjectApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createProject(body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/projects`,queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listProject(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/projects`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readProject(name,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/projects/{name}`.replace("{name}",encodeURIComponent(String(name))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchProject(name,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/projects/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceProject(name,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/projects/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionProject(_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/projects`,queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteProject(name,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/project.ten1010.io/v1alpha1/projects/{name}`.replace("{name}",encodeURIComponent(String(name))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class OperationRevisionApi{constructor(window,k8sUri){this.window=window,this.k8sUri=k8sUri}async createNamespacedOperationRevision(namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operationrevisions`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyCreateQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyCreateHeaderParameters(headerParameters,options),await fetchCreate(this.window,path,queryParameters,headerParameters,body)}async listOperationRevisionForAllNamespaces(_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/operationrevisions`,queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async listNamespacedOperationRevision(namespace,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operationrevisions`.replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyListQueryParameters(queryParameters,_continue,fieldSelector,labelSelector,limit,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyListHeaderParameters(headerParameters,options),await fetchList(this.window,path,queryParameters,headerParameters)}async readNamespacedOperationRevision(name,namespace,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operationrevisions/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),headerParameters={};return applyReadHeaderParameters(headerParameters,options),await fetchRead(this.window,path,{},headerParameters)}async patchNamespacedOperationRevision(name,namespace,body,dryRun,fieldManager,fieldValidation,force,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operationrevisions/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyPatchQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation,force);const headerParameters={};return applyPatchHeaderParameters(headerParameters,options),await fetchPatch(this.window,path,queryParameters,headerParameters,body)}async replaceNamespacedOperationRevision(name,namespace,body,dryRun,fieldManager,fieldValidation,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operationrevisions/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyReplaceQueryParameters(queryParameters,dryRun,fieldManager,fieldValidation);const headerParameters={};return applyReplaceHeaderParameters(headerParameters,options),await fetchReplace(this.window,path,queryParameters,headerParameters,body)}async deleteCollectionNamespacedOperationRevision(namespace,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds,body,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operationrevisions`.replace("{namespace}",encodeURIComponent(namespace)),queryParameters={};applyDeleteCollectionQueryParameters(queryParameters,_continue,dryRun,fieldSelector,gracePeriodSeconds,labelSelector,limit,orphanDependents,propagationPolicy,resourceVersion,resourceVersionMatch,timeoutSeconds);const headerParameters={};return applyDeleteCollectionHeaderParameters(headerParameters,options),await fetchDeleteCollection(this.window,path,queryParameters,headerParameters,body)}async deleteNamespacedOperationRevision(name,namespace,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy,body,options){const path=`${this.k8sUri}/apis/aipub.ten1010.io/v1alpha1/namespaces/{namespace}/operationrevisions/{name}`.replace("{name}",encodeURIComponent(String(name))).replace("{namespace}",encodeURIComponent(String(namespace))),queryParameters={};applyDeleteQueryParameters(queryParameters,dryRun,gracePeriodSeconds,orphanDependents,propagationPolicy);const headerParameters={};return applyDeleteHeaderParameters(headerParameters,options),await fetchDelete(this.window,path,queryParameters,headerParameters,body)}}class K8sCrApi{constructor(window,k8sUri){this.ftpServerApi=new FtpServerApi(window,k8sUri),this.harborProjectGroupApi=new HarborProjectGroupApi(window,k8sUri),this.harborProjectGroupBindingApi=new HarborProjectGroupBindingApi(window,k8sUri),this.migConfigApi=new MIGConfigApi(window,k8sUri),this.nodeGroupApi=new NodeGroupApi(window,k8sUri),this.nodeGroupBindingApi=new NodeGroupBindingApi(window,k8sUri),this.operationApi=new OperationApi(window,k8sUri),this.operationRevisionApi=new OperationRevisionApi(window,k8sUri),this.projectApi=new ProjectApi(window,k8sUri),this.resourceTypeApi=new ResourceTypeApi(window,k8sUri)}getFtpServerApi(){return this.ftpServerApi}getHarborProjectGroupApi(){return this.harborProjectGroupApi}getHarborProjectGroupBindingApi(){return this.harborProjectGroupBindingApi}getMIGConfigApi(){return this.migConfigApi}getNodeGroupApi(){return this.nodeGroupApi}getNodeGroupBindingApi(){return this.nodeGroupBindingApi}getOperationApi(){return this.operationApi}getOperationRevisionApi(){return this.operationRevisionApi}getProjectApi(){return this.projectApi}getResourceTypeApi(){return this.resourceTypeApi}}class AipubBackendError extends Error{constructor(resBody,status){super("Request failed"),this.name="StatusError",this.resBody=resBody,this.status=status}getResBody(){return this.resBody}getStatus(){return this.status}}async function throwErrorIfNotSuccessful(res){if(res.ok)return;const resBody=await res.text();let err;try{err=new AipubBackendError(void 0,JSON.parse(resBody))}catch(e){err=new AipubBackendError(resBody,void 0)}throw err}class UserApi{constructor(window,backendUri){this.window=window,this.backendUri=backendUri}async createUser(user){const path=`${this.backendUri}${UserApi.USERS_PATH}`,headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"POST",headers:headerParameters,credentials:"include",body:JSON.stringify(user)},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async listUsers(pageOffset,pageSize,enabled,search,attributeQuery){const path=`${this.backendUri}${UserApi.USERS_PATH}`,queryParameters={};queryParameters.pageOffset=String(pageOffset),queryParameters.pageSize=String(pageSize),void 0!==enabled&&(queryParameters.enabled=String(enabled)),void 0!==search&&(queryParameters.search=search),void 0!==attributeQuery&&(queryParameters.attributeQuery=attributeQuery);const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async getUser(id){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}`.replace("{id}",encodeURIComponent(id)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async listRoleMappings(id){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}${UserApi.USERS_SUBRESOURCE_ROLE_MAPPINGS}`.replace("{id}",encodeURIComponent(id)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async listCredentials(id){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}${UserApi.USERS_SUBRESOURCE_CREDENTIALS}`.replace("{id}",encodeURIComponent(id)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async updateUser(id,user){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}`.replace("{id}",encodeURIComponent(id)),headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"PUT",headers:headerParameters,credentials:"include",body:JSON.stringify(user)},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async createRoleMappings(id,roles){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}${UserApi.USERS_SUBRESOURCE_ROLE_MAPPINGS}`.replace("{id}",encodeURIComponent(id)),headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"POST",headers:headerParameters,credentials:"include",body:JSON.stringify(roles)},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async deleteRoleMappings(id,roles){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}${UserApi.USERS_SUBRESOURCE_ROLE_MAPPINGS}`.replace("{id}",encodeURIComponent(id)),headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"DELETE",headers:headerParameters,credentials:"include",body:JSON.stringify(roles)},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async updateResetPassword(id,credential){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}${UserApi.USERS_SUBRESOURCE_RESET_PASSWORD}`.replace("{id}",encodeURIComponent(id)),headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"PUT",headers:headerParameters,credentials:"include",body:JSON.stringify(credential)},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async deleteCredential(id,credentialId){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}${UserApi.USERS_SUBRESOURCE_CREDENTIALS}/{credentialId}`.replace("{id}",encodeURIComponent(id)).replace("{credentialId}",encodeURIComponent(credentialId)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"DELETE",headers:headerParameters,credentials:"include"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async updateRegistryUserResetPassword(id,credential){let path=`${this.backendUri}${UserApi.USERS_PATH}/{id}${UserApi.USERS_SUBRESOURCE_REGISTRY_USER}${UserApi.REGISTRY_USER_SUBRESOURCE_RESET_PASSWORD}`;path=path.replace("{id}",encodeURIComponent(id));const headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"PUT",headers:headerParameters,credentials:"include",body:JSON.stringify(credential)},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async deleteUser(id){const path=`${this.backendUri}${UserApi.USERS_PATH}/{id}`.replace("{id}",encodeURIComponent(id)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"DELETE",headers:headerParameters,credentials:"include"},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}}UserApi.USERS_PATH="/api/v1alpha1/users",UserApi.USERS_SUBRESOURCE_ROLE_MAPPINGS="/rolemappings",UserApi.USERS_SUBRESOURCE_CREDENTIALS="/credentials",UserApi.USERS_SUBRESOURCE_RESET_PASSWORD="/resetpassword",UserApi.USERS_SUBRESOURCE_REGISTRY_USER="/registryuser",UserApi.REGISTRY_USER_SUBRESOURCE_RESET_PASSWORD="/resetpassword";class AipubRoleApi{constructor(window,backendUri){this.window=window,this.backendUri=backendUri}async listRoles(pageOffset,pageSize,search){const path=`${this.backendUri}${AipubRoleApi.ROLES_PATH}`,queryParameters={};queryParameters.pageOffset=String(pageOffset),queryParameters.pageSize=String(pageSize),void 0!==search&&(queryParameters.search=search);const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}}AipubRoleApi.ROLES_PATH="/api/v1alpha1/roles";class RepositoryApi{constructor(window,backendUri){this.window=window,this.backendUri=backendUri}async listRepositoriesForAllNamespaces(pageOffset,pageSize){const path=`${this.backendUri}${RepositoryApi.REPOSITORY_PATH}`,queryParameters={};queryParameters.pageOffset=String(pageOffset),queryParameters.pageSize=String(pageSize);const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async listRepositories(pageOffset,pageSize,namespaceId){const path=`${this.backendUri}${RepositoryApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${RepositoryApi.REPOSITORIES}`.replace("{namespaceId}",String(namespaceId)),queryParameters={};queryParameters.pageOffset=String(pageOffset),queryParameters.pageSize=String(pageSize);const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async getRepository(namespaceId,name){const path=`${this.backendUri}${RepositoryApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${RepositoryApi.REPOSITORIES}/{name}`.replace("{namespaceId}",String(namespaceId)).replace("{name}",String(name)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async updateRepository(namespaceId,name,repository){const path=`${this.backendUri}${RepositoryApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${RepositoryApi.REPOSITORIES}/{name}`.replace("{namespaceId}",String(namespaceId)).replace("{name}",String(name)),headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"PUT",headers:headerParameters,credentials:"include",body:JSON.stringify(repository)},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async deleteRepository(namespaceId,name){const path=`${this.backendUri}${RepositoryApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${RepositoryApi.REPOSITORIES}/{name}`.replace("{namespaceId}",String(namespaceId)).replace("{name}",String(name)),headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"DELETE",headers:headerParameters,credentials:"include"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}}RepositoryApi.IMAGE_NAMESPACE_PATH="/api/v1alpha1/imagenamespaces",RepositoryApi.REPOSITORY_PATH="/api/v1alpha1/repositories",RepositoryApi.REPOSITORIES="/repositories";class ImageNamespaceApi{constructor(window,backendUri){this.window=window,this.backendUri=backendUri}async createImageNamespace(namespace){const path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}`,headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"POST",headers:headerParameters,credentials:"include",body:JSON.stringify(namespace)},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async listImageNamespaces(pageOffset,pageSize,name,_public){const path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}`,queryParameters={};queryParameters.pageOffset=String(pageOffset),queryParameters.pageSize=String(pageSize),void 0!==name&&(queryParameters.name=name),void 0!==_public&&(queryParameters.public=String(_public));const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);await throwErrorIfNotSuccessful(res);const arr=await res.json();for(const obj of arr)obj._public=obj.public,delete obj.public;return arr}async getImageNamespace(id){const path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}`.replace("{id}",encodeURIComponent(id)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async listImageNamespaceLogs(id){const path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}${ImageNamespaceApi.IMAGE_NAMESPACES_SUBRESOURCE_LOGS}`.replace("{id}",encodeURIComponent(id)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async listImageNamespaceMembers(id){const path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}${ImageNamespaceApi.IMAGE_NAMESPACES_SUBRESOURCE_MEMBERS}`.replace("{id}",encodeURIComponent(id)),headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async getImageNamespaceMember(id,memberId){let path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}${ImageNamespaceApi.IMAGE_NAMESPACES_SUBRESOURCE_MEMBERS}/{memberId}`;path=path.replace("{id}",String(id)).replace("{memberId}",String(memberId));const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async updateImageNamespace(id,namespace){let path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}`;path=path.replace("{id}",String(id));const headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"PUT",headers:headerParameters,credentials:"include",body:JSON.stringify(namespace)},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async createImageNamespaceMember(id,member){let path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}${ImageNamespaceApi.IMAGE_NAMESPACES_SUBRESOURCE_MEMBERS}`;path=path.replace("{id}",String(id));const headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"POST",headers:headerParameters,credentials:"include",body:JSON.stringify(member)},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async updateImageNamespaceMember(id,memberId,member){let path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}${ImageNamespaceApi.IMAGE_NAMESPACES_SUBRESOURCE_MEMBERS}/{memberId}`;path=path.replace("{id}",String(id)).replace("{memberId}",String(memberId));const headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"PUT",headers:headerParameters,credentials:"include",body:JSON.stringify(member)},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async deleteImageNamespaceMember(id,memberId){let path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}${ImageNamespaceApi.IMAGE_NAMESPACES_SUBRESOURCE_MEMBERS}/{memberId}`;path=path.replace("{id}",String(id)).replace("{memberId}",String(memberId));const headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"DELETE",headers:headerParameters,credentials:"include"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async deleteImageNamespace(id){let path=`${this.backendUri}${ImageNamespaceApi.IMAGE_NAMESPACE_PATH}/{id}`;path=path.replace("{id}",String(id));const headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"DELETE",headers:headerParameters,credentials:"include"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}}ImageNamespaceApi.IMAGE_NAMESPACE_PATH="/api/v1alpha1/imagenamespaces",ImageNamespaceApi.IMAGE_NAMESPACES_SUBRESOURCE_LOGS="/logs",ImageNamespaceApi.IMAGE_NAMESPACES_SUBRESOURCE_MEMBERS="/members";class ArtifactApi{constructor(window,backendUri){this.window=window,this.backendUri=backendUri}async listArtifactsForAllRepositories(pageOffset,pageSize,namespaceId){const path=`${this.backendUri}${ArtifactApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${ArtifactApi.ARTIFACTS}`.replace("{namespaceId}",String(namespaceId)),queryParameters={};queryParameters.pageOffset=String(pageOffset),queryParameters.pageSize=String(pageSize);const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async listArtifacts(pageOffset,pageSize,namespaceId,repositoryName){let path=`${this.backendUri}${ArtifactApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${ArtifactApi.REPOSITORIES}/{repositoryName}${ArtifactApi.ARTIFACTS}`;path=path.replace("{namespaceId}",String(namespaceId)).replace("{repositoryName}",encodeURIComponent(repositoryName));const queryParameters={};queryParameters.pageOffset=String(pageOffset),queryParameters.pageSize=String(pageSize);const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async getArtifact(namespaceId,repositoryName,digest){let path=`${this.backendUri}${ArtifactApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${ArtifactApi.REPOSITORIES}/{repositoryName}${ArtifactApi.ARTIFACTS}/{digest}`;path=path.replace("{namespaceId}",String(namespaceId)).replace("{repositoryName}",encodeURIComponent(repositoryName)).replace("{digest}",encodeURIComponent(digest));const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async listArtifactTags(pageOffset,pageSize,namespaceId,repositoryName,digest){let path=`${this.backendUri}${ArtifactApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${ArtifactApi.REPOSITORIES}/{repositoryName}${ArtifactApi.ARTIFACTS}/{digest}/${ArtifactApi.TAGS}`;path=path.replace("{namespaceId}",String(namespaceId)).replace("{repositoryName}",encodeURIComponent(repositoryName)).replace("{digest}",encodeURIComponent(digest));const queryParameters={};queryParameters.pageOffset=String(pageOffset),queryParameters.pageSize=String(pageSize);const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams(queryParameters).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async createArtifactTag(namespaceId,repositoryName,digest,tag){let path=`${this.backendUri}${ArtifactApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${ArtifactApi.REPOSITORIES}/{repositoryName}${ArtifactApi.ARTIFACTS}/{digest}/${ArtifactApi.TAGS}`;path=path.replace("{namespaceId}",String(namespaceId)).replace("{repositoryName}",encodeURIComponent(repositoryName)).replace("{digest}",encodeURIComponent(digest));const headerParameters={"Content-Type":"application/json"};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"POST",headers:headerParameters,credentials:"include",body:JSON.stringify(tag)},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}async deleteArtifactTag(namespaceId,repositoryName,digest,tagName){let path=`${this.backendUri}${ArtifactApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${ArtifactApi.REPOSITORIES}/{repositoryName}${ArtifactApi.ARTIFACTS}/{digest}/${ArtifactApi.TAGS}/{tagName}`;path=path.replace("{namespaceId}",String(namespaceId)).replace("{repositoryName}",encodeURIComponent(repositoryName)).replace("{digest}",encodeURIComponent(digest)).replace("{tagName}",encodeURIComponent(tagName));const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"DELETE",headers:headerParameters,credentials:"include"},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}async deleteArtifact(namespaceId,repositoryName,digest){let path=`${this.backendUri}${ArtifactApi.IMAGE_NAMESPACE_PATH}/{namespaceId}${ArtifactApi.REPOSITORIES}/{repositoryName}${ArtifactApi.ARTIFACTS}/{digest}`;path=path.replace("{namespaceId}",String(namespaceId)).replace("{repositoryName}",encodeURIComponent(repositoryName)).replace("{digest}",encodeURIComponent(digest));const headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"DELETE",headers:headerParameters,credentials:"include"},res=await window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);await throwErrorIfNotSuccessful(res)}}ArtifactApi.IMAGE_NAMESPACE_PATH="/api/v1alpha1/imagenamespaces",ArtifactApi.REPOSITORIES="/repositories",ArtifactApi.ARTIFACTS="/artifacts",ArtifactApi.TAGS="/tags";class OpenidProviderInfoApi{constructor(window,backendUri){this.window=window,this.backendUri=backendUri}async getOpenidProviderInfo(){const path=`${this.backendUri}${OpenidProviderInfoApi.OPENID_PROVIDER_INFO_PATH}`,headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}}OpenidProviderInfoApi.OPENID_PROVIDER_INFO_PATH="/api/v1alpha1/openidproviderinfo";class ImageRegistryInfoApi{constructor(window,backendUri){this.window=window,this.backendUri=backendUri}async getImageRegistryInfo(){const path=`${this.backendUri}${ImageRegistryInfoApi.IMAGE_REGISTRY_INFO_PATH}`,headerParameters={};headerParameters.Accept=["application/json"].join(",");const requestInit={method:"GET",headers:headerParameters,credentials:"include",redirect:"follow"},res=await this.window.fetch(`${path}?${new URLSearchParams({}).toString()}`,requestInit);return await throwErrorIfNotSuccessful(res),await res.json()}}ImageRegistryInfoApi.IMAGE_REGISTRY_INFO_PATH="/api/v1alpha1/imageregistryinfo";class AipubBackendClient{constructor(window,backendUri){this.window=window,this.backendUri=backendUri,this.imageRegistryInfoApi=new ImageRegistryInfoApi(window,`${this.backendUri}`),this.imageNamespaceApi=new ImageNamespaceApi(window,`${this.backendUri}`),this.repositoryApi=new RepositoryApi(window,`${this.backendUri}`),this.artifactApi=new ArtifactApi(window,`${this.backendUri}`),this.roleApi=new AipubRoleApi(window,`${this.backendUri}`),this.openidProviderInfoApi=new OpenidProviderInfoApi(window,`${this.backendUri}`),this.userApi=new UserApi(window,`${this.backendUri}`),this.k8sApi=new K8sApi(window,`${this.backendUri}/api/v1alpha1/k8sproxy`),this.k8sCrApi=new K8sCrApi(window,`${this.backendUri}/api/v1alpha1/k8sproxy`)}login(){this.window.location.href=`${this.backendUri}/api/private`}async logout(){const res=await this.window.fetch(`${this.backendUri}${AipubBackendClient.LOGOUT_PATH}`,{method:"post",credentials:"include",redirect:"manual"});if(!res.redirected)throw new Error(`Response status of fetch is not 302 but ${res.status}`)}async whoami(){const res=await this.window.fetch(`${this.backendUri}${AipubBackendClient.SELF_SUBJECT_REVIEWS_PATH}`,{method:"post",credentials:"include",redirect:"follow",headers:{"Content-Type":"application/json"},body:JSON.stringify({})});return await throwErrorIfNotSuccessful(res),await res.json()}getImageRegistryInfoApi(){return this.imageRegistryInfoApi}getImageNamespaceApi(){return this.imageNamespaceApi}getRepositoryApi(){return this.repositoryApi}getArtifactApi(){return this.artifactApi}getRoleApi(){return this.roleApi}getOpenidProviderInfoApi(){return this.openidProviderInfoApi}getUserApi(){return this.userApi}getK8sApi(){return this.k8sApi}getK8sCrApi(){return this.k8sCrApi}}AipubBackendClient.LOGOUT_PATH="/logout",AipubBackendClient.SELF_SUBJECT_REVIEWS_PATH="/api/v1alpha1/selfsubjectreviews";class AdmissionregistrationV1ServiceReference{static getAttributeTypeMap(){return AdmissionregistrationV1ServiceReference.attributeTypeMap}}AdmissionregistrationV1ServiceReference.discriminator=void 0,AdmissionregistrationV1ServiceReference.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"},{name:"path",baseName:"path",type:"string"},{name:"port",baseName:"port",type:"number"}];class AdmissionregistrationV1WebhookClientConfig{static getAttributeTypeMap(){return AdmissionregistrationV1WebhookClientConfig.attributeTypeMap}}AdmissionregistrationV1WebhookClientConfig.discriminator=void 0,AdmissionregistrationV1WebhookClientConfig.attributeTypeMap=[{name:"caBundle",baseName:"caBundle",type:"string"},{name:"service",baseName:"service",type:"AdmissionregistrationV1ServiceReference"},{name:"url",baseName:"url",type:"string"}];class ApiextensionsV1ServiceReference{static getAttributeTypeMap(){return ApiextensionsV1ServiceReference.attributeTypeMap}}ApiextensionsV1ServiceReference.discriminator=void 0,ApiextensionsV1ServiceReference.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"},{name:"path",baseName:"path",type:"string"},{name:"port",baseName:"port",type:"number"}];class ApiextensionsV1WebhookClientConfig{static getAttributeTypeMap(){return ApiextensionsV1WebhookClientConfig.attributeTypeMap}}ApiextensionsV1WebhookClientConfig.discriminator=void 0,ApiextensionsV1WebhookClientConfig.attributeTypeMap=[{name:"caBundle",baseName:"caBundle",type:"string"},{name:"service",baseName:"service",type:"ApiextensionsV1ServiceReference"},{name:"url",baseName:"url",type:"string"}];class CoreV1EndpointPort{static getAttributeTypeMap(){return CoreV1EndpointPort.attributeTypeMap}}CoreV1EndpointPort.discriminator=void 0,CoreV1EndpointPort.attributeTypeMap=[{name:"appProtocol",baseName:"appProtocol",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"port",baseName:"port",type:"number"},{name:"protocol",baseName:"protocol",type:"string"}];class RbacV1Subject{static getAttributeTypeMap(){return RbacV1Subject.attributeTypeMap}}RbacV1Subject.discriminator=void 0,RbacV1Subject.attributeTypeMap=[{name:"apiGroup",baseName:"apiGroup",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"}];class StorageV1TokenRequest{static getAttributeTypeMap(){return StorageV1TokenRequest.attributeTypeMap}}StorageV1TokenRequest.discriminator=void 0,StorageV1TokenRequest.attributeTypeMap=[{name:"audience",baseName:"audience",type:"string"},{name:"expirationSeconds",baseName:"expirationSeconds",type:"number"}];class V1AWSElasticBlockStoreVolumeSource{static getAttributeTypeMap(){return V1AWSElasticBlockStoreVolumeSource.attributeTypeMap}}V1AWSElasticBlockStoreVolumeSource.discriminator=void 0,V1AWSElasticBlockStoreVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"partition",baseName:"partition",type:"number"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"volumeID",baseName:"volumeID",type:"string"}];class V1Affinity{static getAttributeTypeMap(){return V1Affinity.attributeTypeMap}}V1Affinity.discriminator=void 0,V1Affinity.attributeTypeMap=[{name:"nodeAffinity",baseName:"nodeAffinity",type:"V1NodeAffinity"},{name:"podAffinity",baseName:"podAffinity",type:"V1PodAffinity"},{name:"podAntiAffinity",baseName:"podAntiAffinity",type:"V1PodAntiAffinity"}];class V1AggregationRule{static getAttributeTypeMap(){return V1AggregationRule.attributeTypeMap}}V1AggregationRule.discriminator=void 0,V1AggregationRule.attributeTypeMap=[{name:"clusterRoleSelectors",baseName:"clusterRoleSelectors",type:"Array<V1LabelSelector>"}];class V1AppArmorProfile{static getAttributeTypeMap(){return V1AppArmorProfile.attributeTypeMap}}V1AppArmorProfile.discriminator=void 0,V1AppArmorProfile.attributeTypeMap=[{name:"localhostProfile",baseName:"localhostProfile",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1AttachedVolume{static getAttributeTypeMap(){return V1AttachedVolume.attributeTypeMap}}V1AttachedVolume.discriminator=void 0,V1AttachedVolume.attributeTypeMap=[{name:"devicePath",baseName:"devicePath",type:"string"},{name:"name",baseName:"name",type:"string"}];class V1AzureDiskVolumeSource{static getAttributeTypeMap(){return V1AzureDiskVolumeSource.attributeTypeMap}}V1AzureDiskVolumeSource.discriminator=void 0,V1AzureDiskVolumeSource.attributeTypeMap=[{name:"cachingMode",baseName:"cachingMode",type:"string"},{name:"diskName",baseName:"diskName",type:"string"},{name:"diskURI",baseName:"diskURI",type:"string"},{name:"fsType",baseName:"fsType",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"}];class V1AzureFilePersistentVolumeSource{static getAttributeTypeMap(){return V1AzureFilePersistentVolumeSource.attributeTypeMap}}V1AzureFilePersistentVolumeSource.discriminator=void 0,V1AzureFilePersistentVolumeSource.attributeTypeMap=[{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretName",baseName:"secretName",type:"string"},{name:"secretNamespace",baseName:"secretNamespace",type:"string"},{name:"shareName",baseName:"shareName",type:"string"}];class V1AzureFileVolumeSource{static getAttributeTypeMap(){return V1AzureFileVolumeSource.attributeTypeMap}}V1AzureFileVolumeSource.discriminator=void 0,V1AzureFileVolumeSource.attributeTypeMap=[{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretName",baseName:"secretName",type:"string"},{name:"shareName",baseName:"shareName",type:"string"}];class V1CSIDriver{static getAttributeTypeMap(){return V1CSIDriver.attributeTypeMap}}V1CSIDriver.discriminator=void 0,V1CSIDriver.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1CSIDriverSpec"}];class V1CSIDriverList{static getAttributeTypeMap(){return V1CSIDriverList.attributeTypeMap}}V1CSIDriverList.discriminator=void 0,V1CSIDriverList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1CSIDriver>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1CSIDriverSpec{static getAttributeTypeMap(){return V1CSIDriverSpec.attributeTypeMap}}V1CSIDriverSpec.discriminator=void 0,V1CSIDriverSpec.attributeTypeMap=[{name:"attachRequired",baseName:"attachRequired",type:"boolean"},{name:"fsGroupPolicy",baseName:"fsGroupPolicy",type:"string"},{name:"podInfoOnMount",baseName:"podInfoOnMount",type:"boolean"},{name:"requiresRepublish",baseName:"requiresRepublish",type:"boolean"},{name:"seLinuxMount",baseName:"seLinuxMount",type:"boolean"},{name:"storageCapacity",baseName:"storageCapacity",type:"boolean"},{name:"tokenRequests",baseName:"tokenRequests",type:"Array<StorageV1TokenRequest>"},{name:"volumeLifecycleModes",baseName:"volumeLifecycleModes",type:"Array<string>"}];class V1CSINode{static getAttributeTypeMap(){return V1CSINode.attributeTypeMap}}V1CSINode.discriminator=void 0,V1CSINode.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1CSINodeSpec"}];class V1CSINodeDriver{static getAttributeTypeMap(){return V1CSINodeDriver.attributeTypeMap}}V1CSINodeDriver.discriminator=void 0,V1CSINodeDriver.attributeTypeMap=[{name:"allocatable",baseName:"allocatable",type:"V1VolumeNodeResources"},{name:"name",baseName:"name",type:"string"},{name:"nodeID",baseName:"nodeID",type:"string"},{name:"topologyKeys",baseName:"topologyKeys",type:"Array<string>"}];class V1CSINodeList{static getAttributeTypeMap(){return V1CSINodeList.attributeTypeMap}}V1CSINodeList.discriminator=void 0,V1CSINodeList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1CSINode>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1CSINodeSpec{static getAttributeTypeMap(){return V1CSINodeSpec.attributeTypeMap}}V1CSINodeSpec.discriminator=void 0,V1CSINodeSpec.attributeTypeMap=[{name:"drivers",baseName:"drivers",type:"Array<V1CSINodeDriver>"}];class V1CSIPersistentVolumeSource{static getAttributeTypeMap(){return V1CSIPersistentVolumeSource.attributeTypeMap}}V1CSIPersistentVolumeSource.discriminator=void 0,V1CSIPersistentVolumeSource.attributeTypeMap=[{name:"controllerExpandSecretRef",baseName:"controllerExpandSecretRef",type:"V1SecretReference"},{name:"controllerPublishSecretRef",baseName:"controllerPublishSecretRef",type:"V1SecretReference"},{name:"driver",baseName:"driver",type:"string"},{name:"fsType",baseName:"fsType",type:"string"},{name:"nodeExpandSecretRef",baseName:"nodeExpandSecretRef",type:"V1SecretReference"},{name:"nodePublishSecretRef",baseName:"nodePublishSecretRef",type:"V1SecretReference"},{name:"nodeStageSecretRef",baseName:"nodeStageSecretRef",type:"V1SecretReference"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"volumeAttributes",baseName:"volumeAttributes",type:"{ [key: string]: string; }"},{name:"volumeHandle",baseName:"volumeHandle",type:"string"}];class V1CSIVolumeSource{static getAttributeTypeMap(){return V1CSIVolumeSource.attributeTypeMap}}V1CSIVolumeSource.discriminator=void 0,V1CSIVolumeSource.attributeTypeMap=[{name:"driver",baseName:"driver",type:"string"},{name:"fsType",baseName:"fsType",type:"string"},{name:"nodePublishSecretRef",baseName:"nodePublishSecretRef",type:"V1LocalObjectReference"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"volumeAttributes",baseName:"volumeAttributes",type:"{ [key: string]: string; }"}];class V1Capabilities{static getAttributeTypeMap(){return V1Capabilities.attributeTypeMap}}V1Capabilities.discriminator=void 0,V1Capabilities.attributeTypeMap=[{name:"add",baseName:"add",type:"Array<string>"},{name:"drop",baseName:"drop",type:"Array<string>"}];class V1CephFSPersistentVolumeSource{static getAttributeTypeMap(){return V1CephFSPersistentVolumeSource.attributeTypeMap}}V1CephFSPersistentVolumeSource.discriminator=void 0,V1CephFSPersistentVolumeSource.attributeTypeMap=[{name:"monitors",baseName:"monitors",type:"Array<string>"},{name:"path",baseName:"path",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretFile",baseName:"secretFile",type:"string"},{name:"secretRef",baseName:"secretRef",type:"V1SecretReference"},{name:"user",baseName:"user",type:"string"}];class V1CephFSVolumeSource{static getAttributeTypeMap(){return V1CephFSVolumeSource.attributeTypeMap}}V1CephFSVolumeSource.discriminator=void 0,V1CephFSVolumeSource.attributeTypeMap=[{name:"monitors",baseName:"monitors",type:"Array<string>"},{name:"path",baseName:"path",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretFile",baseName:"secretFile",type:"string"},{name:"secretRef",baseName:"secretRef",type:"V1LocalObjectReference"},{name:"user",baseName:"user",type:"string"}];class V1CinderPersistentVolumeSource{static getAttributeTypeMap(){return V1CinderPersistentVolumeSource.attributeTypeMap}}V1CinderPersistentVolumeSource.discriminator=void 0,V1CinderPersistentVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1SecretReference"},{name:"volumeID",baseName:"volumeID",type:"string"}];class V1CinderVolumeSource{static getAttributeTypeMap(){return V1CinderVolumeSource.attributeTypeMap}}V1CinderVolumeSource.discriminator=void 0,V1CinderVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1LocalObjectReference"},{name:"volumeID",baseName:"volumeID",type:"string"}];class V1ClaimSource{static getAttributeTypeMap(){return V1ClaimSource.attributeTypeMap}}V1ClaimSource.discriminator=void 0,V1ClaimSource.attributeTypeMap=[{name:"resourceClaimName",baseName:"resourceClaimName",type:"string"},{name:"resourceClaimTemplateName",baseName:"resourceClaimTemplateName",type:"string"}];class V1ClientIPConfig{static getAttributeTypeMap(){return V1ClientIPConfig.attributeTypeMap}}V1ClientIPConfig.discriminator=void 0,V1ClientIPConfig.attributeTypeMap=[{name:"timeoutSeconds",baseName:"timeoutSeconds",type:"number"}];class V1ClusterRole{static getAttributeTypeMap(){return V1ClusterRole.attributeTypeMap}}V1ClusterRole.discriminator=void 0,V1ClusterRole.attributeTypeMap=[{name:"aggregationRule",baseName:"aggregationRule",type:"V1AggregationRule"},{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"rules",baseName:"rules",type:"Array<V1PolicyRule>"}];class V1ClusterRoleBinding{static getAttributeTypeMap(){return V1ClusterRoleBinding.attributeTypeMap}}V1ClusterRoleBinding.discriminator=void 0,V1ClusterRoleBinding.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"roleRef",baseName:"roleRef",type:"V1RoleRef"},{name:"subjects",baseName:"subjects",type:"Array<RbacV1Subject>"}];class V1ClusterRoleBindingList{static getAttributeTypeMap(){return V1ClusterRoleBindingList.attributeTypeMap}}V1ClusterRoleBindingList.discriminator=void 0,V1ClusterRoleBindingList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1ClusterRoleBinding>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1ClusterRoleList{static getAttributeTypeMap(){return V1ClusterRoleList.attributeTypeMap}}V1ClusterRoleList.discriminator=void 0,V1ClusterRoleList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1ClusterRole>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1ClusterTrustBundleProjection{static getAttributeTypeMap(){return V1ClusterTrustBundleProjection.attributeTypeMap}}V1ClusterTrustBundleProjection.discriminator=void 0,V1ClusterTrustBundleProjection.attributeTypeMap=[{name:"labelSelector",baseName:"labelSelector",type:"V1LabelSelector"},{name:"name",baseName:"name",type:"string"},{name:"optional",baseName:"optional",type:"boolean"},{name:"path",baseName:"path",type:"string"},{name:"signerName",baseName:"signerName",type:"string"}];class V1Condition{static getAttributeTypeMap(){return V1Condition.attributeTypeMap}}V1Condition.discriminator=void 0,V1Condition.attributeTypeMap=[{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"observedGeneration",baseName:"observedGeneration",type:"number"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1ConfigMap{static getAttributeTypeMap(){return V1ConfigMap.attributeTypeMap}}V1ConfigMap.discriminator=void 0,V1ConfigMap.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"binaryData",baseName:"binaryData",type:"{ [key: string]: string; }"},{name:"data",baseName:"data",type:"{ [key: string]: string; }"},{name:"immutable",baseName:"immutable",type:"boolean"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"}];class V1ConfigMapEnvSource{static getAttributeTypeMap(){return V1ConfigMapEnvSource.attributeTypeMap}}V1ConfigMapEnvSource.discriminator=void 0,V1ConfigMapEnvSource.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"optional",baseName:"optional",type:"boolean"}];class V1ConfigMapKeySelector{static getAttributeTypeMap(){return V1ConfigMapKeySelector.attributeTypeMap}}V1ConfigMapKeySelector.discriminator=void 0,V1ConfigMapKeySelector.attributeTypeMap=[{name:"key",baseName:"key",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"optional",baseName:"optional",type:"boolean"}];class V1ConfigMapList{static getAttributeTypeMap(){return V1ConfigMapList.attributeTypeMap}}V1ConfigMapList.discriminator=void 0,V1ConfigMapList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1ConfigMap>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1ConfigMapNodeConfigSource{static getAttributeTypeMap(){return V1ConfigMapNodeConfigSource.attributeTypeMap}}V1ConfigMapNodeConfigSource.discriminator=void 0,V1ConfigMapNodeConfigSource.attributeTypeMap=[{name:"kubeletConfigKey",baseName:"kubeletConfigKey",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"},{name:"resourceVersion",baseName:"resourceVersion",type:"string"},{name:"uid",baseName:"uid",type:"string"}];class V1ConfigMapProjection{static getAttributeTypeMap(){return V1ConfigMapProjection.attributeTypeMap}}V1ConfigMapProjection.discriminator=void 0,V1ConfigMapProjection.attributeTypeMap=[{name:"items",baseName:"items",type:"Array<V1KeyToPath>"},{name:"name",baseName:"name",type:"string"},{name:"optional",baseName:"optional",type:"boolean"}];class V1ConfigMapVolumeSource{static getAttributeTypeMap(){return V1ConfigMapVolumeSource.attributeTypeMap}}V1ConfigMapVolumeSource.discriminator=void 0,V1ConfigMapVolumeSource.attributeTypeMap=[{name:"defaultMode",baseName:"defaultMode",type:"number"},{name:"items",baseName:"items",type:"Array<V1KeyToPath>"},{name:"name",baseName:"name",type:"string"},{name:"optional",baseName:"optional",type:"boolean"}];class V1Container{static getAttributeTypeMap(){return V1Container.attributeTypeMap}}V1Container.discriminator=void 0,V1Container.attributeTypeMap=[{name:"args",baseName:"args",type:"Array<string>"},{name:"command",baseName:"command",type:"Array<string>"},{name:"env",baseName:"env",type:"Array<V1EnvVar>"},{name:"envFrom",baseName:"envFrom",type:"Array<V1EnvFromSource>"},{name:"image",baseName:"image",type:"string"},{name:"imagePullPolicy",baseName:"imagePullPolicy",type:"string"},{name:"lifecycle",baseName:"lifecycle",type:"V1Lifecycle"},{name:"livenessProbe",baseName:"livenessProbe",type:"V1Probe"},{name:"name",baseName:"name",type:"string"},{name:"ports",baseName:"ports",type:"Array<V1ContainerPort>"},{name:"readinessProbe",baseName:"readinessProbe",type:"V1Probe"},{name:"resizePolicy",baseName:"resizePolicy",type:"Array<V1ContainerResizePolicy>"},{name:"resources",baseName:"resources",type:"V1ResourceRequirements"},{name:"restartPolicy",baseName:"restartPolicy",type:"string"},{name:"securityContext",baseName:"securityContext",type:"V1SecurityContext"},{name:"startupProbe",baseName:"startupProbe",type:"V1Probe"},{name:"stdin",baseName:"stdin",type:"boolean"},{name:"stdinOnce",baseName:"stdinOnce",type:"boolean"},{name:"terminationMessagePath",baseName:"terminationMessagePath",type:"string"},{name:"terminationMessagePolicy",baseName:"terminationMessagePolicy",type:"string"},{name:"tty",baseName:"tty",type:"boolean"},{name:"volumeDevices",baseName:"volumeDevices",type:"Array<V1VolumeDevice>"},{name:"volumeMounts",baseName:"volumeMounts",type:"Array<V1VolumeMount>"},{name:"workingDir",baseName:"workingDir",type:"string"}];class V1ContainerImage{static getAttributeTypeMap(){return V1ContainerImage.attributeTypeMap}}V1ContainerImage.discriminator=void 0,V1ContainerImage.attributeTypeMap=[{name:"names",baseName:"names",type:"Array<string>"},{name:"sizeBytes",baseName:"sizeBytes",type:"number"}];class V1ContainerPort{static getAttributeTypeMap(){return V1ContainerPort.attributeTypeMap}}V1ContainerPort.discriminator=void 0,V1ContainerPort.attributeTypeMap=[{name:"containerPort",baseName:"containerPort",type:"number"},{name:"hostIP",baseName:"hostIP",type:"string"},{name:"hostPort",baseName:"hostPort",type:"number"},{name:"name",baseName:"name",type:"string"},{name:"protocol",baseName:"protocol",type:"string"}];class V1ContainerResizePolicy{static getAttributeTypeMap(){return V1ContainerResizePolicy.attributeTypeMap}}V1ContainerResizePolicy.discriminator=void 0,V1ContainerResizePolicy.attributeTypeMap=[{name:"resourceName",baseName:"resourceName",type:"string"},{name:"restartPolicy",baseName:"restartPolicy",type:"string"}];class V1ContainerState{static getAttributeTypeMap(){return V1ContainerState.attributeTypeMap}}V1ContainerState.discriminator=void 0,V1ContainerState.attributeTypeMap=[{name:"running",baseName:"running",type:"V1ContainerStateRunning"},{name:"terminated",baseName:"terminated",type:"V1ContainerStateTerminated"},{name:"waiting",baseName:"waiting",type:"V1ContainerStateWaiting"}];class V1ContainerStateRunning{static getAttributeTypeMap(){return V1ContainerStateRunning.attributeTypeMap}}V1ContainerStateRunning.discriminator=void 0,V1ContainerStateRunning.attributeTypeMap=[{name:"startedAt",baseName:"startedAt",type:"Date"}];class V1ContainerStateTerminated{static getAttributeTypeMap(){return V1ContainerStateTerminated.attributeTypeMap}}V1ContainerStateTerminated.discriminator=void 0,V1ContainerStateTerminated.attributeTypeMap=[{name:"containerID",baseName:"containerID",type:"string"},{name:"exitCode",baseName:"exitCode",type:"number"},{name:"finishedAt",baseName:"finishedAt",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"signal",baseName:"signal",type:"number"},{name:"startedAt",baseName:"startedAt",type:"Date"}];class V1ContainerStateWaiting{static getAttributeTypeMap(){return V1ContainerStateWaiting.attributeTypeMap}}V1ContainerStateWaiting.discriminator=void 0,V1ContainerStateWaiting.attributeTypeMap=[{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"}];class V1ContainerStatus{static getAttributeTypeMap(){return V1ContainerStatus.attributeTypeMap}}V1ContainerStatus.discriminator=void 0,V1ContainerStatus.attributeTypeMap=[{name:"allocatedResources",baseName:"allocatedResources",type:"{ [key: string]: string; }"},{name:"containerID",baseName:"containerID",type:"string"},{name:"image",baseName:"image",type:"string"},{name:"imageID",baseName:"imageID",type:"string"},{name:"lastState",baseName:"lastState",type:"V1ContainerState"},{name:"name",baseName:"name",type:"string"},{name:"ready",baseName:"ready",type:"boolean"},{name:"resources",baseName:"resources",type:"V1ResourceRequirements"},{name:"restartCount",baseName:"restartCount",type:"number"},{name:"started",baseName:"started",type:"boolean"},{name:"state",baseName:"state",type:"V1ContainerState"},{name:"volumeMounts",baseName:"volumeMounts",type:"Array<V1VolumeMountStatus>"}];class V1CronJob{static getAttributeTypeMap(){return V1CronJob.attributeTypeMap}}V1CronJob.discriminator=void 0,V1CronJob.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1CronJobSpec"},{name:"status",baseName:"status",type:"V1CronJobStatus"}];class V1CronJobList{static getAttributeTypeMap(){return V1CronJobList.attributeTypeMap}}V1CronJobList.discriminator=void 0,V1CronJobList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1CronJob>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1CronJobSpec{static getAttributeTypeMap(){return V1CronJobSpec.attributeTypeMap}}V1CronJobSpec.discriminator=void 0,V1CronJobSpec.attributeTypeMap=[{name:"concurrencyPolicy",baseName:"concurrencyPolicy",type:"string"},{name:"failedJobsHistoryLimit",baseName:"failedJobsHistoryLimit",type:"number"},{name:"jobTemplate",baseName:"jobTemplate",type:"V1JobTemplateSpec"},{name:"schedule",baseName:"schedule",type:"string"},{name:"startingDeadlineSeconds",baseName:"startingDeadlineSeconds",type:"number"},{name:"successfulJobsHistoryLimit",baseName:"successfulJobsHistoryLimit",type:"number"},{name:"suspend",baseName:"suspend",type:"boolean"},{name:"timeZone",baseName:"timeZone",type:"string"}];class V1CronJobStatus{static getAttributeTypeMap(){return V1CronJobStatus.attributeTypeMap}}V1CronJobStatus.discriminator=void 0,V1CronJobStatus.attributeTypeMap=[{name:"active",baseName:"active",type:"Array<V1ObjectReference>"},{name:"lastScheduleTime",baseName:"lastScheduleTime",type:"Date"},{name:"lastSuccessfulTime",baseName:"lastSuccessfulTime",type:"Date"}];class V1CrossVersionObjectReference{static getAttributeTypeMap(){return V1CrossVersionObjectReference.attributeTypeMap}}V1CrossVersionObjectReference.discriminator=void 0,V1CrossVersionObjectReference.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"}];class V1CustomResourceColumnDefinition{static getAttributeTypeMap(){return V1CustomResourceColumnDefinition.attributeTypeMap}}V1CustomResourceColumnDefinition.discriminator=void 0,V1CustomResourceColumnDefinition.attributeTypeMap=[{name:"description",baseName:"description",type:"string"},{name:"format",baseName:"format",type:"string"},{name:"jsonPath",baseName:"jsonPath",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"priority",baseName:"priority",type:"number"},{name:"type",baseName:"type",type:"string"}];class V1CustomResourceConversion{static getAttributeTypeMap(){return V1CustomResourceConversion.attributeTypeMap}}V1CustomResourceConversion.discriminator=void 0,V1CustomResourceConversion.attributeTypeMap=[{name:"strategy",baseName:"strategy",type:"string"},{name:"webhook",baseName:"webhook",type:"V1WebhookConversion"}];class V1CustomResourceDefinition{static getAttributeTypeMap(){return V1CustomResourceDefinition.attributeTypeMap}}V1CustomResourceDefinition.discriminator=void 0,V1CustomResourceDefinition.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1CustomResourceDefinitionSpec"},{name:"status",baseName:"status",type:"V1CustomResourceDefinitionStatus"}];class V1CustomResourceDefinitionCondition{static getAttributeTypeMap(){return V1CustomResourceDefinitionCondition.attributeTypeMap}}V1CustomResourceDefinitionCondition.discriminator=void 0,V1CustomResourceDefinitionCondition.attributeTypeMap=[{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1CustomResourceDefinitionList{static getAttributeTypeMap(){return V1CustomResourceDefinitionList.attributeTypeMap}}V1CustomResourceDefinitionList.discriminator=void 0,V1CustomResourceDefinitionList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1CustomResourceDefinition>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1CustomResourceDefinitionNames{static getAttributeTypeMap(){return V1CustomResourceDefinitionNames.attributeTypeMap}}V1CustomResourceDefinitionNames.discriminator=void 0,V1CustomResourceDefinitionNames.attributeTypeMap=[{name:"categories",baseName:"categories",type:"Array<string>"},{name:"kind",baseName:"kind",type:"string"},{name:"listKind",baseName:"listKind",type:"string"},{name:"plural",baseName:"plural",type:"string"},{name:"shortNames",baseName:"shortNames",type:"Array<string>"},{name:"singular",baseName:"singular",type:"string"}];class V1CustomResourceDefinitionSpec{static getAttributeTypeMap(){return V1CustomResourceDefinitionSpec.attributeTypeMap}}V1CustomResourceDefinitionSpec.discriminator=void 0,V1CustomResourceDefinitionSpec.attributeTypeMap=[{name:"conversion",baseName:"conversion",type:"V1CustomResourceConversion"},{name:"group",baseName:"group",type:"string"},{name:"names",baseName:"names",type:"V1CustomResourceDefinitionNames"},{name:"preserveUnknownFields",baseName:"preserveUnknownFields",type:"boolean"},{name:"scope",baseName:"scope",type:"string"},{name:"versions",baseName:"versions",type:"Array<V1CustomResourceDefinitionVersion>"}];class V1CustomResourceDefinitionStatus{static getAttributeTypeMap(){return V1CustomResourceDefinitionStatus.attributeTypeMap}}V1CustomResourceDefinitionStatus.discriminator=void 0,V1CustomResourceDefinitionStatus.attributeTypeMap=[{name:"acceptedNames",baseName:"acceptedNames",type:"V1CustomResourceDefinitionNames"},{name:"conditions",baseName:"conditions",type:"Array<V1CustomResourceDefinitionCondition>"},{name:"storedVersions",baseName:"storedVersions",type:"Array<string>"}];class V1CustomResourceDefinitionVersion{static getAttributeTypeMap(){return V1CustomResourceDefinitionVersion.attributeTypeMap}}V1CustomResourceDefinitionVersion.discriminator=void 0,V1CustomResourceDefinitionVersion.attributeTypeMap=[{name:"additionalPrinterColumns",baseName:"additionalPrinterColumns",type:"Array<V1CustomResourceColumnDefinition>"},{name:"deprecated",baseName:"deprecated",type:"boolean"},{name:"deprecationWarning",baseName:"deprecationWarning",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"schema",baseName:"schema",type:"V1CustomResourceValidation"},{name:"selectableFields",baseName:"selectableFields",type:"Array<V1SelectableField>"},{name:"served",baseName:"served",type:"boolean"},{name:"storage",baseName:"storage",type:"boolean"},{name:"subresources",baseName:"subresources",type:"V1CustomResourceSubresources"}];class V1CustomResourceSubresourceScale{static getAttributeTypeMap(){return V1CustomResourceSubresourceScale.attributeTypeMap}}V1CustomResourceSubresourceScale.discriminator=void 0,V1CustomResourceSubresourceScale.attributeTypeMap=[{name:"labelSelectorPath",baseName:"labelSelectorPath",type:"string"},{name:"specReplicasPath",baseName:"specReplicasPath",type:"string"},{name:"statusReplicasPath",baseName:"statusReplicasPath",type:"string"}];class V1CustomResourceSubresources{static getAttributeTypeMap(){return V1CustomResourceSubresources.attributeTypeMap}}V1CustomResourceSubresources.discriminator=void 0,V1CustomResourceSubresources.attributeTypeMap=[{name:"scale",baseName:"scale",type:"V1CustomResourceSubresourceScale"},{name:"status",baseName:"status",type:"object"}];class V1CustomResourceValidation{static getAttributeTypeMap(){return V1CustomResourceValidation.attributeTypeMap}}V1CustomResourceValidation.discriminator=void 0,V1CustomResourceValidation.attributeTypeMap=[{name:"openAPIV3Schema",baseName:"openAPIV3Schema",type:"V1JSONSchemaProps"}];class V1DaemonEndpoint{static getAttributeTypeMap(){return V1DaemonEndpoint.attributeTypeMap}}V1DaemonEndpoint.discriminator=void 0,V1DaemonEndpoint.attributeTypeMap=[{name:"Port",baseName:"Port",type:"number"}];class V1DaemonSet{static getAttributeTypeMap(){return V1DaemonSet.attributeTypeMap}}V1DaemonSet.discriminator=void 0,V1DaemonSet.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1DaemonSetSpec"},{name:"status",baseName:"status",type:"V1DaemonSetStatus"}];class V1DaemonSetCondition{static getAttributeTypeMap(){return V1DaemonSetCondition.attributeTypeMap}}V1DaemonSetCondition.discriminator=void 0,V1DaemonSetCondition.attributeTypeMap=[{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1DaemonSetList{static getAttributeTypeMap(){return V1DaemonSetList.attributeTypeMap}}V1DaemonSetList.discriminator=void 0,V1DaemonSetList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1DaemonSet>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1DaemonSetSpec{static getAttributeTypeMap(){return V1DaemonSetSpec.attributeTypeMap}}V1DaemonSetSpec.discriminator=void 0,V1DaemonSetSpec.attributeTypeMap=[{name:"minReadySeconds",baseName:"minReadySeconds",type:"number"},{name:"revisionHistoryLimit",baseName:"revisionHistoryLimit",type:"number"},{name:"selector",baseName:"selector",type:"V1LabelSelector"},{name:"template",baseName:"template",type:"V1PodTemplateSpec"},{name:"updateStrategy",baseName:"updateStrategy",type:"V1DaemonSetUpdateStrategy"}];class V1DaemonSetStatus{static getAttributeTypeMap(){return V1DaemonSetStatus.attributeTypeMap}}V1DaemonSetStatus.discriminator=void 0,V1DaemonSetStatus.attributeTypeMap=[{name:"collisionCount",baseName:"collisionCount",type:"number"},{name:"conditions",baseName:"conditions",type:"Array<V1DaemonSetCondition>"},{name:"currentNumberScheduled",baseName:"currentNumberScheduled",type:"number"},{name:"desiredNumberScheduled",baseName:"desiredNumberScheduled",type:"number"},{name:"numberAvailable",baseName:"numberAvailable",type:"number"},{name:"numberMisscheduled",baseName:"numberMisscheduled",type:"number"},{name:"numberReady",baseName:"numberReady",type:"number"},{name:"numberUnavailable",baseName:"numberUnavailable",type:"number"},{name:"observedGeneration",baseName:"observedGeneration",type:"number"},{name:"updatedNumberScheduled",baseName:"updatedNumberScheduled",type:"number"}];class V1DaemonSetUpdateStrategy{static getAttributeTypeMap(){return V1DaemonSetUpdateStrategy.attributeTypeMap}}V1DaemonSetUpdateStrategy.discriminator=void 0,V1DaemonSetUpdateStrategy.attributeTypeMap=[{name:"rollingUpdate",baseName:"rollingUpdate",type:"V1RollingUpdateDaemonSet"},{name:"type",baseName:"type",type:"string"}];class V1DeleteOptions{static getAttributeTypeMap(){return V1DeleteOptions.attributeTypeMap}}V1DeleteOptions.discriminator=void 0,V1DeleteOptions.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"dryRun",baseName:"dryRun",type:"Array<string>"},{name:"gracePeriodSeconds",baseName:"gracePeriodSeconds",type:"number"},{name:"kind",baseName:"kind",type:"string"},{name:"orphanDependents",baseName:"orphanDependents",type:"boolean"},{name:"preconditions",baseName:"preconditions",type:"V1Preconditions"},{name:"propagationPolicy",baseName:"propagationPolicy",type:"string"}];class V1Deployment{static getAttributeTypeMap(){return V1Deployment.attributeTypeMap}}V1Deployment.discriminator=void 0,V1Deployment.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1DeploymentSpec"},{name:"status",baseName:"status",type:"V1DeploymentStatus"}];class V1DeploymentCondition{static getAttributeTypeMap(){return V1DeploymentCondition.attributeTypeMap}}V1DeploymentCondition.discriminator=void 0,V1DeploymentCondition.attributeTypeMap=[{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"lastUpdateTime",baseName:"lastUpdateTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1DeploymentList{static getAttributeTypeMap(){return V1DeploymentList.attributeTypeMap}}V1DeploymentList.discriminator=void 0,V1DeploymentList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Deployment>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1DeploymentSpec{static getAttributeTypeMap(){return V1DeploymentSpec.attributeTypeMap}}V1DeploymentSpec.discriminator=void 0,V1DeploymentSpec.attributeTypeMap=[{name:"minReadySeconds",baseName:"minReadySeconds",type:"number"},{name:"paused",baseName:"paused",type:"boolean"},{name:"progressDeadlineSeconds",baseName:"progressDeadlineSeconds",type:"number"},{name:"replicas",baseName:"replicas",type:"number"},{name:"revisionHistoryLimit",baseName:"revisionHistoryLimit",type:"number"},{name:"selector",baseName:"selector",type:"V1LabelSelector"},{name:"strategy",baseName:"strategy",type:"V1DeploymentStrategy"},{name:"template",baseName:"template",type:"V1PodTemplateSpec"}];class V1DeploymentStatus{static getAttributeTypeMap(){return V1DeploymentStatus.attributeTypeMap}}V1DeploymentStatus.discriminator=void 0,V1DeploymentStatus.attributeTypeMap=[{name:"availableReplicas",baseName:"availableReplicas",type:"number"},{name:"collisionCount",baseName:"collisionCount",type:"number"},{name:"conditions",baseName:"conditions",type:"Array<V1DeploymentCondition>"},{name:"observedGeneration",baseName:"observedGeneration",type:"number"},{name:"readyReplicas",baseName:"readyReplicas",type:"number"},{name:"replicas",baseName:"replicas",type:"number"},{name:"unavailableReplicas",baseName:"unavailableReplicas",type:"number"},{name:"updatedReplicas",baseName:"updatedReplicas",type:"number"}];class V1DeploymentStrategy{static getAttributeTypeMap(){return V1DeploymentStrategy.attributeTypeMap}}V1DeploymentStrategy.discriminator=void 0,V1DeploymentStrategy.attributeTypeMap=[{name:"rollingUpdate",baseName:"rollingUpdate",type:"V1RollingUpdateDeployment"},{name:"type",baseName:"type",type:"string"}];class V1DownwardAPIProjection{static getAttributeTypeMap(){return V1DownwardAPIProjection.attributeTypeMap}}V1DownwardAPIProjection.discriminator=void 0,V1DownwardAPIProjection.attributeTypeMap=[{name:"items",baseName:"items",type:"Array<V1DownwardAPIVolumeFile>"}];class V1DownwardAPIVolumeFile{static getAttributeTypeMap(){return V1DownwardAPIVolumeFile.attributeTypeMap}}V1DownwardAPIVolumeFile.discriminator=void 0,V1DownwardAPIVolumeFile.attributeTypeMap=[{name:"fieldRef",baseName:"fieldRef",type:"V1ObjectFieldSelector"},{name:"mode",baseName:"mode",type:"number"},{name:"path",baseName:"path",type:"string"},{name:"resourceFieldRef",baseName:"resourceFieldRef",type:"V1ResourceFieldSelector"}];class V1DownwardAPIVolumeSource{static getAttributeTypeMap(){return V1DownwardAPIVolumeSource.attributeTypeMap}}V1DownwardAPIVolumeSource.discriminator=void 0,V1DownwardAPIVolumeSource.attributeTypeMap=[{name:"defaultMode",baseName:"defaultMode",type:"number"},{name:"items",baseName:"items",type:"Array<V1DownwardAPIVolumeFile>"}];class V1EmptyDirVolumeSource{static getAttributeTypeMap(){return V1EmptyDirVolumeSource.attributeTypeMap}}V1EmptyDirVolumeSource.discriminator=void 0,V1EmptyDirVolumeSource.attributeTypeMap=[{name:"medium",baseName:"medium",type:"string"},{name:"sizeLimit",baseName:"sizeLimit",type:"string"}];class V1EndpointAddress{static getAttributeTypeMap(){return V1EndpointAddress.attributeTypeMap}}V1EndpointAddress.discriminator=void 0,V1EndpointAddress.attributeTypeMap=[{name:"hostname",baseName:"hostname",type:"string"},{name:"ip",baseName:"ip",type:"string"},{name:"nodeName",baseName:"nodeName",type:"string"},{name:"targetRef",baseName:"targetRef",type:"V1ObjectReference"}];class V1EndpointSubset{static getAttributeTypeMap(){return V1EndpointSubset.attributeTypeMap}}V1EndpointSubset.discriminator=void 0,V1EndpointSubset.attributeTypeMap=[{name:"addresses",baseName:"addresses",type:"Array<V1EndpointAddress>"},{name:"notReadyAddresses",baseName:"notReadyAddresses",type:"Array<V1EndpointAddress>"},{name:"ports",baseName:"ports",type:"Array<CoreV1EndpointPort>"}];class V1Endpoints{static getAttributeTypeMap(){return V1Endpoints.attributeTypeMap}}V1Endpoints.discriminator=void 0,V1Endpoints.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"subsets",baseName:"subsets",type:"Array<V1EndpointSubset>"}];class V1EndpointsList{static getAttributeTypeMap(){return V1EndpointsList.attributeTypeMap}}V1EndpointsList.discriminator=void 0,V1EndpointsList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Endpoints>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1EnvFromSource{static getAttributeTypeMap(){return V1EnvFromSource.attributeTypeMap}}V1EnvFromSource.discriminator=void 0,V1EnvFromSource.attributeTypeMap=[{name:"configMapRef",baseName:"configMapRef",type:"V1ConfigMapEnvSource"},{name:"prefix",baseName:"prefix",type:"string"},{name:"secretRef",baseName:"secretRef",type:"V1SecretEnvSource"}];class V1EnvVar{static getAttributeTypeMap(){return V1EnvVar.attributeTypeMap}}V1EnvVar.discriminator=void 0,V1EnvVar.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"value",baseName:"value",type:"string"},{name:"valueFrom",baseName:"valueFrom",type:"V1EnvVarSource"}];class V1EnvVarSource{static getAttributeTypeMap(){return V1EnvVarSource.attributeTypeMap}}V1EnvVarSource.discriminator=void 0,V1EnvVarSource.attributeTypeMap=[{name:"configMapKeyRef",baseName:"configMapKeyRef",type:"V1ConfigMapKeySelector"},{name:"fieldRef",baseName:"fieldRef",type:"V1ObjectFieldSelector"},{name:"resourceFieldRef",baseName:"resourceFieldRef",type:"V1ResourceFieldSelector"},{name:"secretKeyRef",baseName:"secretKeyRef",type:"V1SecretKeySelector"}];class V1EphemeralContainer{static getAttributeTypeMap(){return V1EphemeralContainer.attributeTypeMap}}V1EphemeralContainer.discriminator=void 0,V1EphemeralContainer.attributeTypeMap=[{name:"args",baseName:"args",type:"Array<string>"},{name:"command",baseName:"command",type:"Array<string>"},{name:"env",baseName:"env",type:"Array<V1EnvVar>"},{name:"envFrom",baseName:"envFrom",type:"Array<V1EnvFromSource>"},{name:"image",baseName:"image",type:"string"},{name:"imagePullPolicy",baseName:"imagePullPolicy",type:"string"},{name:"lifecycle",baseName:"lifecycle",type:"V1Lifecycle"},{name:"livenessProbe",baseName:"livenessProbe",type:"V1Probe"},{name:"name",baseName:"name",type:"string"},{name:"ports",baseName:"ports",type:"Array<V1ContainerPort>"},{name:"readinessProbe",baseName:"readinessProbe",type:"V1Probe"},{name:"resizePolicy",baseName:"resizePolicy",type:"Array<V1ContainerResizePolicy>"},{name:"resources",baseName:"resources",type:"V1ResourceRequirements"},{name:"restartPolicy",baseName:"restartPolicy",type:"string"},{name:"securityContext",baseName:"securityContext",type:"V1SecurityContext"},{name:"startupProbe",baseName:"startupProbe",type:"V1Probe"},{name:"stdin",baseName:"stdin",type:"boolean"},{name:"stdinOnce",baseName:"stdinOnce",type:"boolean"},{name:"targetContainerName",baseName:"targetContainerName",type:"string"},{name:"terminationMessagePath",baseName:"terminationMessagePath",type:"string"},{name:"terminationMessagePolicy",baseName:"terminationMessagePolicy",type:"string"},{name:"tty",baseName:"tty",type:"boolean"},{name:"volumeDevices",baseName:"volumeDevices",type:"Array<V1VolumeDevice>"},{name:"volumeMounts",baseName:"volumeMounts",type:"Array<V1VolumeMount>"},{name:"workingDir",baseName:"workingDir",type:"string"}];class V1EphemeralVolumeSource{static getAttributeTypeMap(){return V1EphemeralVolumeSource.attributeTypeMap}}V1EphemeralVolumeSource.discriminator=void 0,V1EphemeralVolumeSource.attributeTypeMap=[{name:"volumeClaimTemplate",baseName:"volumeClaimTemplate",type:"V1PersistentVolumeClaimTemplate"}];class V1ExecAction{static getAttributeTypeMap(){return V1ExecAction.attributeTypeMap}}V1ExecAction.discriminator=void 0,V1ExecAction.attributeTypeMap=[{name:"command",baseName:"command",type:"Array<string>"}];class V1ExternalDocumentation{static getAttributeTypeMap(){return V1ExternalDocumentation.attributeTypeMap}}V1ExternalDocumentation.discriminator=void 0,V1ExternalDocumentation.attributeTypeMap=[{name:"description",baseName:"description",type:"string"},{name:"url",baseName:"url",type:"string"}];class V1FCVolumeSource{static getAttributeTypeMap(){return V1FCVolumeSource.attributeTypeMap}}V1FCVolumeSource.discriminator=void 0,V1FCVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"lun",baseName:"lun",type:"number"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"targetWWNs",baseName:"targetWWNs",type:"Array<string>"},{name:"wwids",baseName:"wwids",type:"Array<string>"}];class V1FlexPersistentVolumeSource{static getAttributeTypeMap(){return V1FlexPersistentVolumeSource.attributeTypeMap}}V1FlexPersistentVolumeSource.discriminator=void 0,V1FlexPersistentVolumeSource.attributeTypeMap=[{name:"driver",baseName:"driver",type:"string"},{name:"fsType",baseName:"fsType",type:"string"},{name:"options",baseName:"options",type:"{ [key: string]: string; }"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1SecretReference"}];class V1FlexVolumeSource{static getAttributeTypeMap(){return V1FlexVolumeSource.attributeTypeMap}}V1FlexVolumeSource.discriminator=void 0,V1FlexVolumeSource.attributeTypeMap=[{name:"driver",baseName:"driver",type:"string"},{name:"fsType",baseName:"fsType",type:"string"},{name:"options",baseName:"options",type:"{ [key: string]: string; }"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1LocalObjectReference"}];class V1FlockerVolumeSource{static getAttributeTypeMap(){return V1FlockerVolumeSource.attributeTypeMap}}V1FlockerVolumeSource.discriminator=void 0,V1FlockerVolumeSource.attributeTypeMap=[{name:"datasetName",baseName:"datasetName",type:"string"},{name:"datasetUUID",baseName:"datasetUUID",type:"string"}];class V1GCEPersistentDiskVolumeSource{static getAttributeTypeMap(){return V1GCEPersistentDiskVolumeSource.attributeTypeMap}}V1GCEPersistentDiskVolumeSource.discriminator=void 0,V1GCEPersistentDiskVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"partition",baseName:"partition",type:"number"},{name:"pdName",baseName:"pdName",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"}];class V1GRPCAction{static getAttributeTypeMap(){return V1GRPCAction.attributeTypeMap}}V1GRPCAction.discriminator=void 0,V1GRPCAction.attributeTypeMap=[{name:"port",baseName:"port",type:"number"},{name:"service",baseName:"service",type:"string"}];class V1GitRepoVolumeSource{static getAttributeTypeMap(){return V1GitRepoVolumeSource.attributeTypeMap}}V1GitRepoVolumeSource.discriminator=void 0,V1GitRepoVolumeSource.attributeTypeMap=[{name:"directory",baseName:"directory",type:"string"},{name:"repository",baseName:"repository",type:"string"},{name:"revision",baseName:"revision",type:"string"}];class V1GlusterfsPersistentVolumeSource{static getAttributeTypeMap(){return V1GlusterfsPersistentVolumeSource.attributeTypeMap}}V1GlusterfsPersistentVolumeSource.discriminator=void 0,V1GlusterfsPersistentVolumeSource.attributeTypeMap=[{name:"endpoints",baseName:"endpoints",type:"string"},{name:"endpointsNamespace",baseName:"endpointsNamespace",type:"string"},{name:"path",baseName:"path",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"}];class V1GlusterfsVolumeSource{static getAttributeTypeMap(){return V1GlusterfsVolumeSource.attributeTypeMap}}V1GlusterfsVolumeSource.discriminator=void 0,V1GlusterfsVolumeSource.attributeTypeMap=[{name:"endpoints",baseName:"endpoints",type:"string"},{name:"path",baseName:"path",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"}];class V1HTTPGetAction{static getAttributeTypeMap(){return V1HTTPGetAction.attributeTypeMap}}V1HTTPGetAction.discriminator=void 0,V1HTTPGetAction.attributeTypeMap=[{name:"host",baseName:"host",type:"string"},{name:"httpHeaders",baseName:"httpHeaders",type:"Array<V1HTTPHeader>"},{name:"path",baseName:"path",type:"string"},{name:"port",baseName:"port",type:"IntOrString"},{name:"scheme",baseName:"scheme",type:"string"}];class V1HTTPHeader{static getAttributeTypeMap(){return V1HTTPHeader.attributeTypeMap}}V1HTTPHeader.discriminator=void 0,V1HTTPHeader.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"value",baseName:"value",type:"string"}];class V1HTTPIngressPath{static getAttributeTypeMap(){return V1HTTPIngressPath.attributeTypeMap}}V1HTTPIngressPath.discriminator=void 0,V1HTTPIngressPath.attributeTypeMap=[{name:"backend",baseName:"backend",type:"V1IngressBackend"},{name:"path",baseName:"path",type:"string"},{name:"pathType",baseName:"pathType",type:"string"}];class V1HTTPIngressRuleValue{static getAttributeTypeMap(){return V1HTTPIngressRuleValue.attributeTypeMap}}V1HTTPIngressRuleValue.discriminator=void 0,V1HTTPIngressRuleValue.attributeTypeMap=[{name:"paths",baseName:"paths",type:"Array<V1HTTPIngressPath>"}];class V1HorizontalPodAutoscaler{static getAttributeTypeMap(){return V1HorizontalPodAutoscaler.attributeTypeMap}}V1HorizontalPodAutoscaler.discriminator=void 0,V1HorizontalPodAutoscaler.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1HorizontalPodAutoscalerSpec"},{name:"status",baseName:"status",type:"V1HorizontalPodAutoscalerStatus"}];class V1HorizontalPodAutoscalerList{static getAttributeTypeMap(){return V1HorizontalPodAutoscalerList.attributeTypeMap}}V1HorizontalPodAutoscalerList.discriminator=void 0,V1HorizontalPodAutoscalerList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1HorizontalPodAutoscaler>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1HorizontalPodAutoscalerSpec{static getAttributeTypeMap(){return V1HorizontalPodAutoscalerSpec.attributeTypeMap}}V1HorizontalPodAutoscalerSpec.discriminator=void 0,V1HorizontalPodAutoscalerSpec.attributeTypeMap=[{name:"maxReplicas",baseName:"maxReplicas",type:"number"},{name:"minReplicas",baseName:"minReplicas",type:"number"},{name:"scaleTargetRef",baseName:"scaleTargetRef",type:"V1CrossVersionObjectReference"},{name:"targetCPUUtilizationPercentage",baseName:"targetCPUUtilizationPercentage",type:"number"}];class V1HorizontalPodAutoscalerStatus{static getAttributeTypeMap(){return V1HorizontalPodAutoscalerStatus.attributeTypeMap}}V1HorizontalPodAutoscalerStatus.discriminator=void 0,V1HorizontalPodAutoscalerStatus.attributeTypeMap=[{name:"currentCPUUtilizationPercentage",baseName:"currentCPUUtilizationPercentage",type:"number"},{name:"currentReplicas",baseName:"currentReplicas",type:"number"},{name:"desiredReplicas",baseName:"desiredReplicas",type:"number"},{name:"lastScaleTime",baseName:"lastScaleTime",type:"Date"},{name:"observedGeneration",baseName:"observedGeneration",type:"number"}];class V1HostAlias{static getAttributeTypeMap(){return V1HostAlias.attributeTypeMap}}V1HostAlias.discriminator=void 0,V1HostAlias.attributeTypeMap=[{name:"hostnames",baseName:"hostnames",type:"Array<string>"},{name:"ip",baseName:"ip",type:"string"}];class V1HostIP{static getAttributeTypeMap(){return V1HostIP.attributeTypeMap}}V1HostIP.discriminator=void 0,V1HostIP.attributeTypeMap=[{name:"ip",baseName:"ip",type:"string"}];class V1HostPathVolumeSource{static getAttributeTypeMap(){return V1HostPathVolumeSource.attributeTypeMap}}V1HostPathVolumeSource.discriminator=void 0,V1HostPathVolumeSource.attributeTypeMap=[{name:"path",baseName:"path",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1IPBlock{static getAttributeTypeMap(){return V1IPBlock.attributeTypeMap}}V1IPBlock.discriminator=void 0,V1IPBlock.attributeTypeMap=[{name:"cidr",baseName:"cidr",type:"string"},{name:"except",baseName:"except",type:"Array<string>"}];class V1ISCSIPersistentVolumeSource{static getAttributeTypeMap(){return V1ISCSIPersistentVolumeSource.attributeTypeMap}}V1ISCSIPersistentVolumeSource.discriminator=void 0,V1ISCSIPersistentVolumeSource.attributeTypeMap=[{name:"chapAuthDiscovery",baseName:"chapAuthDiscovery",type:"boolean"},{name:"chapAuthSession",baseName:"chapAuthSession",type:"boolean"},{name:"fsType",baseName:"fsType",type:"string"},{name:"initiatorName",baseName:"initiatorName",type:"string"},{name:"iqn",baseName:"iqn",type:"string"},{name:"iscsiInterface",baseName:"iscsiInterface",type:"string"},{name:"lun",baseName:"lun",type:"number"},{name:"portals",baseName:"portals",type:"Array<string>"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1SecretReference"},{name:"targetPortal",baseName:"targetPortal",type:"string"}];class V1ISCSIVolumeSource{static getAttributeTypeMap(){return V1ISCSIVolumeSource.attributeTypeMap}}V1ISCSIVolumeSource.discriminator=void 0,V1ISCSIVolumeSource.attributeTypeMap=[{name:"chapAuthDiscovery",baseName:"chapAuthDiscovery",type:"boolean"},{name:"chapAuthSession",baseName:"chapAuthSession",type:"boolean"},{name:"fsType",baseName:"fsType",type:"string"},{name:"initiatorName",baseName:"initiatorName",type:"string"},{name:"iqn",baseName:"iqn",type:"string"},{name:"iscsiInterface",baseName:"iscsiInterface",type:"string"},{name:"lun",baseName:"lun",type:"number"},{name:"portals",baseName:"portals",type:"Array<string>"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1LocalObjectReference"},{name:"targetPortal",baseName:"targetPortal",type:"string"}];class V1Ingress{static getAttributeTypeMap(){return V1Ingress.attributeTypeMap}}V1Ingress.discriminator=void 0,V1Ingress.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1IngressSpec"},{name:"status",baseName:"status",type:"V1IngressStatus"}];class V1IngressBackend{static getAttributeTypeMap(){return V1IngressBackend.attributeTypeMap}}V1IngressBackend.discriminator=void 0,V1IngressBackend.attributeTypeMap=[{name:"resource",baseName:"resource",type:"V1TypedLocalObjectReference"},{name:"service",baseName:"service",type:"V1IngressServiceBackend"}];class V1IngressClass{static getAttributeTypeMap(){return V1IngressClass.attributeTypeMap}}V1IngressClass.discriminator=void 0,V1IngressClass.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1IngressClassSpec"}];class V1IngressClassList{static getAttributeTypeMap(){return V1IngressClassList.attributeTypeMap}}V1IngressClassList.discriminator=void 0,V1IngressClassList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1IngressClass>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1IngressClassParametersReference{static getAttributeTypeMap(){return V1IngressClassParametersReference.attributeTypeMap}}V1IngressClassParametersReference.discriminator=void 0,V1IngressClassParametersReference.attributeTypeMap=[{name:"apiGroup",baseName:"apiGroup",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"},{name:"scope",baseName:"scope",type:"string"}];class V1IngressClassSpec{static getAttributeTypeMap(){return V1IngressClassSpec.attributeTypeMap}}V1IngressClassSpec.discriminator=void 0,V1IngressClassSpec.attributeTypeMap=[{name:"controller",baseName:"controller",type:"string"},{name:"parameters",baseName:"parameters",type:"V1IngressClassParametersReference"}];class V1IngressList{static getAttributeTypeMap(){return V1IngressList.attributeTypeMap}}V1IngressList.discriminator=void 0,V1IngressList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Ingress>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1IngressLoadBalancerIngress{static getAttributeTypeMap(){return V1IngressLoadBalancerIngress.attributeTypeMap}}V1IngressLoadBalancerIngress.discriminator=void 0,V1IngressLoadBalancerIngress.attributeTypeMap=[{name:"hostname",baseName:"hostname",type:"string"},{name:"ip",baseName:"ip",type:"string"},{name:"ports",baseName:"ports",type:"Array<V1IngressPortStatus>"}];class V1IngressLoadBalancerStatus{static getAttributeTypeMap(){return V1IngressLoadBalancerStatus.attributeTypeMap}}V1IngressLoadBalancerStatus.discriminator=void 0,V1IngressLoadBalancerStatus.attributeTypeMap=[{name:"ingress",baseName:"ingress",type:"Array<V1IngressLoadBalancerIngress>"}];class V1IngressPortStatus{static getAttributeTypeMap(){return V1IngressPortStatus.attributeTypeMap}}V1IngressPortStatus.discriminator=void 0,V1IngressPortStatus.attributeTypeMap=[{name:"error",baseName:"error",type:"string"},{name:"port",baseName:"port",type:"number"},{name:"protocol",baseName:"protocol",type:"string"}];class V1IngressRule{static getAttributeTypeMap(){return V1IngressRule.attributeTypeMap}}V1IngressRule.discriminator=void 0,V1IngressRule.attributeTypeMap=[{name:"host",baseName:"host",type:"string"},{name:"http",baseName:"http",type:"V1HTTPIngressRuleValue"}];class V1IngressServiceBackend{static getAttributeTypeMap(){return V1IngressServiceBackend.attributeTypeMap}}V1IngressServiceBackend.discriminator=void 0,V1IngressServiceBackend.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"port",baseName:"port",type:"V1ServiceBackendPort"}];class V1IngressSpec{static getAttributeTypeMap(){return V1IngressSpec.attributeTypeMap}}V1IngressSpec.discriminator=void 0,V1IngressSpec.attributeTypeMap=[{name:"defaultBackend",baseName:"defaultBackend",type:"V1IngressBackend"},{name:"ingressClassName",baseName:"ingressClassName",type:"string"},{name:"rules",baseName:"rules",type:"Array<V1IngressRule>"},{name:"tls",baseName:"tls",type:"Array<V1IngressTLS>"}];class V1IngressStatus{static getAttributeTypeMap(){return V1IngressStatus.attributeTypeMap}}V1IngressStatus.discriminator=void 0,V1IngressStatus.attributeTypeMap=[{name:"loadBalancer",baseName:"loadBalancer",type:"V1IngressLoadBalancerStatus"}];class V1IngressTLS{static getAttributeTypeMap(){return V1IngressTLS.attributeTypeMap}}V1IngressTLS.discriminator=void 0,V1IngressTLS.attributeTypeMap=[{name:"hosts",baseName:"hosts",type:"Array<string>"},{name:"secretName",baseName:"secretName",type:"string"}];class V1JSONSchemaProps{static getAttributeTypeMap(){return V1JSONSchemaProps.attributeTypeMap}}V1JSONSchemaProps.discriminator=void 0,V1JSONSchemaProps.attributeTypeMap=[{name:"$ref",baseName:"$ref",type:"string"},{name:"$schema",baseName:"$schema",type:"string"},{name:"additionalItems",baseName:"additionalItems",type:"object"},{name:"additionalProperties",baseName:"additionalProperties",type:"object"},{name:"allOf",baseName:"allOf",type:"Array<V1JSONSchemaProps>"},{name:"anyOf",baseName:"anyOf",type:"Array<V1JSONSchemaProps>"},{name:"_default",baseName:"default",type:"object"},{name:"definitions",baseName:"definitions",type:"{ [key: string]: V1JSONSchemaProps; }"},{name:"dependencies",baseName:"dependencies",type:"{ [key: string]: object; }"},{name:"description",baseName:"description",type:"string"},{name:"_enum",baseName:"enum",type:"Array<object>"},{name:"example",baseName:"example",type:"object"},{name:"exclusiveMaximum",baseName:"exclusiveMaximum",type:"boolean"},{name:"exclusiveMinimum",baseName:"exclusiveMinimum",type:"boolean"},{name:"externalDocs",baseName:"externalDocs",type:"V1ExternalDocumentation"},{name:"format",baseName:"format",type:"string"},{name:"id",baseName:"id",type:"string"},{name:"items",baseName:"items",type:"object"},{name:"maxItems",baseName:"maxItems",type:"number"},{name:"maxLength",baseName:"maxLength",type:"number"},{name:"maxProperties",baseName:"maxProperties",type:"number"},{name:"maximum",baseName:"maximum",type:"number"},{name:"minItems",baseName:"minItems",type:"number"},{name:"minLength",baseName:"minLength",type:"number"},{name:"minProperties",baseName:"minProperties",type:"number"},{name:"minimum",baseName:"minimum",type:"number"},{name:"multipleOf",baseName:"multipleOf",type:"number"},{name:"not",baseName:"not",type:"V1JSONSchemaProps"},{name:"nullable",baseName:"nullable",type:"boolean"},{name:"oneOf",baseName:"oneOf",type:"Array<V1JSONSchemaProps>"},{name:"pattern",baseName:"pattern",type:"string"},{name:"patternProperties",baseName:"patternProperties",type:"{ [key: string]: V1JSONSchemaProps; }"},{name:"properties",baseName:"properties",type:"{ [key: string]: V1JSONSchemaProps; }"},{name:"required",baseName:"required",type:"Array<string>"},{name:"title",baseName:"title",type:"string"},{name:"type",baseName:"type",type:"string"},{name:"uniqueItems",baseName:"uniqueItems",type:"boolean"},{name:"x_kubernetes_embedded_resource",baseName:"x-kubernetes-embedded-resource",type:"boolean"},{name:"x_kubernetes_int_or_string",baseName:"x-kubernetes-int-or-string",type:"boolean"},{name:"x_kubernetes_list_map_keys",baseName:"x-kubernetes-list-map-keys",type:"Array<string>"},{name:"x_kubernetes_list_type",baseName:"x-kubernetes-list-type",type:"string"},{name:"x_kubernetes_map_type",baseName:"x-kubernetes-map-type",type:"string"},{name:"x_kubernetes_preserve_unknown_fields",baseName:"x-kubernetes-preserve-unknown-fields",type:"boolean"},{name:"x_kubernetes_validations",baseName:"x-kubernetes-validations",type:"Array<V1ValidationRule>"}];class V1Job{static getAttributeTypeMap(){return V1Job.attributeTypeMap}}V1Job.discriminator=void 0,V1Job.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1JobSpec"},{name:"status",baseName:"status",type:"V1JobStatus"}];class V1JobCondition{static getAttributeTypeMap(){return V1JobCondition.attributeTypeMap}}V1JobCondition.discriminator=void 0,V1JobCondition.attributeTypeMap=[{name:"lastProbeTime",baseName:"lastProbeTime",type:"Date"},{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1JobList{static getAttributeTypeMap(){return V1JobList.attributeTypeMap}}V1JobList.discriminator=void 0,V1JobList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Job>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1JobSpec{static getAttributeTypeMap(){return V1JobSpec.attributeTypeMap}}V1JobSpec.discriminator=void 0,V1JobSpec.attributeTypeMap=[{name:"activeDeadlineSeconds",baseName:"activeDeadlineSeconds",type:"number"},{name:"backoffLimit",baseName:"backoffLimit",type:"number"},{name:"backoffLimitPerIndex",baseName:"backoffLimitPerIndex",type:"number"},{name:"completionMode",baseName:"completionMode",type:"string"},{name:"completions",baseName:"completions",type:"number"},{name:"managedBy",baseName:"managedBy",type:"string"},{name:"manualSelector",baseName:"manualSelector",type:"boolean"},{name:"maxFailedIndexes",baseName:"maxFailedIndexes",type:"number"},{name:"parallelism",baseName:"parallelism",type:"number"},{name:"podFailurePolicy",baseName:"podFailurePolicy",type:"V1PodFailurePolicy"},{name:"podReplacementPolicy",baseName:"podReplacementPolicy",type:"string"},{name:"selector",baseName:"selector",type:"V1LabelSelector"},{name:"successPolicy",baseName:"successPolicy",type:"V1SuccessPolicy"},{name:"suspend",baseName:"suspend",type:"boolean"},{name:"template",baseName:"template",type:"V1PodTemplateSpec"},{name:"ttlSecondsAfterFinished",baseName:"ttlSecondsAfterFinished",type:"number"}];class V1JobStatus{static getAttributeTypeMap(){return V1JobStatus.attributeTypeMap}}V1JobStatus.discriminator=void 0,V1JobStatus.attributeTypeMap=[{name:"active",baseName:"active",type:"number"},{name:"completedIndexes",baseName:"completedIndexes",type:"string"},{name:"completionTime",baseName:"completionTime",type:"Date"},{name:"conditions",baseName:"conditions",type:"Array<V1JobCondition>"},{name:"failed",baseName:"failed",type:"number"},{name:"failedIndexes",baseName:"failedIndexes",type:"string"},{name:"ready",baseName:"ready",type:"number"},{name:"startTime",baseName:"startTime",type:"Date"},{name:"succeeded",baseName:"succeeded",type:"number"},{name:"terminating",baseName:"terminating",type:"number"},{name:"uncountedTerminatedPods",baseName:"uncountedTerminatedPods",type:"V1UncountedTerminatedPods"}];class V1JobTemplateSpec{static getAttributeTypeMap(){return V1JobTemplateSpec.attributeTypeMap}}V1JobTemplateSpec.discriminator=void 0,V1JobTemplateSpec.attributeTypeMap=[{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1JobSpec"}];class V1KeyToPath{static getAttributeTypeMap(){return V1KeyToPath.attributeTypeMap}}V1KeyToPath.discriminator=void 0,V1KeyToPath.attributeTypeMap=[{name:"key",baseName:"key",type:"string"},{name:"mode",baseName:"mode",type:"number"},{name:"path",baseName:"path",type:"string"}];class V1LabelSelector{static getAttributeTypeMap(){return V1LabelSelector.attributeTypeMap}}V1LabelSelector.discriminator=void 0,V1LabelSelector.attributeTypeMap=[{name:"matchExpressions",baseName:"matchExpressions",type:"Array<V1LabelSelectorRequirement>"},{name:"matchLabels",baseName:"matchLabels",type:"{ [key: string]: string; }"}];class V1LabelSelectorRequirement{static getAttributeTypeMap(){return V1LabelSelectorRequirement.attributeTypeMap}}V1LabelSelectorRequirement.discriminator=void 0,V1LabelSelectorRequirement.attributeTypeMap=[{name:"key",baseName:"key",type:"string"},{name:"operator",baseName:"operator",type:"string"},{name:"values",baseName:"values",type:"Array<string>"}];class V1Lifecycle{static getAttributeTypeMap(){return V1Lifecycle.attributeTypeMap}}V1Lifecycle.discriminator=void 0,V1Lifecycle.attributeTypeMap=[{name:"postStart",baseName:"postStart",type:"V1LifecycleHandler"},{name:"preStop",baseName:"preStop",type:"V1LifecycleHandler"}];class V1LifecycleHandler{static getAttributeTypeMap(){return V1LifecycleHandler.attributeTypeMap}}V1LifecycleHandler.discriminator=void 0,V1LifecycleHandler.attributeTypeMap=[{name:"exec",baseName:"exec",type:"V1ExecAction"},{name:"httpGet",baseName:"httpGet",type:"V1HTTPGetAction"},{name:"sleep",baseName:"sleep",type:"V1SleepAction"},{name:"tcpSocket",baseName:"tcpSocket",type:"V1TCPSocketAction"}];class V1LimitRange{static getAttributeTypeMap(){return V1LimitRange.attributeTypeMap}}V1LimitRange.discriminator=void 0,V1LimitRange.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1LimitRangeSpec"}];class V1LimitRangeItem{static getAttributeTypeMap(){return V1LimitRangeItem.attributeTypeMap}}V1LimitRangeItem.discriminator=void 0,V1LimitRangeItem.attributeTypeMap=[{name:"_default",baseName:"default",type:"{ [key: string]: string; }"},{name:"defaultRequest",baseName:"defaultRequest",type:"{ [key: string]: string; }"},{name:"max",baseName:"max",type:"{ [key: string]: string; }"},{name:"maxLimitRequestRatio",baseName:"maxLimitRequestRatio",type:"{ [key: string]: string; }"},{name:"min",baseName:"min",type:"{ [key: string]: string; }"},{name:"type",baseName:"type",type:"string"}];class V1LimitRangeList{static getAttributeTypeMap(){return V1LimitRangeList.attributeTypeMap}}V1LimitRangeList.discriminator=void 0,V1LimitRangeList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1LimitRange>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1LimitRangeSpec{static getAttributeTypeMap(){return V1LimitRangeSpec.attributeTypeMap}}V1LimitRangeSpec.discriminator=void 0,V1LimitRangeSpec.attributeTypeMap=[{name:"limits",baseName:"limits",type:"Array<V1LimitRangeItem>"}];class V1ListMeta{static getAttributeTypeMap(){return V1ListMeta.attributeTypeMap}}V1ListMeta.discriminator=void 0,V1ListMeta.attributeTypeMap=[{name:"continue",baseName:"continue",type:"string"},{name:"remainingItemCount",baseName:"remainingItemCount",type:"number"},{name:"resourceVersion",baseName:"resourceVersion",type:"string"},{name:"selfLink",baseName:"selfLink",type:"string"}];class V1LoadBalancerIngress{static getAttributeTypeMap(){return V1LoadBalancerIngress.attributeTypeMap}}V1LoadBalancerIngress.discriminator=void 0,V1LoadBalancerIngress.attributeTypeMap=[{name:"hostname",baseName:"hostname",type:"string"},{name:"ip",baseName:"ip",type:"string"},{name:"ipMode",baseName:"ipMode",type:"string"},{name:"ports",baseName:"ports",type:"Array<V1PortStatus>"}];class V1LoadBalancerStatus{static getAttributeTypeMap(){return V1LoadBalancerStatus.attributeTypeMap}}V1LoadBalancerStatus.discriminator=void 0,V1LoadBalancerStatus.attributeTypeMap=[{name:"ingress",baseName:"ingress",type:"Array<V1LoadBalancerIngress>"}];class V1LocalObjectReference{static getAttributeTypeMap(){return V1LocalObjectReference.attributeTypeMap}}V1LocalObjectReference.discriminator=void 0,V1LocalObjectReference.attributeTypeMap=[{name:"name",baseName:"name",type:"string"}];class V1LocalVolumeSource{static getAttributeTypeMap(){return V1LocalVolumeSource.attributeTypeMap}}V1LocalVolumeSource.discriminator=void 0,V1LocalVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"path",baseName:"path",type:"string"}];class V1ManagedFieldsEntry{static getAttributeTypeMap(){return V1ManagedFieldsEntry.attributeTypeMap}}V1ManagedFieldsEntry.discriminator=void 0,V1ManagedFieldsEntry.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"fieldsType",baseName:"fieldsType",type:"string"},{name:"fieldsV1",baseName:"fieldsV1",type:"object"},{name:"manager",baseName:"manager",type:"string"},{name:"operation",baseName:"operation",type:"string"},{name:"subresource",baseName:"subresource",type:"string"},{name:"time",baseName:"time",type:"Date"}];class V1MatchCondition{static getAttributeTypeMap(){return V1MatchCondition.attributeTypeMap}}V1MatchCondition.discriminator=void 0,V1MatchCondition.attributeTypeMap=[{name:"expression",baseName:"expression",type:"string"},{name:"name",baseName:"name",type:"string"}];class V1ModifyVolumeStatus{static getAttributeTypeMap(){return V1ModifyVolumeStatus.attributeTypeMap}}V1ModifyVolumeStatus.discriminator=void 0,V1ModifyVolumeStatus.attributeTypeMap=[{name:"status",baseName:"status",type:"string"},{name:"targetVolumeAttributesClassName",baseName:"targetVolumeAttributesClassName",type:"string"}];class V1MutatingWebhook{static getAttributeTypeMap(){return V1MutatingWebhook.attributeTypeMap}}V1MutatingWebhook.discriminator=void 0,V1MutatingWebhook.attributeTypeMap=[{name:"admissionReviewVersions",baseName:"admissionReviewVersions",type:"Array<string>"},{name:"clientConfig",baseName:"clientConfig",type:"AdmissionregistrationV1WebhookClientConfig"},{name:"failurePolicy",baseName:"failurePolicy",type:"string"},{name:"matchConditions",baseName:"matchConditions",type:"Array<V1MatchCondition>"},{name:"matchPolicy",baseName:"matchPolicy",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"namespaceSelector",baseName:"namespaceSelector",type:"V1LabelSelector"},{name:"objectSelector",baseName:"objectSelector",type:"V1LabelSelector"},{name:"reinvocationPolicy",baseName:"reinvocationPolicy",type:"string"},{name:"rules",baseName:"rules",type:"Array<V1RuleWithOperations>"},{name:"sideEffects",baseName:"sideEffects",type:"string"},{name:"timeoutSeconds",baseName:"timeoutSeconds",type:"number"}];class V1MutatingWebhookConfiguration{static getAttributeTypeMap(){return V1MutatingWebhookConfiguration.attributeTypeMap}}V1MutatingWebhookConfiguration.discriminator=void 0,V1MutatingWebhookConfiguration.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"webhooks",baseName:"webhooks",type:"Array<V1MutatingWebhook>"}];class V1MutatingWebhookConfigurationList{static getAttributeTypeMap(){return V1MutatingWebhookConfigurationList.attributeTypeMap}}V1MutatingWebhookConfigurationList.discriminator=void 0,V1MutatingWebhookConfigurationList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1MutatingWebhookConfiguration>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1NFSVolumeSource{static getAttributeTypeMap(){return V1NFSVolumeSource.attributeTypeMap}}V1NFSVolumeSource.discriminator=void 0,V1NFSVolumeSource.attributeTypeMap=[{name:"path",baseName:"path",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"server",baseName:"server",type:"string"}];class V1Namespace{static getAttributeTypeMap(){return V1Namespace.attributeTypeMap}}V1Namespace.discriminator=void 0,V1Namespace.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1NamespaceSpec"},{name:"status",baseName:"status",type:"V1NamespaceStatus"}];class V1NamespaceCondition{static getAttributeTypeMap(){return V1NamespaceCondition.attributeTypeMap}}V1NamespaceCondition.discriminator=void 0,V1NamespaceCondition.attributeTypeMap=[{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1NamespaceList{static getAttributeTypeMap(){return V1NamespaceList.attributeTypeMap}}V1NamespaceList.discriminator=void 0,V1NamespaceList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Namespace>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1NamespaceSpec{static getAttributeTypeMap(){return V1NamespaceSpec.attributeTypeMap}}V1NamespaceSpec.discriminator=void 0,V1NamespaceSpec.attributeTypeMap=[{name:"finalizers",baseName:"finalizers",type:"Array<string>"}];class V1NamespaceStatus{static getAttributeTypeMap(){return V1NamespaceStatus.attributeTypeMap}}V1NamespaceStatus.discriminator=void 0,V1NamespaceStatus.attributeTypeMap=[{name:"conditions",baseName:"conditions",type:"Array<V1NamespaceCondition>"},{name:"phase",baseName:"phase",type:"string"}];class V1NetworkPolicy{static getAttributeTypeMap(){return V1NetworkPolicy.attributeTypeMap}}V1NetworkPolicy.discriminator=void 0,V1NetworkPolicy.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1NetworkPolicySpec"}];class V1NetworkPolicyEgressRule{static getAttributeTypeMap(){return V1NetworkPolicyEgressRule.attributeTypeMap}}V1NetworkPolicyEgressRule.discriminator=void 0,V1NetworkPolicyEgressRule.attributeTypeMap=[{name:"ports",baseName:"ports",type:"Array<V1NetworkPolicyPort>"},{name:"to",baseName:"to",type:"Array<V1NetworkPolicyPeer>"}];class V1NetworkPolicyIngressRule{static getAttributeTypeMap(){return V1NetworkPolicyIngressRule.attributeTypeMap}}V1NetworkPolicyIngressRule.discriminator=void 0,V1NetworkPolicyIngressRule.attributeTypeMap=[{name:"from",baseName:"from",type:"Array<V1NetworkPolicyPeer>"},{name:"ports",baseName:"ports",type:"Array<V1NetworkPolicyPort>"}];class V1NetworkPolicyList{static getAttributeTypeMap(){return V1NetworkPolicyList.attributeTypeMap}}V1NetworkPolicyList.discriminator=void 0,V1NetworkPolicyList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1NetworkPolicy>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1NetworkPolicyPeer{static getAttributeTypeMap(){return V1NetworkPolicyPeer.attributeTypeMap}}V1NetworkPolicyPeer.discriminator=void 0,V1NetworkPolicyPeer.attributeTypeMap=[{name:"ipBlock",baseName:"ipBlock",type:"V1IPBlock"},{name:"namespaceSelector",baseName:"namespaceSelector",type:"V1LabelSelector"},{name:"podSelector",baseName:"podSelector",type:"V1LabelSelector"}];class V1NetworkPolicyPort{static getAttributeTypeMap(){return V1NetworkPolicyPort.attributeTypeMap}}V1NetworkPolicyPort.discriminator=void 0,V1NetworkPolicyPort.attributeTypeMap=[{name:"endPort",baseName:"endPort",type:"number"},{name:"port",baseName:"port",type:"IntOrString"},{name:"protocol",baseName:"protocol",type:"string"}];class V1NetworkPolicySpec{static getAttributeTypeMap(){return V1NetworkPolicySpec.attributeTypeMap}}V1NetworkPolicySpec.discriminator=void 0,V1NetworkPolicySpec.attributeTypeMap=[{name:"egress",baseName:"egress",type:"Array<V1NetworkPolicyEgressRule>"},{name:"ingress",baseName:"ingress",type:"Array<V1NetworkPolicyIngressRule>"},{name:"podSelector",baseName:"podSelector",type:"V1LabelSelector"},{name:"policyTypes",baseName:"policyTypes",type:"Array<string>"}];class V1Node{static getAttributeTypeMap(){return V1Node.attributeTypeMap}}V1Node.discriminator=void 0,V1Node.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1NodeSpec"},{name:"status",baseName:"status",type:"V1NodeStatus"}];class V1NodeAddress{static getAttributeTypeMap(){return V1NodeAddress.attributeTypeMap}}V1NodeAddress.discriminator=void 0,V1NodeAddress.attributeTypeMap=[{name:"address",baseName:"address",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1NodeAffinity{static getAttributeTypeMap(){return V1NodeAffinity.attributeTypeMap}}V1NodeAffinity.discriminator=void 0,V1NodeAffinity.attributeTypeMap=[{name:"preferredDuringSchedulingIgnoredDuringExecution",baseName:"preferredDuringSchedulingIgnoredDuringExecution",type:"Array<V1PreferredSchedulingTerm>"},{name:"requiredDuringSchedulingIgnoredDuringExecution",baseName:"requiredDuringSchedulingIgnoredDuringExecution",type:"V1NodeSelector"}];class V1NodeCondition{static getAttributeTypeMap(){return V1NodeCondition.attributeTypeMap}}V1NodeCondition.discriminator=void 0,V1NodeCondition.attributeTypeMap=[{name:"lastHeartbeatTime",baseName:"lastHeartbeatTime",type:"Date"},{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1NodeConfigSource{static getAttributeTypeMap(){return V1NodeConfigSource.attributeTypeMap}}V1NodeConfigSource.discriminator=void 0,V1NodeConfigSource.attributeTypeMap=[{name:"configMap",baseName:"configMap",type:"V1ConfigMapNodeConfigSource"}];class V1NodeConfigStatus{static getAttributeTypeMap(){return V1NodeConfigStatus.attributeTypeMap}}V1NodeConfigStatus.discriminator=void 0,V1NodeConfigStatus.attributeTypeMap=[{name:"active",baseName:"active",type:"V1NodeConfigSource"},{name:"assigned",baseName:"assigned",type:"V1NodeConfigSource"},{name:"error",baseName:"error",type:"string"},{name:"lastKnownGood",baseName:"lastKnownGood",type:"V1NodeConfigSource"}];class V1NodeDaemonEndpoints{static getAttributeTypeMap(){return V1NodeDaemonEndpoints.attributeTypeMap}}V1NodeDaemonEndpoints.discriminator=void 0,V1NodeDaemonEndpoints.attributeTypeMap=[{name:"kubeletEndpoint",baseName:"kubeletEndpoint",type:"V1DaemonEndpoint"}];class V1NodeList{static getAttributeTypeMap(){return V1NodeList.attributeTypeMap}}V1NodeList.discriminator=void 0,V1NodeList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Node>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1NodeRuntimeHandler{static getAttributeTypeMap(){return V1NodeRuntimeHandler.attributeTypeMap}}V1NodeRuntimeHandler.discriminator=void 0,V1NodeRuntimeHandler.attributeTypeMap=[{name:"features",baseName:"features",type:"V1NodeRuntimeHandlerFeatures"},{name:"name",baseName:"name",type:"string"}];class V1NodeRuntimeHandlerFeatures{static getAttributeTypeMap(){return V1NodeRuntimeHandlerFeatures.attributeTypeMap}}V1NodeRuntimeHandlerFeatures.discriminator=void 0,V1NodeRuntimeHandlerFeatures.attributeTypeMap=[{name:"recursiveReadOnlyMounts",baseName:"recursiveReadOnlyMounts",type:"boolean"}];class V1NodeSelector{static getAttributeTypeMap(){return V1NodeSelector.attributeTypeMap}}V1NodeSelector.discriminator=void 0,V1NodeSelector.attributeTypeMap=[{name:"nodeSelectorTerms",baseName:"nodeSelectorTerms",type:"Array<V1NodeSelectorTerm>"}];class V1NodeSelectorRequirement{static getAttributeTypeMap(){return V1NodeSelectorRequirement.attributeTypeMap}}V1NodeSelectorRequirement.discriminator=void 0,V1NodeSelectorRequirement.attributeTypeMap=[{name:"key",baseName:"key",type:"string"},{name:"operator",baseName:"operator",type:"string"},{name:"values",baseName:"values",type:"Array<string>"}];class V1NodeSelectorTerm{static getAttributeTypeMap(){return V1NodeSelectorTerm.attributeTypeMap}}V1NodeSelectorTerm.discriminator=void 0,V1NodeSelectorTerm.attributeTypeMap=[{name:"matchExpressions",baseName:"matchExpressions",type:"Array<V1NodeSelectorRequirement>"},{name:"matchFields",baseName:"matchFields",type:"Array<V1NodeSelectorRequirement>"}];class V1NodeSpec{static getAttributeTypeMap(){return V1NodeSpec.attributeTypeMap}}V1NodeSpec.discriminator=void 0,V1NodeSpec.attributeTypeMap=[{name:"configSource",baseName:"configSource",type:"V1NodeConfigSource"},{name:"externalID",baseName:"externalID",type:"string"},{name:"podCIDR",baseName:"podCIDR",type:"string"},{name:"podCIDRs",baseName:"podCIDRs",type:"Array<string>"},{name:"providerID",baseName:"providerID",type:"string"},{name:"taints",baseName:"taints",type:"Array<V1Taint>"},{name:"unschedulable",baseName:"unschedulable",type:"boolean"}];class V1NodeStatus{static getAttributeTypeMap(){return V1NodeStatus.attributeTypeMap}}V1NodeStatus.discriminator=void 0,V1NodeStatus.attributeTypeMap=[{name:"addresses",baseName:"addresses",type:"Array<V1NodeAddress>"},{name:"allocatable",baseName:"allocatable",type:"{ [key: string]: string; }"},{name:"capacity",baseName:"capacity",type:"{ [key: string]: string; }"},{name:"conditions",baseName:"conditions",type:"Array<V1NodeCondition>"},{name:"config",baseName:"config",type:"V1NodeConfigStatus"},{name:"daemonEndpoints",baseName:"daemonEndpoints",type:"V1NodeDaemonEndpoints"},{name:"images",baseName:"images",type:"Array<V1ContainerImage>"},{name:"nodeInfo",baseName:"nodeInfo",type:"V1NodeSystemInfo"},{name:"phase",baseName:"phase",type:"string"},{name:"runtimeHandlers",baseName:"runtimeHandlers",type:"Array<V1NodeRuntimeHandler>"},{name:"volumesAttached",baseName:"volumesAttached",type:"Array<V1AttachedVolume>"},{name:"volumesInUse",baseName:"volumesInUse",type:"Array<string>"}];class V1NodeSystemInfo{static getAttributeTypeMap(){return V1NodeSystemInfo.attributeTypeMap}}V1NodeSystemInfo.discriminator=void 0,V1NodeSystemInfo.attributeTypeMap=[{name:"architecture",baseName:"architecture",type:"string"},{name:"bootID",baseName:"bootID",type:"string"},{name:"containerRuntimeVersion",baseName:"containerRuntimeVersion",type:"string"},{name:"kernelVersion",baseName:"kernelVersion",type:"string"},{name:"kubeProxyVersion",baseName:"kubeProxyVersion",type:"string"},{name:"kubeletVersion",baseName:"kubeletVersion",type:"string"},{name:"machineID",baseName:"machineID",type:"string"},{name:"operatingSystem",baseName:"operatingSystem",type:"string"},{name:"osImage",baseName:"osImage",type:"string"},{name:"systemUUID",baseName:"systemUUID",type:"string"}];class V1ObjectFieldSelector{static getAttributeTypeMap(){return V1ObjectFieldSelector.attributeTypeMap}}V1ObjectFieldSelector.discriminator=void 0,V1ObjectFieldSelector.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"fieldPath",baseName:"fieldPath",type:"string"}];class V1ObjectMeta{static getAttributeTypeMap(){return V1ObjectMeta.attributeTypeMap}}V1ObjectMeta.discriminator=void 0,V1ObjectMeta.attributeTypeMap=[{name:"annotations",baseName:"annotations",type:"{ [key: string]: string; }"},{name:"creationTimestamp",baseName:"creationTimestamp",type:"Date"},{name:"deletionGracePeriodSeconds",baseName:"deletionGracePeriodSeconds",type:"number"},{name:"deletionTimestamp",baseName:"deletionTimestamp",type:"Date"},{name:"finalizers",baseName:"finalizers",type:"Array<string>"},{name:"generateName",baseName:"generateName",type:"string"},{name:"generation",baseName:"generation",type:"number"},{name:"labels",baseName:"labels",type:"{ [key: string]: string; }"},{name:"managedFields",baseName:"managedFields",type:"Array<V1ManagedFieldsEntry>"},{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"},{name:"ownerReferences",baseName:"ownerReferences",type:"Array<V1OwnerReference>"},{name:"resourceVersion",baseName:"resourceVersion",type:"string"},{name:"selfLink",baseName:"selfLink",type:"string"},{name:"uid",baseName:"uid",type:"string"}];class V1ObjectReference{static getAttributeTypeMap(){return V1ObjectReference.attributeTypeMap}}V1ObjectReference.discriminator=void 0,V1ObjectReference.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"fieldPath",baseName:"fieldPath",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"},{name:"resourceVersion",baseName:"resourceVersion",type:"string"},{name:"uid",baseName:"uid",type:"string"}];class V1OwnerReference{static getAttributeTypeMap(){return V1OwnerReference.attributeTypeMap}}V1OwnerReference.discriminator=void 0,V1OwnerReference.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"blockOwnerDeletion",baseName:"blockOwnerDeletion",type:"boolean"},{name:"controller",baseName:"controller",type:"boolean"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"uid",baseName:"uid",type:"string"}];class V1PersistentVolume{static getAttributeTypeMap(){return V1PersistentVolume.attributeTypeMap}}V1PersistentVolume.discriminator=void 0,V1PersistentVolume.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1PersistentVolumeSpec"},{name:"status",baseName:"status",type:"V1PersistentVolumeStatus"}];class V1PersistentVolumeClaim{static getAttributeTypeMap(){return V1PersistentVolumeClaim.attributeTypeMap}}V1PersistentVolumeClaim.discriminator=void 0,V1PersistentVolumeClaim.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1PersistentVolumeClaimSpec"},{name:"status",baseName:"status",type:"V1PersistentVolumeClaimStatus"}];class V1PersistentVolumeClaimCondition{static getAttributeTypeMap(){return V1PersistentVolumeClaimCondition.attributeTypeMap}}V1PersistentVolumeClaimCondition.discriminator=void 0,V1PersistentVolumeClaimCondition.attributeTypeMap=[{name:"lastProbeTime",baseName:"lastProbeTime",type:"Date"},{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1PersistentVolumeClaimList{static getAttributeTypeMap(){return V1PersistentVolumeClaimList.attributeTypeMap}}V1PersistentVolumeClaimList.discriminator=void 0,V1PersistentVolumeClaimList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1PersistentVolumeClaim>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1PersistentVolumeClaimSpec{static getAttributeTypeMap(){return V1PersistentVolumeClaimSpec.attributeTypeMap}}V1PersistentVolumeClaimSpec.discriminator=void 0,V1PersistentVolumeClaimSpec.attributeTypeMap=[{name:"accessModes",baseName:"accessModes",type:"Array<string>"},{name:"dataSource",baseName:"dataSource",type:"V1TypedLocalObjectReference"},{name:"dataSourceRef",baseName:"dataSourceRef",type:"V1TypedObjectReference"},{name:"resources",baseName:"resources",type:"V1VolumeResourceRequirements"},{name:"selector",baseName:"selector",type:"V1LabelSelector"},{name:"storageClassName",baseName:"storageClassName",type:"string"},{name:"volumeAttributesClassName",baseName:"volumeAttributesClassName",type:"string"},{name:"volumeMode",baseName:"volumeMode",type:"string"},{name:"volumeName",baseName:"volumeName",type:"string"}];class V1PersistentVolumeClaimStatus{static getAttributeTypeMap(){return V1PersistentVolumeClaimStatus.attributeTypeMap}}V1PersistentVolumeClaimStatus.discriminator=void 0,V1PersistentVolumeClaimStatus.attributeTypeMap=[{name:"accessModes",baseName:"accessModes",type:"Array<string>"},{name:"allocatedResourceStatuses",baseName:"allocatedResourceStatuses",type:"{ [key: string]: string; }"},{name:"allocatedResources",baseName:"allocatedResources",type:"{ [key: string]: string; }"},{name:"capacity",baseName:"capacity",type:"{ [key: string]: string; }"},{name:"conditions",baseName:"conditions",type:"Array<V1PersistentVolumeClaimCondition>"},{name:"currentVolumeAttributesClassName",baseName:"currentVolumeAttributesClassName",type:"string"},{name:"modifyVolumeStatus",baseName:"modifyVolumeStatus",type:"V1ModifyVolumeStatus"},{name:"phase",baseName:"phase",type:"string"}];class V1PersistentVolumeClaimTemplate{static getAttributeTypeMap(){return V1PersistentVolumeClaimTemplate.attributeTypeMap}}V1PersistentVolumeClaimTemplate.discriminator=void 0,V1PersistentVolumeClaimTemplate.attributeTypeMap=[{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1PersistentVolumeClaimSpec"}];class V1PersistentVolumeClaimVolumeSource{static getAttributeTypeMap(){return V1PersistentVolumeClaimVolumeSource.attributeTypeMap}}V1PersistentVolumeClaimVolumeSource.discriminator=void 0,V1PersistentVolumeClaimVolumeSource.attributeTypeMap=[{name:"claimName",baseName:"claimName",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"}];class V1PersistentVolumeList{static getAttributeTypeMap(){return V1PersistentVolumeList.attributeTypeMap}}V1PersistentVolumeList.discriminator=void 0,V1PersistentVolumeList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1PersistentVolume>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1PersistentVolumeSpec{static getAttributeTypeMap(){return V1PersistentVolumeSpec.attributeTypeMap}}V1PersistentVolumeSpec.discriminator=void 0,V1PersistentVolumeSpec.attributeTypeMap=[{name:"accessModes",baseName:"accessModes",type:"Array<string>"},{name:"awsElasticBlockStore",baseName:"awsElasticBlockStore",type:"V1AWSElasticBlockStoreVolumeSource"},{name:"azureDisk",baseName:"azureDisk",type:"V1AzureDiskVolumeSource"},{name:"azureFile",baseName:"azureFile",type:"V1AzureFilePersistentVolumeSource"},{name:"capacity",baseName:"capacity",type:"{ [key: string]: string; }"},{name:"cephfs",baseName:"cephfs",type:"V1CephFSPersistentVolumeSource"},{name:"cinder",baseName:"cinder",type:"V1CinderPersistentVolumeSource"},{name:"claimRef",baseName:"claimRef",type:"V1ObjectReference"},{name:"csi",baseName:"csi",type:"V1CSIPersistentVolumeSource"},{name:"fc",baseName:"fc",type:"V1FCVolumeSource"},{name:"flexVolume",baseName:"flexVolume",type:"V1FlexPersistentVolumeSource"},{name:"flocker",baseName:"flocker",type:"V1FlockerVolumeSource"},{name:"gcePersistentDisk",baseName:"gcePersistentDisk",type:"V1GCEPersistentDiskVolumeSource"},{name:"glusterfs",baseName:"glusterfs",type:"V1GlusterfsPersistentVolumeSource"},{name:"hostPath",baseName:"hostPath",type:"V1HostPathVolumeSource"},{name:"iscsi",baseName:"iscsi",type:"V1ISCSIPersistentVolumeSource"},{name:"local",baseName:"local",type:"V1LocalVolumeSource"},{name:"mountOptions",baseName:"mountOptions",type:"Array<string>"},{name:"nfs",baseName:"nfs",type:"V1NFSVolumeSource"},{name:"nodeAffinity",baseName:"nodeAffinity",type:"V1VolumeNodeAffinity"},{name:"persistentVolumeReclaimPolicy",baseName:"persistentVolumeReclaimPolicy",type:"string"},{name:"photonPersistentDisk",baseName:"photonPersistentDisk",type:"V1PhotonPersistentDiskVolumeSource"},{name:"portworxVolume",baseName:"portworxVolume",type:"V1PortworxVolumeSource"},{name:"quobyte",baseName:"quobyte",type:"V1QuobyteVolumeSource"},{name:"rbd",baseName:"rbd",type:"V1RBDPersistentVolumeSource"},{name:"scaleIO",baseName:"scaleIO",type:"V1ScaleIOPersistentVolumeSource"},{name:"storageClassName",baseName:"storageClassName",type:"string"},{name:"storageos",baseName:"storageos",type:"V1StorageOSPersistentVolumeSource"},{name:"volumeAttributesClassName",baseName:"volumeAttributesClassName",type:"string"},{name:"volumeMode",baseName:"volumeMode",type:"string"},{name:"vsphereVolume",baseName:"vsphereVolume",type:"V1VsphereVirtualDiskVolumeSource"}];class V1PersistentVolumeStatus{static getAttributeTypeMap(){return V1PersistentVolumeStatus.attributeTypeMap}}V1PersistentVolumeStatus.discriminator=void 0,V1PersistentVolumeStatus.attributeTypeMap=[{name:"lastPhaseTransitionTime",baseName:"lastPhaseTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"phase",baseName:"phase",type:"string"},{name:"reason",baseName:"reason",type:"string"}];class V1PhotonPersistentDiskVolumeSource{static getAttributeTypeMap(){return V1PhotonPersistentDiskVolumeSource.attributeTypeMap}}V1PhotonPersistentDiskVolumeSource.discriminator=void 0,V1PhotonPersistentDiskVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"pdID",baseName:"pdID",type:"string"}];class V1Pod{static getAttributeTypeMap(){return V1Pod.attributeTypeMap}}V1Pod.discriminator=void 0,V1Pod.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1PodSpec"},{name:"status",baseName:"status",type:"V1PodStatus"}];class V1PodAffinity{static getAttributeTypeMap(){return V1PodAffinity.attributeTypeMap}}V1PodAffinity.discriminator=void 0,V1PodAffinity.attributeTypeMap=[{name:"preferredDuringSchedulingIgnoredDuringExecution",baseName:"preferredDuringSchedulingIgnoredDuringExecution",type:"Array<V1WeightedPodAffinityTerm>"},{name:"requiredDuringSchedulingIgnoredDuringExecution",baseName:"requiredDuringSchedulingIgnoredDuringExecution",type:"Array<V1PodAffinityTerm>"}];class V1PodAffinityTerm{static getAttributeTypeMap(){return V1PodAffinityTerm.attributeTypeMap}}V1PodAffinityTerm.discriminator=void 0,V1PodAffinityTerm.attributeTypeMap=[{name:"labelSelector",baseName:"labelSelector",type:"V1LabelSelector"},{name:"matchLabelKeys",baseName:"matchLabelKeys",type:"Array<string>"},{name:"mismatchLabelKeys",baseName:"mismatchLabelKeys",type:"Array<string>"},{name:"namespaceSelector",baseName:"namespaceSelector",type:"V1LabelSelector"},{name:"namespaces",baseName:"namespaces",type:"Array<string>"},{name:"topologyKey",baseName:"topologyKey",type:"string"}];class V1PodAntiAffinity{static getAttributeTypeMap(){return V1PodAntiAffinity.attributeTypeMap}}V1PodAntiAffinity.discriminator=void 0,V1PodAntiAffinity.attributeTypeMap=[{name:"preferredDuringSchedulingIgnoredDuringExecution",baseName:"preferredDuringSchedulingIgnoredDuringExecution",type:"Array<V1WeightedPodAffinityTerm>"},{name:"requiredDuringSchedulingIgnoredDuringExecution",baseName:"requiredDuringSchedulingIgnoredDuringExecution",type:"Array<V1PodAffinityTerm>"}];class V1PodCondition{static getAttributeTypeMap(){return V1PodCondition.attributeTypeMap}}V1PodCondition.discriminator=void 0,V1PodCondition.attributeTypeMap=[{name:"lastProbeTime",baseName:"lastProbeTime",type:"Date"},{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1PodDNSConfig{static getAttributeTypeMap(){return V1PodDNSConfig.attributeTypeMap}}V1PodDNSConfig.discriminator=void 0,V1PodDNSConfig.attributeTypeMap=[{name:"nameservers",baseName:"nameservers",type:"Array<string>"},{name:"options",baseName:"options",type:"Array<V1PodDNSConfigOption>"},{name:"searches",baseName:"searches",type:"Array<string>"}];class V1PodDNSConfigOption{static getAttributeTypeMap(){return V1PodDNSConfigOption.attributeTypeMap}}V1PodDNSConfigOption.discriminator=void 0,V1PodDNSConfigOption.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"value",baseName:"value",type:"string"}];class V1PodDisruptionBudget{static getAttributeTypeMap(){return V1PodDisruptionBudget.attributeTypeMap}}V1PodDisruptionBudget.discriminator=void 0,V1PodDisruptionBudget.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1PodDisruptionBudgetSpec"},{name:"status",baseName:"status",type:"V1PodDisruptionBudgetStatus"}];class V1PodDisruptionBudgetList{static getAttributeTypeMap(){return V1PodDisruptionBudgetList.attributeTypeMap}}V1PodDisruptionBudgetList.discriminator=void 0,V1PodDisruptionBudgetList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1PodDisruptionBudget>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1PodDisruptionBudgetSpec{static getAttributeTypeMap(){return V1PodDisruptionBudgetSpec.attributeTypeMap}}V1PodDisruptionBudgetSpec.discriminator=void 0,V1PodDisruptionBudgetSpec.attributeTypeMap=[{name:"maxUnavailable",baseName:"maxUnavailable",type:"IntOrString"},{name:"minAvailable",baseName:"minAvailable",type:"IntOrString"},{name:"selector",baseName:"selector",type:"V1LabelSelector"},{name:"unhealthyPodEvictionPolicy",baseName:"unhealthyPodEvictionPolicy",type:"string"}];class V1PodDisruptionBudgetStatus{static getAttributeTypeMap(){return V1PodDisruptionBudgetStatus.attributeTypeMap}}V1PodDisruptionBudgetStatus.discriminator=void 0,V1PodDisruptionBudgetStatus.attributeTypeMap=[{name:"conditions",baseName:"conditions",type:"Array<V1Condition>"},{name:"currentHealthy",baseName:"currentHealthy",type:"number"},{name:"desiredHealthy",baseName:"desiredHealthy",type:"number"},{name:"disruptedPods",baseName:"disruptedPods",type:"{ [key: string]: Date; }"},{name:"disruptionsAllowed",baseName:"disruptionsAllowed",type:"number"},{name:"expectedPods",baseName:"expectedPods",type:"number"},{name:"observedGeneration",baseName:"observedGeneration",type:"number"}];class V1PodFailurePolicy{static getAttributeTypeMap(){return V1PodFailurePolicy.attributeTypeMap}}V1PodFailurePolicy.discriminator=void 0,V1PodFailurePolicy.attributeTypeMap=[{name:"rules",baseName:"rules",type:"Array<V1PodFailurePolicyRule>"}];class V1PodFailurePolicyOnExitCodesRequirement{static getAttributeTypeMap(){return V1PodFailurePolicyOnExitCodesRequirement.attributeTypeMap}}V1PodFailurePolicyOnExitCodesRequirement.discriminator=void 0,V1PodFailurePolicyOnExitCodesRequirement.attributeTypeMap=[{name:"containerName",baseName:"containerName",type:"string"},{name:"operator",baseName:"operator",type:"string"},{name:"values",baseName:"values",type:"Array<number>"}];class V1PodFailurePolicyOnPodConditionsPattern{static getAttributeTypeMap(){return V1PodFailurePolicyOnPodConditionsPattern.attributeTypeMap}}V1PodFailurePolicyOnPodConditionsPattern.discriminator=void 0,V1PodFailurePolicyOnPodConditionsPattern.attributeTypeMap=[{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1PodFailurePolicyRule{static getAttributeTypeMap(){return V1PodFailurePolicyRule.attributeTypeMap}}V1PodFailurePolicyRule.discriminator=void 0,V1PodFailurePolicyRule.attributeTypeMap=[{name:"action",baseName:"action",type:"string"},{name:"onExitCodes",baseName:"onExitCodes",type:"V1PodFailurePolicyOnExitCodesRequirement"},{name:"onPodConditions",baseName:"onPodConditions",type:"Array<V1PodFailurePolicyOnPodConditionsPattern>"}];class V1PodIP{static getAttributeTypeMap(){return V1PodIP.attributeTypeMap}}V1PodIP.discriminator=void 0,V1PodIP.attributeTypeMap=[{name:"ip",baseName:"ip",type:"string"}];class V1PodList{static getAttributeTypeMap(){return V1PodList.attributeTypeMap}}V1PodList.discriminator=void 0,V1PodList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Pod>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1PodOS{static getAttributeTypeMap(){return V1PodOS.attributeTypeMap}}V1PodOS.discriminator=void 0,V1PodOS.attributeTypeMap=[{name:"name",baseName:"name",type:"string"}];class V1PodReadinessGate{static getAttributeTypeMap(){return V1PodReadinessGate.attributeTypeMap}}V1PodReadinessGate.discriminator=void 0,V1PodReadinessGate.attributeTypeMap=[{name:"conditionType",baseName:"conditionType",type:"string"}];class V1PodResourceClaim{static getAttributeTypeMap(){return V1PodResourceClaim.attributeTypeMap}}V1PodResourceClaim.discriminator=void 0,V1PodResourceClaim.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"source",baseName:"source",type:"V1ClaimSource"}];class V1PodResourceClaimStatus{static getAttributeTypeMap(){return V1PodResourceClaimStatus.attributeTypeMap}}V1PodResourceClaimStatus.discriminator=void 0,V1PodResourceClaimStatus.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"resourceClaimName",baseName:"resourceClaimName",type:"string"}];class V1PodSchedulingGate{static getAttributeTypeMap(){return V1PodSchedulingGate.attributeTypeMap}}V1PodSchedulingGate.discriminator=void 0,V1PodSchedulingGate.attributeTypeMap=[{name:"name",baseName:"name",type:"string"}];class V1PodSecurityContext{static getAttributeTypeMap(){return V1PodSecurityContext.attributeTypeMap}}V1PodSecurityContext.discriminator=void 0,V1PodSecurityContext.attributeTypeMap=[{name:"appArmorProfile",baseName:"appArmorProfile",type:"V1AppArmorProfile"},{name:"fsGroup",baseName:"fsGroup",type:"number"},{name:"fsGroupChangePolicy",baseName:"fsGroupChangePolicy",type:"string"},{name:"runAsGroup",baseName:"runAsGroup",type:"number"},{name:"runAsNonRoot",baseName:"runAsNonRoot",type:"boolean"},{name:"runAsUser",baseName:"runAsUser",type:"number"},{name:"seLinuxOptions",baseName:"seLinuxOptions",type:"V1SELinuxOptions"},{name:"seccompProfile",baseName:"seccompProfile",type:"V1SeccompProfile"},{name:"supplementalGroups",baseName:"supplementalGroups",type:"Array<number>"},{name:"sysctls",baseName:"sysctls",type:"Array<V1Sysctl>"},{name:"windowsOptions",baseName:"windowsOptions",type:"V1WindowsSecurityContextOptions"}];class V1PodSpec{static getAttributeTypeMap(){return V1PodSpec.attributeTypeMap}}V1PodSpec.discriminator=void 0,V1PodSpec.attributeTypeMap=[{name:"activeDeadlineSeconds",baseName:"activeDeadlineSeconds",type:"number"},{name:"affinity",baseName:"affinity",type:"V1Affinity"},{name:"automountServiceAccountToken",baseName:"automountServiceAccountToken",type:"boolean"},{name:"containers",baseName:"containers",type:"Array<V1Container>"},{name:"dnsConfig",baseName:"dnsConfig",type:"V1PodDNSConfig"},{name:"dnsPolicy",baseName:"dnsPolicy",type:"string"},{name:"enableServiceLinks",baseName:"enableServiceLinks",type:"boolean"},{name:"ephemeralContainers",baseName:"ephemeralContainers",type:"Array<V1EphemeralContainer>"},{name:"hostAliases",baseName:"hostAliases",type:"Array<V1HostAlias>"},{name:"hostIPC",baseName:"hostIPC",type:"boolean"},{name:"hostNetwork",baseName:"hostNetwork",type:"boolean"},{name:"hostPID",baseName:"hostPID",type:"boolean"},{name:"hostUsers",baseName:"hostUsers",type:"boolean"},{name:"hostname",baseName:"hostname",type:"string"},{name:"imagePullSecrets",baseName:"imagePullSecrets",type:"Array<V1LocalObjectReference>"},{name:"initContainers",baseName:"initContainers",type:"Array<V1Container>"},{name:"nodeName",baseName:"nodeName",type:"string"},{name:"nodeSelector",baseName:"nodeSelector",type:"{ [key: string]: string; }"},{name:"os",baseName:"os",type:"V1PodOS"},{name:"overhead",baseName:"overhead",type:"{ [key: string]: string; }"},{name:"preemptionPolicy",baseName:"preemptionPolicy",type:"string"},{name:"priority",baseName:"priority",type:"number"},{name:"priorityClassName",baseName:"priorityClassName",type:"string"},{name:"readinessGates",baseName:"readinessGates",type:"Array<V1PodReadinessGate>"},{name:"resourceClaims",baseName:"resourceClaims",type:"Array<V1PodResourceClaim>"},{name:"restartPolicy",baseName:"restartPolicy",type:"string"},{name:"runtimeClassName",baseName:"runtimeClassName",type:"string"},{name:"schedulerName",baseName:"schedulerName",type:"string"},{name:"schedulingGates",baseName:"schedulingGates",type:"Array<V1PodSchedulingGate>"},{name:"securityContext",baseName:"securityContext",type:"V1PodSecurityContext"},{name:"serviceAccount",baseName:"serviceAccount",type:"string"},{name:"serviceAccountName",baseName:"serviceAccountName",type:"string"},{name:"setHostnameAsFQDN",baseName:"setHostnameAsFQDN",type:"boolean"},{name:"shareProcessNamespace",baseName:"shareProcessNamespace",type:"boolean"},{name:"subdomain",baseName:"subdomain",type:"string"},{name:"terminationGracePeriodSeconds",baseName:"terminationGracePeriodSeconds",type:"number"},{name:"tolerations",baseName:"tolerations",type:"Array<V1Toleration>"},{name:"topologySpreadConstraints",baseName:"topologySpreadConstraints",type:"Array<V1TopologySpreadConstraint>"},{name:"volumes",baseName:"volumes",type:"Array<V1Volume>"}];class V1PodStatus{static getAttributeTypeMap(){return V1PodStatus.attributeTypeMap}}V1PodStatus.discriminator=void 0,V1PodStatus.attributeTypeMap=[{name:"conditions",baseName:"conditions",type:"Array<V1PodCondition>"},{name:"containerStatuses",baseName:"containerStatuses",type:"Array<V1ContainerStatus>"},{name:"ephemeralContainerStatuses",baseName:"ephemeralContainerStatuses",type:"Array<V1ContainerStatus>"},{name:"hostIP",baseName:"hostIP",type:"string"},{name:"hostIPs",baseName:"hostIPs",type:"Array<V1HostIP>"},{name:"initContainerStatuses",baseName:"initContainerStatuses",type:"Array<V1ContainerStatus>"},{name:"message",baseName:"message",type:"string"},{name:"nominatedNodeName",baseName:"nominatedNodeName",type:"string"},{name:"phase",baseName:"phase",type:"string"},{name:"podIP",baseName:"podIP",type:"string"},{name:"podIPs",baseName:"podIPs",type:"Array<V1PodIP>"},{name:"qosClass",baseName:"qosClass",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"resize",baseName:"resize",type:"string"},{name:"resourceClaimStatuses",baseName:"resourceClaimStatuses",type:"Array<V1PodResourceClaimStatus>"},{name:"startTime",baseName:"startTime",type:"Date"}];class V1PodTemplateSpec{static getAttributeTypeMap(){return V1PodTemplateSpec.attributeTypeMap}}V1PodTemplateSpec.discriminator=void 0,V1PodTemplateSpec.attributeTypeMap=[{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1PodSpec"}];class V1PolicyRule{static getAttributeTypeMap(){return V1PolicyRule.attributeTypeMap}}V1PolicyRule.discriminator=void 0,V1PolicyRule.attributeTypeMap=[{name:"apiGroups",baseName:"apiGroups",type:"Array<string>"},{name:"nonResourceURLs",baseName:"nonResourceURLs",type:"Array<string>"},{name:"resourceNames",baseName:"resourceNames",type:"Array<string>"},{name:"resources",baseName:"resources",type:"Array<string>"},{name:"verbs",baseName:"verbs",type:"Array<string>"}];class V1PortStatus{static getAttributeTypeMap(){return V1PortStatus.attributeTypeMap}}V1PortStatus.discriminator=void 0,V1PortStatus.attributeTypeMap=[{name:"error",baseName:"error",type:"string"},{name:"port",baseName:"port",type:"number"},{name:"protocol",baseName:"protocol",type:"string"}];class V1PortworxVolumeSource{static getAttributeTypeMap(){return V1PortworxVolumeSource.attributeTypeMap}}V1PortworxVolumeSource.discriminator=void 0,V1PortworxVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"volumeID",baseName:"volumeID",type:"string"}];class V1Preconditions{static getAttributeTypeMap(){return V1Preconditions.attributeTypeMap}}V1Preconditions.discriminator=void 0,V1Preconditions.attributeTypeMap=[{name:"resourceVersion",baseName:"resourceVersion",type:"string"},{name:"uid",baseName:"uid",type:"string"}];class V1PreferredSchedulingTerm{static getAttributeTypeMap(){return V1PreferredSchedulingTerm.attributeTypeMap}}V1PreferredSchedulingTerm.discriminator=void 0,V1PreferredSchedulingTerm.attributeTypeMap=[{name:"preference",baseName:"preference",type:"V1NodeSelectorTerm"},{name:"weight",baseName:"weight",type:"number"}];class V1PriorityClass{static getAttributeTypeMap(){return V1PriorityClass.attributeTypeMap}}V1PriorityClass.discriminator=void 0,V1PriorityClass.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"description",baseName:"description",type:"string"},{name:"globalDefault",baseName:"globalDefault",type:"boolean"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"preemptionPolicy",baseName:"preemptionPolicy",type:"string"},{name:"value",baseName:"value",type:"number"}];class V1PriorityClassList{static getAttributeTypeMap(){return V1PriorityClassList.attributeTypeMap}}V1PriorityClassList.discriminator=void 0,V1PriorityClassList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1PriorityClass>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1Probe{static getAttributeTypeMap(){return V1Probe.attributeTypeMap}}V1Probe.discriminator=void 0,V1Probe.attributeTypeMap=[{name:"exec",baseName:"exec",type:"V1ExecAction"},{name:"failureThreshold",baseName:"failureThreshold",type:"number"},{name:"grpc",baseName:"grpc",type:"V1GRPCAction"},{name:"httpGet",baseName:"httpGet",type:"V1HTTPGetAction"},{name:"initialDelaySeconds",baseName:"initialDelaySeconds",type:"number"},{name:"periodSeconds",baseName:"periodSeconds",type:"number"},{name:"successThreshold",baseName:"successThreshold",type:"number"},{name:"tcpSocket",baseName:"tcpSocket",type:"V1TCPSocketAction"},{name:"terminationGracePeriodSeconds",baseName:"terminationGracePeriodSeconds",type:"number"},{name:"timeoutSeconds",baseName:"timeoutSeconds",type:"number"}];class V1ProjectedVolumeSource{static getAttributeTypeMap(){return V1ProjectedVolumeSource.attributeTypeMap}}V1ProjectedVolumeSource.discriminator=void 0,V1ProjectedVolumeSource.attributeTypeMap=[{name:"defaultMode",baseName:"defaultMode",type:"number"},{name:"sources",baseName:"sources",type:"Array<V1VolumeProjection>"}];class V1QuobyteVolumeSource{static getAttributeTypeMap(){return V1QuobyteVolumeSource.attributeTypeMap}}V1QuobyteVolumeSource.discriminator=void 0,V1QuobyteVolumeSource.attributeTypeMap=[{name:"group",baseName:"group",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"registry",baseName:"registry",type:"string"},{name:"tenant",baseName:"tenant",type:"string"},{name:"user",baseName:"user",type:"string"},{name:"volume",baseName:"volume",type:"string"}];class V1RBDPersistentVolumeSource{static getAttributeTypeMap(){return V1RBDPersistentVolumeSource.attributeTypeMap}}V1RBDPersistentVolumeSource.discriminator=void 0,V1RBDPersistentVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"image",baseName:"image",type:"string"},{name:"keyring",baseName:"keyring",type:"string"},{name:"monitors",baseName:"monitors",type:"Array<string>"},{name:"pool",baseName:"pool",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1SecretReference"},{name:"user",baseName:"user",type:"string"}];class V1RBDVolumeSource{static getAttributeTypeMap(){return V1RBDVolumeSource.attributeTypeMap}}V1RBDVolumeSource.discriminator=void 0,V1RBDVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"image",baseName:"image",type:"string"},{name:"keyring",baseName:"keyring",type:"string"},{name:"monitors",baseName:"monitors",type:"Array<string>"},{name:"pool",baseName:"pool",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1LocalObjectReference"},{name:"user",baseName:"user",type:"string"}];class V1ReplicaSet{static getAttributeTypeMap(){return V1ReplicaSet.attributeTypeMap}}V1ReplicaSet.discriminator=void 0,V1ReplicaSet.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1ReplicaSetSpec"},{name:"status",baseName:"status",type:"V1ReplicaSetStatus"}];class V1ReplicaSetCondition{static getAttributeTypeMap(){return V1ReplicaSetCondition.attributeTypeMap}}V1ReplicaSetCondition.discriminator=void 0,V1ReplicaSetCondition.attributeTypeMap=[{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1ReplicaSetList{static getAttributeTypeMap(){return V1ReplicaSetList.attributeTypeMap}}V1ReplicaSetList.discriminator=void 0,V1ReplicaSetList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1ReplicaSet>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1ReplicaSetSpec{static getAttributeTypeMap(){return V1ReplicaSetSpec.attributeTypeMap}}V1ReplicaSetSpec.discriminator=void 0,V1ReplicaSetSpec.attributeTypeMap=[{name:"minReadySeconds",baseName:"minReadySeconds",type:"number"},{name:"replicas",baseName:"replicas",type:"number"},{name:"selector",baseName:"selector",type:"V1LabelSelector"},{name:"template",baseName:"template",type:"V1PodTemplateSpec"}];class V1ReplicaSetStatus{static getAttributeTypeMap(){return V1ReplicaSetStatus.attributeTypeMap}}V1ReplicaSetStatus.discriminator=void 0,V1ReplicaSetStatus.attributeTypeMap=[{name:"availableReplicas",baseName:"availableReplicas",type:"number"},{name:"conditions",baseName:"conditions",type:"Array<V1ReplicaSetCondition>"},{name:"fullyLabeledReplicas",baseName:"fullyLabeledReplicas",type:"number"},{name:"observedGeneration",baseName:"observedGeneration",type:"number"},{name:"readyReplicas",baseName:"readyReplicas",type:"number"},{name:"replicas",baseName:"replicas",type:"number"}];class V1ResourceClaim{static getAttributeTypeMap(){return V1ResourceClaim.attributeTypeMap}}V1ResourceClaim.discriminator=void 0,V1ResourceClaim.attributeTypeMap=[{name:"name",baseName:"name",type:"string"}];class V1ResourceFieldSelector{static getAttributeTypeMap(){return V1ResourceFieldSelector.attributeTypeMap}}V1ResourceFieldSelector.discriminator=void 0,V1ResourceFieldSelector.attributeTypeMap=[{name:"containerName",baseName:"containerName",type:"string"},{name:"divisor",baseName:"divisor",type:"string"},{name:"resource",baseName:"resource",type:"string"}];class V1ResourceQuota{static getAttributeTypeMap(){return V1ResourceQuota.attributeTypeMap}}V1ResourceQuota.discriminator=void 0,V1ResourceQuota.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1ResourceQuotaSpec"},{name:"status",baseName:"status",type:"V1ResourceQuotaStatus"}];class V1ResourceQuotaList{static getAttributeTypeMap(){return V1ResourceQuotaList.attributeTypeMap}}V1ResourceQuotaList.discriminator=void 0,V1ResourceQuotaList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1ResourceQuota>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1ResourceQuotaSpec{static getAttributeTypeMap(){return V1ResourceQuotaSpec.attributeTypeMap}}V1ResourceQuotaSpec.discriminator=void 0,V1ResourceQuotaSpec.attributeTypeMap=[{name:"hard",baseName:"hard",type:"{ [key: string]: string; }"},{name:"scopeSelector",baseName:"scopeSelector",type:"V1ScopeSelector"},{name:"scopes",baseName:"scopes",type:"Array<string>"}];class V1ResourceQuotaStatus{static getAttributeTypeMap(){return V1ResourceQuotaStatus.attributeTypeMap}}V1ResourceQuotaStatus.discriminator=void 0,V1ResourceQuotaStatus.attributeTypeMap=[{name:"hard",baseName:"hard",type:"{ [key: string]: string; }"},{name:"used",baseName:"used",type:"{ [key: string]: string; }"}];class V1ResourceRequirements{static getAttributeTypeMap(){return V1ResourceRequirements.attributeTypeMap}}V1ResourceRequirements.discriminator=void 0,V1ResourceRequirements.attributeTypeMap=[{name:"claims",baseName:"claims",type:"Array<V1ResourceClaim>"},{name:"limits",baseName:"limits",type:"{ [key: string]: string; }"},{name:"requests",baseName:"requests",type:"{ [key: string]: string; }"}];class V1Role{static getAttributeTypeMap(){return V1Role.attributeTypeMap}}V1Role.discriminator=void 0,V1Role.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"rules",baseName:"rules",type:"Array<V1PolicyRule>"}];class V1RoleBinding{static getAttributeTypeMap(){return V1RoleBinding.attributeTypeMap}}V1RoleBinding.discriminator=void 0,V1RoleBinding.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"roleRef",baseName:"roleRef",type:"V1RoleRef"},{name:"subjects",baseName:"subjects",type:"Array<RbacV1Subject>"}];class V1RoleBindingList{static getAttributeTypeMap(){return V1RoleBindingList.attributeTypeMap}}V1RoleBindingList.discriminator=void 0,V1RoleBindingList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1RoleBinding>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1RoleList{static getAttributeTypeMap(){return V1RoleList.attributeTypeMap}}V1RoleList.discriminator=void 0,V1RoleList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Role>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1RoleRef{static getAttributeTypeMap(){return V1RoleRef.attributeTypeMap}}V1RoleRef.discriminator=void 0,V1RoleRef.attributeTypeMap=[{name:"apiGroup",baseName:"apiGroup",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"}];class V1RollingUpdateDaemonSet{static getAttributeTypeMap(){return V1RollingUpdateDaemonSet.attributeTypeMap}}V1RollingUpdateDaemonSet.discriminator=void 0,V1RollingUpdateDaemonSet.attributeTypeMap=[{name:"maxSurge",baseName:"maxSurge",type:"IntOrString"},{name:"maxUnavailable",baseName:"maxUnavailable",type:"IntOrString"}];class V1RollingUpdateDeployment{static getAttributeTypeMap(){return V1RollingUpdateDeployment.attributeTypeMap}}V1RollingUpdateDeployment.discriminator=void 0,V1RollingUpdateDeployment.attributeTypeMap=[{name:"maxSurge",baseName:"maxSurge",type:"IntOrString"},{name:"maxUnavailable",baseName:"maxUnavailable",type:"IntOrString"}];class V1RollingUpdateStatefulSetStrategy{static getAttributeTypeMap(){return V1RollingUpdateStatefulSetStrategy.attributeTypeMap}}V1RollingUpdateStatefulSetStrategy.discriminator=void 0,V1RollingUpdateStatefulSetStrategy.attributeTypeMap=[{name:"maxUnavailable",baseName:"maxUnavailable",type:"IntOrString"},{name:"partition",baseName:"partition",type:"number"}];class V1RuleWithOperations{static getAttributeTypeMap(){return V1RuleWithOperations.attributeTypeMap}}V1RuleWithOperations.discriminator=void 0,V1RuleWithOperations.attributeTypeMap=[{name:"apiGroups",baseName:"apiGroups",type:"Array<string>"},{name:"apiVersions",baseName:"apiVersions",type:"Array<string>"},{name:"operations",baseName:"operations",type:"Array<string>"},{name:"resources",baseName:"resources",type:"Array<string>"},{name:"scope",baseName:"scope",type:"string"}];class V1SELinuxOptions{static getAttributeTypeMap(){return V1SELinuxOptions.attributeTypeMap}}V1SELinuxOptions.discriminator=void 0,V1SELinuxOptions.attributeTypeMap=[{name:"level",baseName:"level",type:"string"},{name:"role",baseName:"role",type:"string"},{name:"type",baseName:"type",type:"string"},{name:"user",baseName:"user",type:"string"}];class V1ScaleIOPersistentVolumeSource{static getAttributeTypeMap(){return V1ScaleIOPersistentVolumeSource.attributeTypeMap}}V1ScaleIOPersistentVolumeSource.discriminator=void 0,V1ScaleIOPersistentVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"gateway",baseName:"gateway",type:"string"},{name:"protectionDomain",baseName:"protectionDomain",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1SecretReference"},{name:"sslEnabled",baseName:"sslEnabled",type:"boolean"},{name:"storageMode",baseName:"storageMode",type:"string"},{name:"storagePool",baseName:"storagePool",type:"string"},{name:"system",baseName:"system",type:"string"},{name:"volumeName",baseName:"volumeName",type:"string"}];class V1ScaleIOVolumeSource{static getAttributeTypeMap(){return V1ScaleIOVolumeSource.attributeTypeMap}}V1ScaleIOVolumeSource.discriminator=void 0,V1ScaleIOVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"gateway",baseName:"gateway",type:"string"},{name:"protectionDomain",baseName:"protectionDomain",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1LocalObjectReference"},{name:"sslEnabled",baseName:"sslEnabled",type:"boolean"},{name:"storageMode",baseName:"storageMode",type:"string"},{name:"storagePool",baseName:"storagePool",type:"string"},{name:"system",baseName:"system",type:"string"},{name:"volumeName",baseName:"volumeName",type:"string"}];class V1ScopeSelector{static getAttributeTypeMap(){return V1ScopeSelector.attributeTypeMap}}V1ScopeSelector.discriminator=void 0,V1ScopeSelector.attributeTypeMap=[{name:"matchExpressions",baseName:"matchExpressions",type:"Array<V1ScopedResourceSelectorRequirement>"}];class V1ScopedResourceSelectorRequirement{static getAttributeTypeMap(){return V1ScopedResourceSelectorRequirement.attributeTypeMap}}V1ScopedResourceSelectorRequirement.discriminator=void 0,V1ScopedResourceSelectorRequirement.attributeTypeMap=[{name:"operator",baseName:"operator",type:"string"},{name:"scopeName",baseName:"scopeName",type:"string"},{name:"values",baseName:"values",type:"Array<string>"}];class V1SeccompProfile{static getAttributeTypeMap(){return V1SeccompProfile.attributeTypeMap}}V1SeccompProfile.discriminator=void 0,V1SeccompProfile.attributeTypeMap=[{name:"localhostProfile",baseName:"localhostProfile",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1Secret{static getAttributeTypeMap(){return V1Secret.attributeTypeMap}}V1Secret.discriminator=void 0,V1Secret.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"data",baseName:"data",type:"{ [key: string]: string; }"},{name:"immutable",baseName:"immutable",type:"boolean"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"stringData",baseName:"stringData",type:"{ [key: string]: string; }"},{name:"type",baseName:"type",type:"string"}];class V1SecretEnvSource{static getAttributeTypeMap(){return V1SecretEnvSource.attributeTypeMap}}V1SecretEnvSource.discriminator=void 0,V1SecretEnvSource.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"optional",baseName:"optional",type:"boolean"}];class V1SecretKeySelector{static getAttributeTypeMap(){return V1SecretKeySelector.attributeTypeMap}}V1SecretKeySelector.discriminator=void 0,V1SecretKeySelector.attributeTypeMap=[{name:"key",baseName:"key",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"optional",baseName:"optional",type:"boolean"}];class V1SecretList{static getAttributeTypeMap(){return V1SecretList.attributeTypeMap}}V1SecretList.discriminator=void 0,V1SecretList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Secret>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1SecretProjection{static getAttributeTypeMap(){return V1SecretProjection.attributeTypeMap}}V1SecretProjection.discriminator=void 0,V1SecretProjection.attributeTypeMap=[{name:"items",baseName:"items",type:"Array<V1KeyToPath>"},{name:"name",baseName:"name",type:"string"},{name:"optional",baseName:"optional",type:"boolean"}];class V1SecretReference{static getAttributeTypeMap(){return V1SecretReference.attributeTypeMap}}V1SecretReference.discriminator=void 0,V1SecretReference.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"}];class V1SecretVolumeSource{static getAttributeTypeMap(){return V1SecretVolumeSource.attributeTypeMap}}V1SecretVolumeSource.discriminator=void 0,V1SecretVolumeSource.attributeTypeMap=[{name:"defaultMode",baseName:"defaultMode",type:"number"},{name:"items",baseName:"items",type:"Array<V1KeyToPath>"},{name:"optional",baseName:"optional",type:"boolean"},{name:"secretName",baseName:"secretName",type:"string"}];class V1SecurityContext{static getAttributeTypeMap(){return V1SecurityContext.attributeTypeMap}}V1SecurityContext.discriminator=void 0,V1SecurityContext.attributeTypeMap=[{name:"allowPrivilegeEscalation",baseName:"allowPrivilegeEscalation",type:"boolean"},{name:"appArmorProfile",baseName:"appArmorProfile",type:"V1AppArmorProfile"},{name:"capabilities",baseName:"capabilities",type:"V1Capabilities"},{name:"privileged",baseName:"privileged",type:"boolean"},{name:"procMount",baseName:"procMount",type:"string"},{name:"readOnlyRootFilesystem",baseName:"readOnlyRootFilesystem",type:"boolean"},{name:"runAsGroup",baseName:"runAsGroup",type:"number"},{name:"runAsNonRoot",baseName:"runAsNonRoot",type:"boolean"},{name:"runAsUser",baseName:"runAsUser",type:"number"},{name:"seLinuxOptions",baseName:"seLinuxOptions",type:"V1SELinuxOptions"},{name:"seccompProfile",baseName:"seccompProfile",type:"V1SeccompProfile"},{name:"windowsOptions",baseName:"windowsOptions",type:"V1WindowsSecurityContextOptions"}];class V1SelectableField{static getAttributeTypeMap(){return V1SelectableField.attributeTypeMap}}V1SelectableField.discriminator=void 0,V1SelectableField.attributeTypeMap=[{name:"jsonPath",baseName:"jsonPath",type:"string"}];class V1Service{static getAttributeTypeMap(){return V1Service.attributeTypeMap}}V1Service.discriminator=void 0,V1Service.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1ServiceSpec"},{name:"status",baseName:"status",type:"V1ServiceStatus"}];class V1ServiceAccount{static getAttributeTypeMap(){return V1ServiceAccount.attributeTypeMap}}V1ServiceAccount.discriminator=void 0,V1ServiceAccount.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"automountServiceAccountToken",baseName:"automountServiceAccountToken",type:"boolean"},{name:"imagePullSecrets",baseName:"imagePullSecrets",type:"Array<V1LocalObjectReference>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"secrets",baseName:"secrets",type:"Array<V1ObjectReference>"}];class V1ServiceAccountList{static getAttributeTypeMap(){return V1ServiceAccountList.attributeTypeMap}}V1ServiceAccountList.discriminator=void 0,V1ServiceAccountList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1ServiceAccount>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1ServiceAccountTokenProjection{static getAttributeTypeMap(){return V1ServiceAccountTokenProjection.attributeTypeMap}}V1ServiceAccountTokenProjection.discriminator=void 0,V1ServiceAccountTokenProjection.attributeTypeMap=[{name:"audience",baseName:"audience",type:"string"},{name:"expirationSeconds",baseName:"expirationSeconds",type:"number"},{name:"path",baseName:"path",type:"string"}];class V1ServiceBackendPort{static getAttributeTypeMap(){return V1ServiceBackendPort.attributeTypeMap}}V1ServiceBackendPort.discriminator=void 0,V1ServiceBackendPort.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"number",baseName:"number",type:"number"}];class V1ServiceList{static getAttributeTypeMap(){return V1ServiceList.attributeTypeMap}}V1ServiceList.discriminator=void 0,V1ServiceList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1Service>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1ServicePort{static getAttributeTypeMap(){return V1ServicePort.attributeTypeMap}}V1ServicePort.discriminator=void 0,V1ServicePort.attributeTypeMap=[{name:"appProtocol",baseName:"appProtocol",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"nodePort",baseName:"nodePort",type:"number"},{name:"port",baseName:"port",type:"number"},{name:"protocol",baseName:"protocol",type:"string"},{name:"targetPort",baseName:"targetPort",type:"IntOrString"}];class V1ServiceSpec{static getAttributeTypeMap(){return V1ServiceSpec.attributeTypeMap}}V1ServiceSpec.discriminator=void 0,V1ServiceSpec.attributeTypeMap=[{name:"allocateLoadBalancerNodePorts",baseName:"allocateLoadBalancerNodePorts",type:"boolean"},{name:"clusterIP",baseName:"clusterIP",type:"string"},{name:"clusterIPs",baseName:"clusterIPs",type:"Array<string>"},{name:"externalIPs",baseName:"externalIPs",type:"Array<string>"},{name:"externalName",baseName:"externalName",type:"string"},{name:"externalTrafficPolicy",baseName:"externalTrafficPolicy",type:"string"},{name:"healthCheckNodePort",baseName:"healthCheckNodePort",type:"number"},{name:"internalTrafficPolicy",baseName:"internalTrafficPolicy",type:"string"},{name:"ipFamilies",baseName:"ipFamilies",type:"Array<string>"},{name:"ipFamilyPolicy",baseName:"ipFamilyPolicy",type:"string"},{name:"loadBalancerClass",baseName:"loadBalancerClass",type:"string"},{name:"loadBalancerIP",baseName:"loadBalancerIP",type:"string"},{name:"loadBalancerSourceRanges",baseName:"loadBalancerSourceRanges",type:"Array<string>"},{name:"ports",baseName:"ports",type:"Array<V1ServicePort>"},{name:"publishNotReadyAddresses",baseName:"publishNotReadyAddresses",type:"boolean"},{name:"selector",baseName:"selector",type:"{ [key: string]: string; }"},{name:"sessionAffinity",baseName:"sessionAffinity",type:"string"},{name:"sessionAffinityConfig",baseName:"sessionAffinityConfig",type:"V1SessionAffinityConfig"},{name:"trafficDistribution",baseName:"trafficDistribution",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1ServiceStatus{static getAttributeTypeMap(){return V1ServiceStatus.attributeTypeMap}}V1ServiceStatus.discriminator=void 0,V1ServiceStatus.attributeTypeMap=[{name:"conditions",baseName:"conditions",type:"Array<V1Condition>"},{name:"loadBalancer",baseName:"loadBalancer",type:"V1LoadBalancerStatus"}];class V1SessionAffinityConfig{static getAttributeTypeMap(){return V1SessionAffinityConfig.attributeTypeMap}}V1SessionAffinityConfig.discriminator=void 0,V1SessionAffinityConfig.attributeTypeMap=[{name:"clientIP",baseName:"clientIP",type:"V1ClientIPConfig"}];class V1SleepAction{static getAttributeTypeMap(){return V1SleepAction.attributeTypeMap}}V1SleepAction.discriminator=void 0,V1SleepAction.attributeTypeMap=[{name:"seconds",baseName:"seconds",type:"number"}];class V1StatefulSet{static getAttributeTypeMap(){return V1StatefulSet.attributeTypeMap}}V1StatefulSet.discriminator=void 0,V1StatefulSet.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V1StatefulSetSpec"},{name:"status",baseName:"status",type:"V1StatefulSetStatus"}];class V1StatefulSetCondition{static getAttributeTypeMap(){return V1StatefulSetCondition.attributeTypeMap}}V1StatefulSetCondition.discriminator=void 0,V1StatefulSetCondition.attributeTypeMap=[{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V1StatefulSetList{static getAttributeTypeMap(){return V1StatefulSetList.attributeTypeMap}}V1StatefulSetList.discriminator=void 0,V1StatefulSetList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1StatefulSet>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1StatefulSetOrdinals{static getAttributeTypeMap(){return V1StatefulSetOrdinals.attributeTypeMap}}V1StatefulSetOrdinals.discriminator=void 0,V1StatefulSetOrdinals.attributeTypeMap=[{name:"start",baseName:"start",type:"number"}];class V1StatefulSetPersistentVolumeClaimRetentionPolicy{static getAttributeTypeMap(){return V1StatefulSetPersistentVolumeClaimRetentionPolicy.attributeTypeMap}}V1StatefulSetPersistentVolumeClaimRetentionPolicy.discriminator=void 0,V1StatefulSetPersistentVolumeClaimRetentionPolicy.attributeTypeMap=[{name:"whenDeleted",baseName:"whenDeleted",type:"string"},{name:"whenScaled",baseName:"whenScaled",type:"string"}];class V1StatefulSetSpec{static getAttributeTypeMap(){return V1StatefulSetSpec.attributeTypeMap}}V1StatefulSetSpec.discriminator=void 0,V1StatefulSetSpec.attributeTypeMap=[{name:"minReadySeconds",baseName:"minReadySeconds",type:"number"},{name:"ordinals",baseName:"ordinals",type:"V1StatefulSetOrdinals"},{name:"persistentVolumeClaimRetentionPolicy",baseName:"persistentVolumeClaimRetentionPolicy",type:"V1StatefulSetPersistentVolumeClaimRetentionPolicy"},{name:"podManagementPolicy",baseName:"podManagementPolicy",type:"string"},{name:"replicas",baseName:"replicas",type:"number"},{name:"revisionHistoryLimit",baseName:"revisionHistoryLimit",type:"number"},{name:"selector",baseName:"selector",type:"V1LabelSelector"},{name:"serviceName",baseName:"serviceName",type:"string"},{name:"template",baseName:"template",type:"V1PodTemplateSpec"},{name:"updateStrategy",baseName:"updateStrategy",type:"V1StatefulSetUpdateStrategy"},{name:"volumeClaimTemplates",baseName:"volumeClaimTemplates",type:"Array<V1PersistentVolumeClaim>"}];class V1StatefulSetStatus{static getAttributeTypeMap(){return V1StatefulSetStatus.attributeTypeMap}}V1StatefulSetStatus.discriminator=void 0,V1StatefulSetStatus.attributeTypeMap=[{name:"availableReplicas",baseName:"availableReplicas",type:"number"},{name:"collisionCount",baseName:"collisionCount",type:"number"},{name:"conditions",baseName:"conditions",type:"Array<V1StatefulSetCondition>"},{name:"currentReplicas",baseName:"currentReplicas",type:"number"},{name:"currentRevision",baseName:"currentRevision",type:"string"},{name:"observedGeneration",baseName:"observedGeneration",type:"number"},{name:"readyReplicas",baseName:"readyReplicas",type:"number"},{name:"replicas",baseName:"replicas",type:"number"},{name:"updateRevision",baseName:"updateRevision",type:"string"},{name:"updatedReplicas",baseName:"updatedReplicas",type:"number"}];class V1StatefulSetUpdateStrategy{static getAttributeTypeMap(){return V1StatefulSetUpdateStrategy.attributeTypeMap}}V1StatefulSetUpdateStrategy.discriminator=void 0,V1StatefulSetUpdateStrategy.attributeTypeMap=[{name:"rollingUpdate",baseName:"rollingUpdate",type:"V1RollingUpdateStatefulSetStrategy"},{name:"type",baseName:"type",type:"string"}];class V1Status{static getAttributeTypeMap(){return V1Status.attributeTypeMap}}V1Status.discriminator=void 0,V1Status.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"code",baseName:"code",type:"number"},{name:"details",baseName:"details",type:"V1StatusDetails"},{name:"kind",baseName:"kind",type:"string"},{name:"message",baseName:"message",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"}];class V1StatusCause{static getAttributeTypeMap(){return V1StatusCause.attributeTypeMap}}V1StatusCause.discriminator=void 0,V1StatusCause.attributeTypeMap=[{name:"field",baseName:"field",type:"string"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"}];class V1StatusDetails{static getAttributeTypeMap(){return V1StatusDetails.attributeTypeMap}}V1StatusDetails.discriminator=void 0,V1StatusDetails.attributeTypeMap=[{name:"causes",baseName:"causes",type:"Array<V1StatusCause>"},{name:"group",baseName:"group",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"retryAfterSeconds",baseName:"retryAfterSeconds",type:"number"},{name:"uid",baseName:"uid",type:"string"}];class V1StorageClass{static getAttributeTypeMap(){return V1StorageClass.attributeTypeMap}}V1StorageClass.discriminator=void 0,V1StorageClass.attributeTypeMap=[{name:"allowVolumeExpansion",baseName:"allowVolumeExpansion",type:"boolean"},{name:"allowedTopologies",baseName:"allowedTopologies",type:"Array<V1TopologySelectorTerm>"},{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"mountOptions",baseName:"mountOptions",type:"Array<string>"},{name:"parameters",baseName:"parameters",type:"{ [key: string]: string; }"},{name:"provisioner",baseName:"provisioner",type:"string"},{name:"reclaimPolicy",baseName:"reclaimPolicy",type:"string"},{name:"volumeBindingMode",baseName:"volumeBindingMode",type:"string"}];class V1StorageClassList{static getAttributeTypeMap(){return V1StorageClassList.attributeTypeMap}}V1StorageClassList.discriminator=void 0,V1StorageClassList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1StorageClass>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1StorageOSPersistentVolumeSource{static getAttributeTypeMap(){return V1StorageOSPersistentVolumeSource.attributeTypeMap}}V1StorageOSPersistentVolumeSource.discriminator=void 0,V1StorageOSPersistentVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1ObjectReference"},{name:"volumeName",baseName:"volumeName",type:"string"},{name:"volumeNamespace",baseName:"volumeNamespace",type:"string"}];class V1StorageOSVolumeSource{static getAttributeTypeMap(){return V1StorageOSVolumeSource.attributeTypeMap}}V1StorageOSVolumeSource.discriminator=void 0,V1StorageOSVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"secretRef",baseName:"secretRef",type:"V1LocalObjectReference"},{name:"volumeName",baseName:"volumeName",type:"string"},{name:"volumeNamespace",baseName:"volumeNamespace",type:"string"}];class V1SuccessPolicy{static getAttributeTypeMap(){return V1SuccessPolicy.attributeTypeMap}}V1SuccessPolicy.discriminator=void 0,V1SuccessPolicy.attributeTypeMap=[{name:"rules",baseName:"rules",type:"Array<V1SuccessPolicyRule>"}];class V1SuccessPolicyRule{static getAttributeTypeMap(){return V1SuccessPolicyRule.attributeTypeMap}}V1SuccessPolicyRule.discriminator=void 0,V1SuccessPolicyRule.attributeTypeMap=[{name:"succeededCount",baseName:"succeededCount",type:"number"},{name:"succeededIndexes",baseName:"succeededIndexes",type:"string"}];class V1Sysctl{static getAttributeTypeMap(){return V1Sysctl.attributeTypeMap}}V1Sysctl.discriminator=void 0,V1Sysctl.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"value",baseName:"value",type:"string"}];class V1TCPSocketAction{static getAttributeTypeMap(){return V1TCPSocketAction.attributeTypeMap}}V1TCPSocketAction.discriminator=void 0,V1TCPSocketAction.attributeTypeMap=[{name:"host",baseName:"host",type:"string"},{name:"port",baseName:"port",type:"IntOrString"}];class V1Taint{static getAttributeTypeMap(){return V1Taint.attributeTypeMap}}V1Taint.discriminator=void 0,V1Taint.attributeTypeMap=[{name:"effect",baseName:"effect",type:"string"},{name:"key",baseName:"key",type:"string"},{name:"timeAdded",baseName:"timeAdded",type:"Date"},{name:"value",baseName:"value",type:"string"}];class V1Toleration{static getAttributeTypeMap(){return V1Toleration.attributeTypeMap}}V1Toleration.discriminator=void 0,V1Toleration.attributeTypeMap=[{name:"effect",baseName:"effect",type:"string"},{name:"key",baseName:"key",type:"string"},{name:"operator",baseName:"operator",type:"string"},{name:"tolerationSeconds",baseName:"tolerationSeconds",type:"number"},{name:"value",baseName:"value",type:"string"}];class V1TopologySelectorLabelRequirement{static getAttributeTypeMap(){return V1TopologySelectorLabelRequirement.attributeTypeMap}}V1TopologySelectorLabelRequirement.discriminator=void 0,V1TopologySelectorLabelRequirement.attributeTypeMap=[{name:"key",baseName:"key",type:"string"},{name:"values",baseName:"values",type:"Array<string>"}];class V1TopologySelectorTerm{static getAttributeTypeMap(){return V1TopologySelectorTerm.attributeTypeMap}}V1TopologySelectorTerm.discriminator=void 0,V1TopologySelectorTerm.attributeTypeMap=[{name:"matchLabelExpressions",baseName:"matchLabelExpressions",type:"Array<V1TopologySelectorLabelRequirement>"}];class V1TopologySpreadConstraint{static getAttributeTypeMap(){return V1TopologySpreadConstraint.attributeTypeMap}}V1TopologySpreadConstraint.discriminator=void 0,V1TopologySpreadConstraint.attributeTypeMap=[{name:"labelSelector",baseName:"labelSelector",type:"V1LabelSelector"},{name:"matchLabelKeys",baseName:"matchLabelKeys",type:"Array<string>"},{name:"maxSkew",baseName:"maxSkew",type:"number"},{name:"minDomains",baseName:"minDomains",type:"number"},{name:"nodeAffinityPolicy",baseName:"nodeAffinityPolicy",type:"string"},{name:"nodeTaintsPolicy",baseName:"nodeTaintsPolicy",type:"string"},{name:"topologyKey",baseName:"topologyKey",type:"string"},{name:"whenUnsatisfiable",baseName:"whenUnsatisfiable",type:"string"}];class V1TypedLocalObjectReference{static getAttributeTypeMap(){return V1TypedLocalObjectReference.attributeTypeMap}}V1TypedLocalObjectReference.discriminator=void 0,V1TypedLocalObjectReference.attributeTypeMap=[{name:"apiGroup",baseName:"apiGroup",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"}];class V1TypedObjectReference{static getAttributeTypeMap(){return V1TypedObjectReference.attributeTypeMap}}V1TypedObjectReference.discriminator=void 0,V1TypedObjectReference.attributeTypeMap=[{name:"apiGroup",baseName:"apiGroup",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"namespace",baseName:"namespace",type:"string"}];class V1UncountedTerminatedPods{static getAttributeTypeMap(){return V1UncountedTerminatedPods.attributeTypeMap}}V1UncountedTerminatedPods.discriminator=void 0,V1UncountedTerminatedPods.attributeTypeMap=[{name:"failed",baseName:"failed",type:"Array<string>"},{name:"succeeded",baseName:"succeeded",type:"Array<string>"}];class V1ValidatingWebhook{static getAttributeTypeMap(){return V1ValidatingWebhook.attributeTypeMap}}V1ValidatingWebhook.discriminator=void 0,V1ValidatingWebhook.attributeTypeMap=[{name:"admissionReviewVersions",baseName:"admissionReviewVersions",type:"Array<string>"},{name:"clientConfig",baseName:"clientConfig",type:"AdmissionregistrationV1WebhookClientConfig"},{name:"failurePolicy",baseName:"failurePolicy",type:"string"},{name:"matchConditions",baseName:"matchConditions",type:"Array<V1MatchCondition>"},{name:"matchPolicy",baseName:"matchPolicy",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"namespaceSelector",baseName:"namespaceSelector",type:"V1LabelSelector"},{name:"objectSelector",baseName:"objectSelector",type:"V1LabelSelector"},{name:"rules",baseName:"rules",type:"Array<V1RuleWithOperations>"},{name:"sideEffects",baseName:"sideEffects",type:"string"},{name:"timeoutSeconds",baseName:"timeoutSeconds",type:"number"}];class V1ValidatingWebhookConfiguration{static getAttributeTypeMap(){return V1ValidatingWebhookConfiguration.attributeTypeMap}}V1ValidatingWebhookConfiguration.discriminator=void 0,V1ValidatingWebhookConfiguration.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"webhooks",baseName:"webhooks",type:"Array<V1ValidatingWebhook>"}];class V1ValidatingWebhookConfigurationList{static getAttributeTypeMap(){return V1ValidatingWebhookConfigurationList.attributeTypeMap}}V1ValidatingWebhookConfigurationList.discriminator=void 0,V1ValidatingWebhookConfigurationList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V1ValidatingWebhookConfiguration>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V1ValidationRule{static getAttributeTypeMap(){return V1ValidationRule.attributeTypeMap}}V1ValidationRule.discriminator=void 0,V1ValidationRule.attributeTypeMap=[{name:"fieldPath",baseName:"fieldPath",type:"string"},{name:"message",baseName:"message",type:"string"},{name:"messageExpression",baseName:"messageExpression",type:"string"},{name:"optionalOldSelf",baseName:"optionalOldSelf",type:"boolean"},{name:"reason",baseName:"reason",type:"string"},{name:"rule",baseName:"rule",type:"string"}];class V1Volume{static getAttributeTypeMap(){return V1Volume.attributeTypeMap}}V1Volume.discriminator=void 0,V1Volume.attributeTypeMap=[{name:"awsElasticBlockStore",baseName:"awsElasticBlockStore",type:"V1AWSElasticBlockStoreVolumeSource"},{name:"azureDisk",baseName:"azureDisk",type:"V1AzureDiskVolumeSource"},{name:"azureFile",baseName:"azureFile",type:"V1AzureFileVolumeSource"},{name:"cephfs",baseName:"cephfs",type:"V1CephFSVolumeSource"},{name:"cinder",baseName:"cinder",type:"V1CinderVolumeSource"},{name:"configMap",baseName:"configMap",type:"V1ConfigMapVolumeSource"},{name:"csi",baseName:"csi",type:"V1CSIVolumeSource"},{name:"downwardAPI",baseName:"downwardAPI",type:"V1DownwardAPIVolumeSource"},{name:"emptyDir",baseName:"emptyDir",type:"V1EmptyDirVolumeSource"},{name:"ephemeral",baseName:"ephemeral",type:"V1EphemeralVolumeSource"},{name:"fc",baseName:"fc",type:"V1FCVolumeSource"},{name:"flexVolume",baseName:"flexVolume",type:"V1FlexVolumeSource"},{name:"flocker",baseName:"flocker",type:"V1FlockerVolumeSource"},{name:"gcePersistentDisk",baseName:"gcePersistentDisk",type:"V1GCEPersistentDiskVolumeSource"},{name:"gitRepo",baseName:"gitRepo",type:"V1GitRepoVolumeSource"},{name:"glusterfs",baseName:"glusterfs",type:"V1GlusterfsVolumeSource"},{name:"hostPath",baseName:"hostPath",type:"V1HostPathVolumeSource"},{name:"iscsi",baseName:"iscsi",type:"V1ISCSIVolumeSource"},{name:"name",baseName:"name",type:"string"},{name:"nfs",baseName:"nfs",type:"V1NFSVolumeSource"},{name:"persistentVolumeClaim",baseName:"persistentVolumeClaim",type:"V1PersistentVolumeClaimVolumeSource"},{name:"photonPersistentDisk",baseName:"photonPersistentDisk",type:"V1PhotonPersistentDiskVolumeSource"},{name:"portworxVolume",baseName:"portworxVolume",type:"V1PortworxVolumeSource"},{name:"projected",baseName:"projected",type:"V1ProjectedVolumeSource"},{name:"quobyte",baseName:"quobyte",type:"V1QuobyteVolumeSource"},{name:"rbd",baseName:"rbd",type:"V1RBDVolumeSource"},{name:"scaleIO",baseName:"scaleIO",type:"V1ScaleIOVolumeSource"},{name:"secret",baseName:"secret",type:"V1SecretVolumeSource"},{name:"storageos",baseName:"storageos",type:"V1StorageOSVolumeSource"},{name:"vsphereVolume",baseName:"vsphereVolume",type:"V1VsphereVirtualDiskVolumeSource"}];class V1VolumeDevice{static getAttributeTypeMap(){return V1VolumeDevice.attributeTypeMap}}V1VolumeDevice.discriminator=void 0,V1VolumeDevice.attributeTypeMap=[{name:"devicePath",baseName:"devicePath",type:"string"},{name:"name",baseName:"name",type:"string"}];class V1VolumeMount{static getAttributeTypeMap(){return V1VolumeMount.attributeTypeMap}}V1VolumeMount.discriminator=void 0,V1VolumeMount.attributeTypeMap=[{name:"mountPath",baseName:"mountPath",type:"string"},{name:"mountPropagation",baseName:"mountPropagation",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"recursiveReadOnly",baseName:"recursiveReadOnly",type:"string"},{name:"subPath",baseName:"subPath",type:"string"},{name:"subPathExpr",baseName:"subPathExpr",type:"string"}];class V1VolumeMountStatus{static getAttributeTypeMap(){return V1VolumeMountStatus.attributeTypeMap}}V1VolumeMountStatus.discriminator=void 0,V1VolumeMountStatus.attributeTypeMap=[{name:"mountPath",baseName:"mountPath",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"readOnly",baseName:"readOnly",type:"boolean"},{name:"recursiveReadOnly",baseName:"recursiveReadOnly",type:"string"}];class V1VolumeNodeAffinity{static getAttributeTypeMap(){return V1VolumeNodeAffinity.attributeTypeMap}}V1VolumeNodeAffinity.discriminator=void 0,V1VolumeNodeAffinity.attributeTypeMap=[{name:"required",baseName:"required",type:"V1NodeSelector"}];class V1VolumeNodeResources{static getAttributeTypeMap(){return V1VolumeNodeResources.attributeTypeMap}}V1VolumeNodeResources.discriminator=void 0,V1VolumeNodeResources.attributeTypeMap=[{name:"count",baseName:"count",type:"number"}];class V1VolumeProjection{static getAttributeTypeMap(){return V1VolumeProjection.attributeTypeMap}}V1VolumeProjection.discriminator=void 0,V1VolumeProjection.attributeTypeMap=[{name:"clusterTrustBundle",baseName:"clusterTrustBundle",type:"V1ClusterTrustBundleProjection"},{name:"configMap",baseName:"configMap",type:"V1ConfigMapProjection"},{name:"downwardAPI",baseName:"downwardAPI",type:"V1DownwardAPIProjection"},{name:"secret",baseName:"secret",type:"V1SecretProjection"},{name:"serviceAccountToken",baseName:"serviceAccountToken",type:"V1ServiceAccountTokenProjection"}];class V1VolumeResourceRequirements{static getAttributeTypeMap(){return V1VolumeResourceRequirements.attributeTypeMap}}V1VolumeResourceRequirements.discriminator=void 0,V1VolumeResourceRequirements.attributeTypeMap=[{name:"limits",baseName:"limits",type:"{ [key: string]: string; }"},{name:"requests",baseName:"requests",type:"{ [key: string]: string; }"}];class V1VsphereVirtualDiskVolumeSource{static getAttributeTypeMap(){return V1VsphereVirtualDiskVolumeSource.attributeTypeMap}}V1VsphereVirtualDiskVolumeSource.discriminator=void 0,V1VsphereVirtualDiskVolumeSource.attributeTypeMap=[{name:"fsType",baseName:"fsType",type:"string"},{name:"storagePolicyID",baseName:"storagePolicyID",type:"string"},{name:"storagePolicyName",baseName:"storagePolicyName",type:"string"},{name:"volumePath",baseName:"volumePath",type:"string"}];class V1WebhookConversion{static getAttributeTypeMap(){return V1WebhookConversion.attributeTypeMap}}V1WebhookConversion.discriminator=void 0,V1WebhookConversion.attributeTypeMap=[{name:"clientConfig",baseName:"clientConfig",type:"ApiextensionsV1WebhookClientConfig"},{name:"conversionReviewVersions",baseName:"conversionReviewVersions",type:"Array<string>"}];class V1WeightedPodAffinityTerm{static getAttributeTypeMap(){return V1WeightedPodAffinityTerm.attributeTypeMap}}V1WeightedPodAffinityTerm.discriminator=void 0,V1WeightedPodAffinityTerm.attributeTypeMap=[{name:"podAffinityTerm",baseName:"podAffinityTerm",type:"V1PodAffinityTerm"},{name:"weight",baseName:"weight",type:"number"}];class V1WindowsSecurityContextOptions{static getAttributeTypeMap(){return V1WindowsSecurityContextOptions.attributeTypeMap}}V1WindowsSecurityContextOptions.discriminator=void 0,V1WindowsSecurityContextOptions.attributeTypeMap=[{name:"gmsaCredentialSpec",baseName:"gmsaCredentialSpec",type:"string"},{name:"gmsaCredentialSpecName",baseName:"gmsaCredentialSpecName",type:"string"},{name:"hostProcess",baseName:"hostProcess",type:"boolean"},{name:"runAsUserName",baseName:"runAsUserName",type:"string"}];class V2ContainerResourceMetricSource{static getAttributeTypeMap(){return V2ContainerResourceMetricSource.attributeTypeMap}}V2ContainerResourceMetricSource.discriminator=void 0,V2ContainerResourceMetricSource.attributeTypeMap=[{name:"container",baseName:"container",type:"string"},{name:"name",baseName:"name",type:"string"},{name:"target",baseName:"target",type:"V2MetricTarget"}];class V2ContainerResourceMetricStatus{static getAttributeTypeMap(){return V2ContainerResourceMetricStatus.attributeTypeMap}}V2ContainerResourceMetricStatus.discriminator=void 0,V2ContainerResourceMetricStatus.attributeTypeMap=[{name:"container",baseName:"container",type:"string"},{name:"current",baseName:"current",type:"V2MetricValueStatus"},{name:"name",baseName:"name",type:"string"}];class V2CrossVersionObjectReference{static getAttributeTypeMap(){return V2CrossVersionObjectReference.attributeTypeMap}}V2CrossVersionObjectReference.discriminator=void 0,V2CrossVersionObjectReference.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"name",baseName:"name",type:"string"}];class V2ExternalMetricSource{static getAttributeTypeMap(){return V2ExternalMetricSource.attributeTypeMap}}V2ExternalMetricSource.discriminator=void 0,V2ExternalMetricSource.attributeTypeMap=[{name:"metric",baseName:"metric",type:"V2MetricIdentifier"},{name:"target",baseName:"target",type:"V2MetricTarget"}];class V2ExternalMetricStatus{static getAttributeTypeMap(){return V2ExternalMetricStatus.attributeTypeMap}}V2ExternalMetricStatus.discriminator=void 0,V2ExternalMetricStatus.attributeTypeMap=[{name:"current",baseName:"current",type:"V2MetricValueStatus"},{name:"metric",baseName:"metric",type:"V2MetricIdentifier"}];class V2HPAScalingPolicy{static getAttributeTypeMap(){return V2HPAScalingPolicy.attributeTypeMap}}V2HPAScalingPolicy.discriminator=void 0,V2HPAScalingPolicy.attributeTypeMap=[{name:"periodSeconds",baseName:"periodSeconds",type:"number"},{name:"type",baseName:"type",type:"string"},{name:"value",baseName:"value",type:"number"}];class V2HPAScalingRules{static getAttributeTypeMap(){return V2HPAScalingRules.attributeTypeMap}}V2HPAScalingRules.discriminator=void 0,V2HPAScalingRules.attributeTypeMap=[{name:"policies",baseName:"policies",type:"Array<V2HPAScalingPolicy>"},{name:"selectPolicy",baseName:"selectPolicy",type:"string"},{name:"stabilizationWindowSeconds",baseName:"stabilizationWindowSeconds",type:"number"}];class V2HorizontalPodAutoscaler{static getAttributeTypeMap(){return V2HorizontalPodAutoscaler.attributeTypeMap}}V2HorizontalPodAutoscaler.discriminator=void 0,V2HorizontalPodAutoscaler.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ObjectMeta"},{name:"spec",baseName:"spec",type:"V2HorizontalPodAutoscalerSpec"},{name:"status",baseName:"status",type:"V2HorizontalPodAutoscalerStatus"}];class V2HorizontalPodAutoscalerBehavior{static getAttributeTypeMap(){return V2HorizontalPodAutoscalerBehavior.attributeTypeMap}}V2HorizontalPodAutoscalerBehavior.discriminator=void 0,V2HorizontalPodAutoscalerBehavior.attributeTypeMap=[{name:"scaleDown",baseName:"scaleDown",type:"V2HPAScalingRules"},{name:"scaleUp",baseName:"scaleUp",type:"V2HPAScalingRules"}];class V2HorizontalPodAutoscalerCondition{static getAttributeTypeMap(){return V2HorizontalPodAutoscalerCondition.attributeTypeMap}}V2HorizontalPodAutoscalerCondition.discriminator=void 0,V2HorizontalPodAutoscalerCondition.attributeTypeMap=[{name:"lastTransitionTime",baseName:"lastTransitionTime",type:"Date"},{name:"message",baseName:"message",type:"string"},{name:"reason",baseName:"reason",type:"string"},{name:"status",baseName:"status",type:"string"},{name:"type",baseName:"type",type:"string"}];class V2HorizontalPodAutoscalerList{static getAttributeTypeMap(){return V2HorizontalPodAutoscalerList.attributeTypeMap}}V2HorizontalPodAutoscalerList.discriminator=void 0,V2HorizontalPodAutoscalerList.attributeTypeMap=[{name:"apiVersion",baseName:"apiVersion",type:"string"},{name:"items",baseName:"items",type:"Array<V2HorizontalPodAutoscaler>"},{name:"kind",baseName:"kind",type:"string"},{name:"metadata",baseName:"metadata",type:"V1ListMeta"}];class V2HorizontalPodAutoscalerSpec{static getAttributeTypeMap(){return V2HorizontalPodAutoscalerSpec.attributeTypeMap}}V2HorizontalPodAutoscalerSpec.discriminator=void 0,V2HorizontalPodAutoscalerSpec.attributeTypeMap=[{name:"behavior",baseName:"behavior",type:"V2HorizontalPodAutoscalerBehavior"},{name:"maxReplicas",baseName:"maxReplicas",type:"number"},{name:"metrics",baseName:"metrics",type:"Array<V2MetricSpec>"},{name:"minReplicas",baseName:"minReplicas",type:"number"},{name:"scaleTargetRef",baseName:"scaleTargetRef",type:"V2CrossVersionObjectReference"}];class V2HorizontalPodAutoscalerStatus{static getAttributeTypeMap(){return V2HorizontalPodAutoscalerStatus.attributeTypeMap}}V2HorizontalPodAutoscalerStatus.discriminator=void 0,V2HorizontalPodAutoscalerStatus.attributeTypeMap=[{name:"conditions",baseName:"conditions",type:"Array<V2HorizontalPodAutoscalerCondition>"},{name:"currentMetrics",baseName:"currentMetrics",type:"Array<V2MetricStatus>"},{name:"currentReplicas",baseName:"currentReplicas",type:"number"},{name:"desiredReplicas",baseName:"desiredReplicas",type:"number"},{name:"lastScaleTime",baseName:"lastScaleTime",type:"Date"},{name:"observedGeneration",baseName:"observedGeneration",type:"number"}];class V2MetricIdentifier{static getAttributeTypeMap(){return V2MetricIdentifier.attributeTypeMap}}V2MetricIdentifier.discriminator=void 0,V2MetricIdentifier.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"selector",baseName:"selector",type:"V1LabelSelector"}];class V2MetricSpec{static getAttributeTypeMap(){return V2MetricSpec.attributeTypeMap}}V2MetricSpec.discriminator=void 0,V2MetricSpec.attributeTypeMap=[{name:"containerResource",baseName:"containerResource",type:"V2ContainerResourceMetricSource"},{name:"external",baseName:"external",type:"V2ExternalMetricSource"},{name:"object",baseName:"object",type:"V2ObjectMetricSource"},{name:"pods",baseName:"pods",type:"V2PodsMetricSource"},{name:"resource",baseName:"resource",type:"V2ResourceMetricSource"},{name:"type",baseName:"type",type:"string"}];class V2MetricStatus{static getAttributeTypeMap(){return V2MetricStatus.attributeTypeMap}}V2MetricStatus.discriminator=void 0,V2MetricStatus.attributeTypeMap=[{name:"containerResource",baseName:"containerResource",type:"V2ContainerResourceMetricStatus"},{name:"external",baseName:"external",type:"V2ExternalMetricStatus"},{name:"object",baseName:"object",type:"V2ObjectMetricStatus"},{name:"pods",baseName:"pods",type:"V2PodsMetricStatus"},{name:"resource",baseName:"resource",type:"V2ResourceMetricStatus"},{name:"type",baseName:"type",type:"string"}];class V2MetricTarget{static getAttributeTypeMap(){return V2MetricTarget.attributeTypeMap}}V2MetricTarget.discriminator=void 0,V2MetricTarget.attributeTypeMap=[{name:"averageUtilization",baseName:"averageUtilization",type:"number"},{name:"averageValue",baseName:"averageValue",type:"string"},{name:"type",baseName:"type",type:"string"},{name:"value",baseName:"value",type:"string"}];class V2MetricValueStatus{static getAttributeTypeMap(){return V2MetricValueStatus.attributeTypeMap}}V2MetricValueStatus.discriminator=void 0,V2MetricValueStatus.attributeTypeMap=[{name:"averageUtilization",baseName:"averageUtilization",type:"number"},{name:"averageValue",baseName:"averageValue",type:"string"},{name:"value",baseName:"value",type:"string"}];class V2ObjectMetricSource{static getAttributeTypeMap(){return V2ObjectMetricSource.attributeTypeMap}}V2ObjectMetricSource.discriminator=void 0,V2ObjectMetricSource.attributeTypeMap=[{name:"describedObject",baseName:"describedObject",type:"V2CrossVersionObjectReference"},{name:"metric",baseName:"metric",type:"V2MetricIdentifier"},{name:"target",baseName:"target",type:"V2MetricTarget"}];class V2ObjectMetricStatus{static getAttributeTypeMap(){return V2ObjectMetricStatus.attributeTypeMap}}V2ObjectMetricStatus.discriminator=void 0,V2ObjectMetricStatus.attributeTypeMap=[{name:"current",baseName:"current",type:"V2MetricValueStatus"},{name:"describedObject",baseName:"describedObject",type:"V2CrossVersionObjectReference"},{name:"metric",baseName:"metric",type:"V2MetricIdentifier"}];class V2PodsMetricSource{static getAttributeTypeMap(){return V2PodsMetricSource.attributeTypeMap}}V2PodsMetricSource.discriminator=void 0,V2PodsMetricSource.attributeTypeMap=[{name:"metric",baseName:"metric",type:"V2MetricIdentifier"},{name:"target",baseName:"target",type:"V2MetricTarget"}];class V2PodsMetricStatus{static getAttributeTypeMap(){return V2PodsMetricStatus.attributeTypeMap}}V2PodsMetricStatus.discriminator=void 0,V2PodsMetricStatus.attributeTypeMap=[{name:"current",baseName:"current",type:"V2MetricValueStatus"},{name:"metric",baseName:"metric",type:"V2MetricIdentifier"}];class V2ResourceMetricSource{static getAttributeTypeMap(){return V2ResourceMetricSource.attributeTypeMap}}V2ResourceMetricSource.discriminator=void 0,V2ResourceMetricSource.attributeTypeMap=[{name:"name",baseName:"name",type:"string"},{name:"target",baseName:"target",type:"V2MetricTarget"}];class V2ResourceMetricStatus{static getAttributeTypeMap(){return V2ResourceMetricStatus.attributeTypeMap}}V2ResourceMetricStatus.discriminator=void 0,V2ResourceMetricStatus.attributeTypeMap=[{name:"current",baseName:"current",type:"V2MetricValueStatus"},{name:"name",baseName:"name",type:"string"}];class PatchUtils{}PatchUtils.PATCH_FORMAT_JSON_PATCH="application/json-patch+json",PatchUtils.PATCH_FORMAT_JSON_MERGE_PATCH="application/merge-patch+json",PatchUtils.PATCH_FORMAT_STRATEGIC_MERGE_PATCH="application/strategic-merge-patch+json",PatchUtils.PATCH_FORMAT_APPLY_YAML="application/apply-patch+yaml"},"./node_modules/swr/dist/_internal/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BE:()=>SWRConfig,Es:()=>useIsomorphicLayoutEffect,Ht:()=>withMiddleware,Tk:()=>mutate,Tn:()=>isFunction,X3:()=>IS_SERVER,ZH:()=>UNDEFINED,aw:()=>subscribeCallback,b0:()=>isUndefined,bZ:()=>SWRGlobalState,bu:()=>events,dO:()=>IS_REACT_LEGACY,iX:()=>useSWRConfig,lK:()=>serialize,lg:()=>getTimestamp,mF:()=>internalMutate,mf:()=>rAF,qm:()=>withArgs,qv:()=>OBJECT,r9:()=>createCacheHelper,rL:()=>mergeObjects,sb:()=>defaultConfig});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const noop=()=>{},UNDEFINED=noop(),OBJECT=Object,isUndefined=v=>v===UNDEFINED,isFunction=v=>"function"==typeof v,mergeObjects=(a,b)=>({...a,...b}),isPromiseLike=x=>isFunction(x.then),table=new WeakMap;let counter=0;const stableHash=arg=>{const type=typeof arg,constructor=arg&&arg.constructor,isDate=constructor==Date;let result,index;if(OBJECT(arg)!==arg||isDate||constructor==RegExp)result=isDate?arg.toJSON():"symbol"==type?arg.toString():"string"==type?JSON.stringify(arg):""+arg;else{if(result=table.get(arg),result)return result;if(result=++counter+"~",table.set(arg,result),constructor==Array){for(result="@",index=0;index<arg.length;index++)result+=stableHash(arg[index])+",";table.set(arg,result)}if(constructor==OBJECT){result="#";const keys=OBJECT.keys(arg).sort();for(;!isUndefined(index=keys.pop());)isUndefined(arg[index])||(result+=index+":"+stableHash(arg[index])+",");table.set(arg,result)}}return result},SWRGlobalState=new WeakMap,EMPTY_CACHE={},INITIAL_CACHE={},isWindowDefined="undefined"!=typeof window,isDocumentDefined="undefined"!=typeof document,createCacheHelper=(cache,key)=>{const state=SWRGlobalState.get(cache);return[()=>!isUndefined(key)&&cache.get(key)||EMPTY_CACHE,info=>{if(!isUndefined(key)){const prev=cache.get(key);key in INITIAL_CACHE||(INITIAL_CACHE[key]=prev),state[5](key,mergeObjects(prev,info),prev||EMPTY_CACHE)}},state[6],()=>!isUndefined(key)&&key in INITIAL_CACHE?INITIAL_CACHE[key]:!isUndefined(key)&&cache.get(key)||EMPTY_CACHE]};let online=!0;const[onWindowEvent,offWindowEvent]=isWindowDefined&&window.addEventListener?[window.addEventListener.bind(window),window.removeEventListener.bind(window)]:[noop,noop],preset={isOnline:()=>online,isVisible:()=>{const visibilityState=isDocumentDefined&&document.visibilityState;return isUndefined(visibilityState)||"hidden"!==visibilityState}},defaultConfigOptions={initFocus:callback=>(isDocumentDefined&&document.addEventListener("visibilitychange",callback),onWindowEvent("focus",callback),()=>{isDocumentDefined&&document.removeEventListener("visibilitychange",callback),offWindowEvent("focus",callback)}),initReconnect:callback=>{const onOnline=()=>{online=!0,callback()},onOffline=()=>{online=!1};return onWindowEvent("online",onOnline),onWindowEvent("offline",onOffline),()=>{offWindowEvent("online",onOnline),offWindowEvent("offline",onOffline)}}},IS_REACT_LEGACY=!react__WEBPACK_IMPORTED_MODULE_0__.useId,IS_SERVER=!isWindowDefined||"Deno"in window,rAF=f=>isWindowDefined&&void 0!==window.requestAnimationFrame?window.requestAnimationFrame(f):setTimeout(f,1),useIsomorphicLayoutEffect=IS_SERVER?react__WEBPACK_IMPORTED_MODULE_0__.useEffect:react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect,navigatorConnection="undefined"!=typeof navigator&&navigator.connection,slowConnection=!IS_SERVER&&navigatorConnection&&(["slow-2g","2g"].includes(navigatorConnection.effectiveType)||navigatorConnection.saveData),serialize=key=>{if(isFunction(key))try{key=key()}catch(err){key=""}const args=key;return[key="string"==typeof key?key:(Array.isArray(key)?key.length:key)?stableHash(key):"",args]};let __timestamp=0;const getTimestamp=()=>++__timestamp,MUTATE_EVENT=2;var events={__proto__:null,ERROR_REVALIDATE_EVENT:3,FOCUS_EVENT:0,MUTATE_EVENT,RECONNECT_EVENT:1};async function internalMutate(...args){const[cache,_key,_data,_opts]=args,options=mergeObjects({populateCache:!0,throwOnError:!0},"boolean"==typeof _opts?{revalidate:_opts}:_opts||{});let populateCache=options.populateCache;const rollbackOnErrorOption=options.rollbackOnError;let optimisticData=options.optimisticData;const throwOnError=options.throwOnError;if(isFunction(_key)){const keyFilter=_key,matchedKeys=[],it=cache.keys();for(const key of it)!/^\$(inf|sub)\$/.test(key)&&keyFilter(cache.get(key)._k)&&matchedKeys.push(key);return Promise.all(matchedKeys.map(mutateByKey))}return mutateByKey(_key);async function mutateByKey(_k){const[key]=serialize(_k);if(!key)return;const[get,set]=createCacheHelper(cache,key),[EVENT_REVALIDATORS,MUTATION,FETCH,PRELOAD]=SWRGlobalState.get(cache),startRevalidate=()=>{const revalidators=EVENT_REVALIDATORS[key];return(isFunction(options.revalidate)?options.revalidate(get().data,_k):!1!==options.revalidate)&&(delete FETCH[key],delete PRELOAD[key],revalidators&&revalidators[0])?revalidators[0](MUTATE_EVENT).then((()=>get().data)):get().data};if(args.length<3)return startRevalidate();let error,data=_data;const beforeMutationTs=getTimestamp();MUTATION[key]=[beforeMutationTs,0];const hasOptimisticData=!isUndefined(optimisticData),state=get(),displayedData=state.data,currentData=state._c,committedData=isUndefined(currentData)?displayedData:currentData;if(hasOptimisticData&&(optimisticData=isFunction(optimisticData)?optimisticData(committedData,displayedData):optimisticData,set({data:optimisticData,_c:committedData})),isFunction(data))try{data=data(committedData)}catch(err){error=err}if(data&&isPromiseLike(data)){if(data=await data.catch((err=>{error=err})),beforeMutationTs!==MUTATION[key][0]){if(error)throw error;return data}error&&hasOptimisticData&&(error=>"function"==typeof rollbackOnErrorOption?rollbackOnErrorOption(error):!1!==rollbackOnErrorOption)(error)&&(populateCache=!0,set({data:committedData,_c:UNDEFINED}))}if(populateCache&&!error)if(isFunction(populateCache)){const populateCachedData=populateCache(data,committedData);set({data:populateCachedData,error:UNDEFINED,_c:UNDEFINED})}else set({data,error:UNDEFINED,_c:UNDEFINED});if(MUTATION[key][1]=getTimestamp(),Promise.resolve(startRevalidate()).then((()=>{set({_c:UNDEFINED})})),!error)return data;if(throwOnError)throw error}}const revalidateAllKeys=(revalidators,type)=>{for(const key in revalidators)revalidators[key][0]&&revalidators[key][0](type)},initCache=(provider,options)=>{if(!SWRGlobalState.has(provider)){const opts=mergeObjects(defaultConfigOptions,options),EVENT_REVALIDATORS={},mutate=internalMutate.bind(UNDEFINED,provider);let unmount=noop;const subscriptions={},subscribe=(key,callback)=>{const subs=subscriptions[key]||[];return subscriptions[key]=subs,subs.push(callback),()=>subs.splice(subs.indexOf(callback),1)},setter=(key,value,prev)=>{provider.set(key,value);const subs=subscriptions[key];if(subs)for(const fn of subs)fn(value,prev)},initProvider=()=>{if(!SWRGlobalState.has(provider)&&(SWRGlobalState.set(provider,[EVENT_REVALIDATORS,{},{},{},mutate,setter,subscribe]),!IS_SERVER)){const releaseFocus=opts.initFocus(setTimeout.bind(UNDEFINED,revalidateAllKeys.bind(UNDEFINED,EVENT_REVALIDATORS,0))),releaseReconnect=opts.initReconnect(setTimeout.bind(UNDEFINED,revalidateAllKeys.bind(UNDEFINED,EVENT_REVALIDATORS,1)));unmount=()=>{releaseFocus&&releaseFocus(),releaseReconnect&&releaseReconnect(),SWRGlobalState.delete(provider)}}};return initProvider(),[provider,mutate,initProvider,unmount]}return[provider,SWRGlobalState.get(provider)[4]]},[cache,mutate]=initCache(new Map),defaultConfig=mergeObjects({onLoadingSlow:noop,onSuccess:noop,onError:noop,onErrorRetry:(_,__,config,revalidate,opts)=>{const maxRetryCount=config.errorRetryCount,currentRetryCount=opts.retryCount,timeout=~~((Math.random()+.5)*(1<<(currentRetryCount<8?currentRetryCount:8)))*config.errorRetryInterval;!isUndefined(maxRetryCount)&&currentRetryCount>maxRetryCount||setTimeout(revalidate,timeout,opts)},onDiscarded:noop,revalidateOnFocus:!0,revalidateOnReconnect:!0,revalidateIfStale:!0,shouldRetryOnError:!0,errorRetryInterval:slowConnection?1e4:5e3,focusThrottleInterval:5e3,dedupingInterval:2e3,loadingTimeout:slowConnection?5e3:3e3,compare:(currentData,newData)=>stableHash(currentData)==stableHash(newData),isPaused:()=>!1,cache,mutate,fallback:{}},preset),mergeConfigs=(a,b)=>{const v=mergeObjects(a,b);if(b){const{use:u1,fallback:f1}=a,{use:u2,fallback:f2}=b;u1&&u2&&(v.use=u1.concat(u2)),f1&&f2&&(v.fallback=mergeObjects(f1,f2))}return v},SWRConfigContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({}),SWRConfig=props=>{const{value}=props,parentConfig=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext),isFunctionalConfig=isFunction(value),config=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>isFunctionalConfig?value(parentConfig):value),[isFunctionalConfig,parentConfig,value]),extendedConfig=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>isFunctionalConfig?config:mergeConfigs(parentConfig,config)),[isFunctionalConfig,parentConfig,config]),provider=config&&config.provider,cacheContextRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(UNDEFINED);provider&&!cacheContextRef.current&&(cacheContextRef.current=initCache(provider(extendedConfig.cache||cache),config));const cacheContext=cacheContextRef.current;return cacheContext&&(extendedConfig.cache=cacheContext[0],extendedConfig.mutate=cacheContext[1]),useIsomorphicLayoutEffect((()=>{if(cacheContext)return cacheContext[2]&&cacheContext[2](),cacheContext[3]}),[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(SWRConfigContext.Provider,mergeObjects(props,{value:extendedConfig}))},enableDevtools=isWindowDefined&&window.__SWR_DEVTOOLS_USE__,use=enableDevtools?window.__SWR_DEVTOOLS_USE__:[],normalize=args=>isFunction(args[1])?[args[0],args[1],args[2]||{}]:[args[0],null,(null===args[1]?args[2]:args[1])||{}],useSWRConfig=()=>mergeObjects(defaultConfig,(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SWRConfigContext)),BUILT_IN_MIDDLEWARE=use.concat((useSWRNext=>(key_,fetcher_,config)=>useSWRNext(key_,fetcher_&&((...args)=>{const[key]=serialize(key_),[,,,PRELOAD]=SWRGlobalState.get(cache);if(key.startsWith("$inf$"))return fetcher_(...args);const req=PRELOAD[key];return isUndefined(req)?fetcher_(...args):(delete PRELOAD[key],req)}),config))),withArgs=hook=>function useSWRArgs(...args){const fallbackConfig=useSWRConfig(),[key,fn,_config]=normalize(args),config=mergeConfigs(fallbackConfig,_config);let next=hook;const{use}=config,middleware=(use||[]).concat(BUILT_IN_MIDDLEWARE);for(let i=middleware.length;i--;)next=middleware[i](next);return next(key,fn||config.fetcher||null,config)},subscribeCallback=(key,callbacks,callback)=>{const keyedRevalidators=callbacks[key]||(callbacks[key]=[]);return keyedRevalidators.push(callback),()=>{const index=keyedRevalidators.indexOf(callback);index>=0&&(keyedRevalidators[index]=keyedRevalidators[keyedRevalidators.length-1],keyedRevalidators.pop())}},withMiddleware=(useSWR,middleware)=>(...args)=>{const[key,fn,config]=normalize(args),uses=(config.use||[]).concat(middleware);return useSWR(key,fn,{...config,use:uses})};enableDevtools&&(window.__SWR_DEVTOOLS_REACT__=react__WEBPACK_IMPORTED_MODULE_0__)},"./node_modules/swr/dist/core/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>useSWR,Tk:()=>swr_internal__WEBPACK_IMPORTED_MODULE_2__.Tk});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/use-sync-external-store/shim/index.js"),swr_internal__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/swr/dist/_internal/index.mjs");const use=react__WEBPACK_IMPORTED_MODULE_0__.use||(promise=>{if("pending"===promise.status)throw promise;if("fulfilled"===promise.status)return promise.value;throw"rejected"===promise.status?promise.reason:(promise.status="pending",promise.then((v=>{promise.status="fulfilled",promise.value=v}),(e=>{promise.status="rejected",promise.reason=e})),promise)}),WITH_DEDUPE={dedupe:!0},useSWR=(swr_internal__WEBPACK_IMPORTED_MODULE_2__.qv.defineProperty(swr_internal__WEBPACK_IMPORTED_MODULE_2__.BE,"defaultValue",{value:swr_internal__WEBPACK_IMPORTED_MODULE_2__.sb}),(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.qm)(((_key,fetcher,config)=>{const{cache,compare,suspense,fallbackData,revalidateOnMount,revalidateIfStale,refreshInterval,refreshWhenHidden,refreshWhenOffline,keepPreviousData}=config,[EVENT_REVALIDATORS,MUTATION,FETCH,PRELOAD]=swr_internal__WEBPACK_IMPORTED_MODULE_2__.bZ.get(cache),[key,fnArg]=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.lK)(_key),initialMountedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),unmountedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),keyRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(key),fetcherRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fetcher),configRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(config),getConfig=()=>configRef.current,isActive=()=>getConfig().isVisible()&&getConfig().isOnline(),[getCache,setCache,subscribeCache,getInitialCache]=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.r9)(cache,key),stateDependencies=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({}).current,fallback=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(fallbackData)?config.fallback[key]:fallbackData,isEqual=(prev,current)=>{for(const _ in stateDependencies){const t=_;if("data"===t){if(!compare(prev[t],current[t])){if(!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(prev[t]))return!1;if(!compare(returnedData,current[t]))return!1}}else if(current[t]!==prev[t])return!1}return!0},getSnapshot=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{const shouldStartRequest=!!key&&!!fetcher&&((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(revalidateOnMount)?!getConfig().isPaused()&&!suspense&&(!!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(revalidateIfStale)||revalidateIfStale):revalidateOnMount),getSelectedCache=state=>{const snapshot=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.rL)(state);return delete snapshot._k,shouldStartRequest?{isValidating:!0,isLoading:!0,...snapshot}:snapshot},cachedData=getCache(),initialData=getInitialCache(),clientSnapshot=getSelectedCache(cachedData),serverSnapshot=cachedData===initialData?clientSnapshot:getSelectedCache(initialData);let memorizedSnapshot=clientSnapshot;return[()=>{const newSnapshot=getSelectedCache(getCache());return isEqual(newSnapshot,memorizedSnapshot)?(memorizedSnapshot.data=newSnapshot.data,memorizedSnapshot.isLoading=newSnapshot.isLoading,memorizedSnapshot.isValidating=newSnapshot.isValidating,memorizedSnapshot.error=newSnapshot.error,memorizedSnapshot):(memorizedSnapshot=newSnapshot,newSnapshot)},()=>serverSnapshot]}),[cache,key]),cached=(0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((callback=>subscribeCache(key,((current,prev)=>{isEqual(prev,current)||callback()}))),[cache,key]),getSnapshot[0],getSnapshot[1]),isInitialMount=!initialMountedRef.current,hasRevalidator=EVENT_REVALIDATORS[key]&&EVENT_REVALIDATORS[key].length>0,cachedData=cached.data,data=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cachedData)?fallback:cachedData,error=cached.error,laggyDataRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(data),returnedData=keepPreviousData?(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cachedData)?laggyDataRef.current:cachedData:data,shouldDoInitialRevalidation=!(hasRevalidator&&!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(error))&&(isInitialMount&&!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(revalidateOnMount)?revalidateOnMount:!getConfig().isPaused()&&(suspense?!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(data)&&revalidateIfStale:(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(data)||revalidateIfStale)),defaultValidatingState=!!(key&&fetcher&&isInitialMount&&shouldDoInitialRevalidation),isValidating=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cached.isValidating)?defaultValidatingState:cached.isValidating,isLoading=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cached.isLoading)?defaultValidatingState:cached.isLoading,revalidate=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((async revalidateOpts=>{const currentFetcher=fetcherRef.current;if(!key||!currentFetcher||unmountedRef.current||getConfig().isPaused())return!1;let newData,startAt,loading=!0;const opts=revalidateOpts||{},shouldStartNewRequest=!FETCH[key]||!opts.dedupe,callbackSafeguard=()=>swr_internal__WEBPACK_IMPORTED_MODULE_2__.dO?!unmountedRef.current&&key===keyRef.current&&initialMountedRef.current:key===keyRef.current,finalState={isValidating:!1,isLoading:!1},finishRequestAndUpdateState=()=>{setCache(finalState)},cleanupState=()=>{const requestInfo=FETCH[key];requestInfo&&requestInfo[1]===startAt&&delete FETCH[key]},initialState={isValidating:!0};(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(getCache().data)&&(initialState.isLoading=!0);try{if(shouldStartNewRequest&&(setCache(initialState),config.loadingTimeout&&(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(getCache().data)&&setTimeout((()=>{loading&&callbackSafeguard()&&getConfig().onLoadingSlow(key,config)}),config.loadingTimeout),FETCH[key]=[currentFetcher(fnArg),(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.lg)()]),[newData,startAt]=FETCH[key],newData=await newData,shouldStartNewRequest&&setTimeout(cleanupState,config.dedupingInterval),!FETCH[key]||FETCH[key][1]!==startAt)return shouldStartNewRequest&&callbackSafeguard()&&getConfig().onDiscarded(key),!1;finalState.error=swr_internal__WEBPACK_IMPORTED_MODULE_2__.ZH;const mutationInfo=MUTATION[key];if(!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(mutationInfo)&&(startAt<=mutationInfo[0]||startAt<=mutationInfo[1]||0===mutationInfo[1]))return finishRequestAndUpdateState(),shouldStartNewRequest&&callbackSafeguard()&&getConfig().onDiscarded(key),!1;const cacheData=getCache().data;finalState.data=compare(cacheData,newData)?cacheData:newData,shouldStartNewRequest&&callbackSafeguard()&&getConfig().onSuccess(newData,key,config)}catch(err){cleanupState();const currentConfig=getConfig(),{shouldRetryOnError}=currentConfig;currentConfig.isPaused()||(finalState.error=err,shouldStartNewRequest&&callbackSafeguard()&&(currentConfig.onError(err,key,currentConfig),(!0===shouldRetryOnError||(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Tn)(shouldRetryOnError)&&shouldRetryOnError(err))&&(getConfig().revalidateOnFocus&&getConfig().revalidateOnReconnect&&!isActive()||currentConfig.onErrorRetry(err,key,currentConfig,(_opts=>{const revalidators=EVENT_REVALIDATORS[key];revalidators&&revalidators[0]&&revalidators[0](swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.ERROR_REVALIDATE_EVENT,_opts)}),{retryCount:(opts.retryCount||0)+1,dedupe:!0}))))}return loading=!1,finishRequestAndUpdateState(),!0}),[key,cache]),boundMutate=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((...args)=>(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.mF)(cache,keyRef.current,...args)),[]);if((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Es)((()=>{fetcherRef.current=fetcher,configRef.current=config,(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cachedData)||(laggyDataRef.current=cachedData)})),(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Es)((()=>{if(!key)return;const softRevalidate=revalidate.bind(swr_internal__WEBPACK_IMPORTED_MODULE_2__.ZH,WITH_DEDUPE);let nextFocusRevalidatedAt=0;const unsubEvents=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.aw)(key,EVENT_REVALIDATORS,((type,opts={})=>{if(type==swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.FOCUS_EVENT){const now=Date.now();getConfig().revalidateOnFocus&&now>nextFocusRevalidatedAt&&isActive()&&(nextFocusRevalidatedAt=now+getConfig().focusThrottleInterval,softRevalidate())}else if(type==swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.RECONNECT_EVENT)getConfig().revalidateOnReconnect&&isActive()&&softRevalidate();else{if(type==swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.MUTATE_EVENT)return revalidate();if(type==swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.ERROR_REVALIDATE_EVENT)return revalidate(opts)}}));return unmountedRef.current=!1,keyRef.current=key,initialMountedRef.current=!0,setCache({_k:fnArg}),shouldDoInitialRevalidation&&((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(data)||swr_internal__WEBPACK_IMPORTED_MODULE_2__.X3?softRevalidate():(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.mf)(softRevalidate)),()=>{unmountedRef.current=!0,unsubEvents()}}),[key]),(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Es)((()=>{let timer;function next(){const interval=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Tn)(refreshInterval)?refreshInterval(getCache().data):refreshInterval;interval&&-1!==timer&&(timer=setTimeout(execute,interval))}function execute(){getCache().error||!refreshWhenHidden&&!getConfig().isVisible()||!refreshWhenOffline&&!getConfig().isOnline()?next():revalidate(WITH_DEDUPE).then(next)}return next(),()=>{timer&&(clearTimeout(timer),timer=-1)}}),[refreshInterval,refreshWhenHidden,refreshWhenOffline,key]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(returnedData),suspense&&(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(data)&&key){if(!swr_internal__WEBPACK_IMPORTED_MODULE_2__.dO&&swr_internal__WEBPACK_IMPORTED_MODULE_2__.X3)throw new Error("Fallback data is required when using suspense in SSR.");fetcherRef.current=fetcher,configRef.current=config,unmountedRef.current=!1;const req=PRELOAD[key];if(!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(req)){const promise=boundMutate(req);use(promise)}if(!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(error))throw error;{const promise=revalidate(WITH_DEDUPE);(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(returnedData)||(promise.status="fulfilled",promise.value=!0),use(promise)}}return{mutate:boundMutate,get data(){return stateDependencies.data=!0,returnedData},get error(){return stateDependencies.error=!0,error},get isValidating(){return stateDependencies.isValidating=!0,isValidating},get isLoading(){return stateDependencies.isLoading=!0,isLoading}}})))},"./node_modules/swr/dist/mutation/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useSWRMutation});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/use-sync-external-store/shim/index.js"),swr_internal__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/swr/dist/_internal/index.mjs");const use=react__WEBPACK_IMPORTED_MODULE_0__.use||(promise=>{if("pending"===promise.status)throw promise;if("fulfilled"===promise.status)return promise.value;throw"rejected"===promise.status?promise.reason:(promise.status="pending",promise.then((v=>{promise.status="fulfilled",promise.value=v}),(e=>{promise.status="rejected",promise.reason=e})),promise)}),WITH_DEDUPE={dedupe:!0};swr_internal__WEBPACK_IMPORTED_MODULE_2__.qv.defineProperty(swr_internal__WEBPACK_IMPORTED_MODULE_2__.BE,"defaultValue",{value:swr_internal__WEBPACK_IMPORTED_MODULE_2__.sb});const useSWR=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.qm)(((_key,fetcher,config)=>{const{cache,compare,suspense,fallbackData,revalidateOnMount,revalidateIfStale,refreshInterval,refreshWhenHidden,refreshWhenOffline,keepPreviousData}=config,[EVENT_REVALIDATORS,MUTATION,FETCH,PRELOAD]=swr_internal__WEBPACK_IMPORTED_MODULE_2__.bZ.get(cache),[key,fnArg]=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.lK)(_key),initialMountedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),unmountedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),keyRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(key),fetcherRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fetcher),configRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(config),getConfig=()=>configRef.current,isActive=()=>getConfig().isVisible()&&getConfig().isOnline(),[getCache,setCache,subscribeCache,getInitialCache]=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.r9)(cache,key),stateDependencies=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({}).current,fallback=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(fallbackData)?config.fallback[key]:fallbackData,isEqual=(prev,current)=>{for(const _ in stateDependencies){const t=_;if("data"===t){if(!compare(prev[t],current[t])){if(!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(prev[t]))return!1;if(!compare(returnedData,current[t]))return!1}}else if(current[t]!==prev[t])return!1}return!0},getSnapshot=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{const shouldStartRequest=!!key&&!!fetcher&&((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(revalidateOnMount)?!getConfig().isPaused()&&!suspense&&(!!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(revalidateIfStale)||revalidateIfStale):revalidateOnMount),getSelectedCache=state=>{const snapshot=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.rL)(state);return delete snapshot._k,shouldStartRequest?{isValidating:!0,isLoading:!0,...snapshot}:snapshot},cachedData=getCache(),initialData=getInitialCache(),clientSnapshot=getSelectedCache(cachedData),serverSnapshot=cachedData===initialData?clientSnapshot:getSelectedCache(initialData);let memorizedSnapshot=clientSnapshot;return[()=>{const newSnapshot=getSelectedCache(getCache());return isEqual(newSnapshot,memorizedSnapshot)?(memorizedSnapshot.data=newSnapshot.data,memorizedSnapshot.isLoading=newSnapshot.isLoading,memorizedSnapshot.isValidating=newSnapshot.isValidating,memorizedSnapshot.error=newSnapshot.error,memorizedSnapshot):(memorizedSnapshot=newSnapshot,newSnapshot)},()=>serverSnapshot]}),[cache,key]),cached=(0,use_sync_external_store_shim_index_js__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((callback=>subscribeCache(key,((current,prev)=>{isEqual(prev,current)||callback()}))),[cache,key]),getSnapshot[0],getSnapshot[1]),isInitialMount=!initialMountedRef.current,hasRevalidator=EVENT_REVALIDATORS[key]&&EVENT_REVALIDATORS[key].length>0,cachedData=cached.data,data=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cachedData)?fallback:cachedData,error=cached.error,laggyDataRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(data),returnedData=keepPreviousData?(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cachedData)?laggyDataRef.current:cachedData:data,shouldDoInitialRevalidation=!(hasRevalidator&&!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(error))&&(isInitialMount&&!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(revalidateOnMount)?revalidateOnMount:!getConfig().isPaused()&&(suspense?!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(data)&&revalidateIfStale:(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(data)||revalidateIfStale)),defaultValidatingState=!!(key&&fetcher&&isInitialMount&&shouldDoInitialRevalidation),isValidating=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cached.isValidating)?defaultValidatingState:cached.isValidating,isLoading=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cached.isLoading)?defaultValidatingState:cached.isLoading,revalidate=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((async revalidateOpts=>{const currentFetcher=fetcherRef.current;if(!key||!currentFetcher||unmountedRef.current||getConfig().isPaused())return!1;let newData,startAt,loading=!0;const opts=revalidateOpts||{},shouldStartNewRequest=!FETCH[key]||!opts.dedupe,callbackSafeguard=()=>swr_internal__WEBPACK_IMPORTED_MODULE_2__.dO?!unmountedRef.current&&key===keyRef.current&&initialMountedRef.current:key===keyRef.current,finalState={isValidating:!1,isLoading:!1},finishRequestAndUpdateState=()=>{setCache(finalState)},cleanupState=()=>{const requestInfo=FETCH[key];requestInfo&&requestInfo[1]===startAt&&delete FETCH[key]},initialState={isValidating:!0};(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(getCache().data)&&(initialState.isLoading=!0);try{if(shouldStartNewRequest&&(setCache(initialState),config.loadingTimeout&&(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(getCache().data)&&setTimeout((()=>{loading&&callbackSafeguard()&&getConfig().onLoadingSlow(key,config)}),config.loadingTimeout),FETCH[key]=[currentFetcher(fnArg),(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.lg)()]),[newData,startAt]=FETCH[key],newData=await newData,shouldStartNewRequest&&setTimeout(cleanupState,config.dedupingInterval),!FETCH[key]||FETCH[key][1]!==startAt)return shouldStartNewRequest&&callbackSafeguard()&&getConfig().onDiscarded(key),!1;finalState.error=swr_internal__WEBPACK_IMPORTED_MODULE_2__.ZH;const mutationInfo=MUTATION[key];if(!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(mutationInfo)&&(startAt<=mutationInfo[0]||startAt<=mutationInfo[1]||0===mutationInfo[1]))return finishRequestAndUpdateState(),shouldStartNewRequest&&callbackSafeguard()&&getConfig().onDiscarded(key),!1;const cacheData=getCache().data;finalState.data=compare(cacheData,newData)?cacheData:newData,shouldStartNewRequest&&callbackSafeguard()&&getConfig().onSuccess(newData,key,config)}catch(err){cleanupState();const currentConfig=getConfig(),{shouldRetryOnError}=currentConfig;currentConfig.isPaused()||(finalState.error=err,shouldStartNewRequest&&callbackSafeguard()&&(currentConfig.onError(err,key,currentConfig),(!0===shouldRetryOnError||(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Tn)(shouldRetryOnError)&&shouldRetryOnError(err))&&(getConfig().revalidateOnFocus&&getConfig().revalidateOnReconnect&&!isActive()||currentConfig.onErrorRetry(err,key,currentConfig,(_opts=>{const revalidators=EVENT_REVALIDATORS[key];revalidators&&revalidators[0]&&revalidators[0](swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.ERROR_REVALIDATE_EVENT,_opts)}),{retryCount:(opts.retryCount||0)+1,dedupe:!0}))))}return loading=!1,finishRequestAndUpdateState(),!0}),[key,cache]),boundMutate=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((...args)=>(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.mF)(cache,keyRef.current,...args)),[]);if((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Es)((()=>{fetcherRef.current=fetcher,configRef.current=config,(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(cachedData)||(laggyDataRef.current=cachedData)})),(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Es)((()=>{if(!key)return;const softRevalidate=revalidate.bind(swr_internal__WEBPACK_IMPORTED_MODULE_2__.ZH,WITH_DEDUPE);let nextFocusRevalidatedAt=0;const unsubEvents=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.aw)(key,EVENT_REVALIDATORS,((type,opts={})=>{if(type==swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.FOCUS_EVENT){const now=Date.now();getConfig().revalidateOnFocus&&now>nextFocusRevalidatedAt&&isActive()&&(nextFocusRevalidatedAt=now+getConfig().focusThrottleInterval,softRevalidate())}else if(type==swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.RECONNECT_EVENT)getConfig().revalidateOnReconnect&&isActive()&&softRevalidate();else{if(type==swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.MUTATE_EVENT)return revalidate();if(type==swr_internal__WEBPACK_IMPORTED_MODULE_2__.bu.ERROR_REVALIDATE_EVENT)return revalidate(opts)}}));return unmountedRef.current=!1,keyRef.current=key,initialMountedRef.current=!0,setCache({_k:fnArg}),shouldDoInitialRevalidation&&((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(data)||swr_internal__WEBPACK_IMPORTED_MODULE_2__.X3?softRevalidate():(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.mf)(softRevalidate)),()=>{unmountedRef.current=!0,unsubEvents()}}),[key]),(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Es)((()=>{let timer;function next(){const interval=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Tn)(refreshInterval)?refreshInterval(getCache().data):refreshInterval;interval&&-1!==timer&&(timer=setTimeout(execute,interval))}function execute(){getCache().error||!refreshWhenHidden&&!getConfig().isVisible()||!refreshWhenOffline&&!getConfig().isOnline()?next():revalidate(WITH_DEDUPE).then(next)}return next(),()=>{timer&&(clearTimeout(timer),timer=-1)}}),[refreshInterval,refreshWhenHidden,refreshWhenOffline,key]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(returnedData),suspense&&(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(data)&&key){if(!swr_internal__WEBPACK_IMPORTED_MODULE_2__.dO&&swr_internal__WEBPACK_IMPORTED_MODULE_2__.X3)throw new Error("Fallback data is required when using suspense in SSR.");fetcherRef.current=fetcher,configRef.current=config,unmountedRef.current=!1;const req=PRELOAD[key];if(!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(req)){const promise=boundMutate(req);use(promise)}if(!(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(error))throw error;{const promise=revalidate(WITH_DEDUPE);(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.b0)(returnedData)||(promise.status="fulfilled",promise.value=!0),use(promise)}}return{mutate:boundMutate,get data(){return stateDependencies.data=!0,returnedData},get error(){return stateDependencies.error=!0,error},get isValidating(){return stateDependencies.isValidating=!0,isValidating},get isLoading(){return stateDependencies.isLoading=!0,isLoading}}})),startTransition=swr_internal__WEBPACK_IMPORTED_MODULE_2__.dO?cb=>{cb()}:react__WEBPACK_IMPORTED_MODULE_0__.startTransition,useSWRMutation=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Ht)(useSWR,(()=>(key,fetcher,config={})=>{const{mutate}=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.iX)(),keyRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(key),fetcherRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fetcher),configRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(config),ditchMutationsUntilRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0),[stateRef,stateDependencies,setState]=(state=>{const[,rerender]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),unmountedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),stateRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(state),stateDependenciesRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({data:!1,error:!1,isValidating:!1}),setState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((payload=>{let shouldRerender=!1;const currentState=stateRef.current;for(const _ in payload){const k=_;currentState[k]!==payload[k]&&(currentState[k]=payload[k],stateDependenciesRef.current[k]&&(shouldRerender=!0))}shouldRerender&&!unmountedRef.current&&rerender({})}),[]);return(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Es)((()=>(unmountedRef.current=!1,()=>{unmountedRef.current=!0}))),[stateRef,stateDependenciesRef.current,setState]})({data:swr_internal__WEBPACK_IMPORTED_MODULE_2__.ZH,error:swr_internal__WEBPACK_IMPORTED_MODULE_2__.ZH,isMutating:!1}),currentState=stateRef.current,trigger=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((async(arg,opts)=>{const[serializedKey,resolvedKey]=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.lK)(keyRef.current);if(!fetcherRef.current)throw new Error("Can’t trigger the mutation: missing fetcher.");if(!serializedKey)throw new Error("Can’t trigger the mutation: missing key.");const options=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.rL)((0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.rL)({populateCache:!1,throwOnError:!0},configRef.current),opts),mutationStartedAt=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.lg)();ditchMutationsUntilRef.current=mutationStartedAt,setState({isMutating:!0});try{const data=await mutate(serializedKey,fetcherRef.current(resolvedKey,{arg}),(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.rL)(options,{throwOnError:!0}));return ditchMutationsUntilRef.current<=mutationStartedAt&&(startTransition((()=>setState({data,isMutating:!1,error:void 0}))),null==options.onSuccess||options.onSuccess.call(options,data,serializedKey,options)),data}catch(error){if(ditchMutationsUntilRef.current<=mutationStartedAt&&(startTransition((()=>setState({error,isMutating:!1}))),null==options.onError||options.onError.call(options,error,serializedKey,options),options.throwOnError))throw error}}),[]),reset=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{ditchMutationsUntilRef.current=(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.lg)(),setState({data:swr_internal__WEBPACK_IMPORTED_MODULE_2__.ZH,error:swr_internal__WEBPACK_IMPORTED_MODULE_2__.ZH,isMutating:!1})}),[]);return(0,swr_internal__WEBPACK_IMPORTED_MODULE_2__.Es)((()=>{keyRef.current=key,fetcherRef.current=fetcher,configRef.current=config})),{trigger,reset,get data(){return stateDependencies.data=!0,currentState.data},get error(){return stateDependencies.error=!0,currentState.error},get isMutating(){return stateDependencies.isMutating=!0,currentState.isMutating}}}))},"./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var e=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var k="function"==typeof Object.is?Object.is:function h(a,b){return a===b&&(0!==a||1/a==1/b)||a!=a&&b!=b},l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}var u="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function t(a,b){return b()}:function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];return n((function(){c.value=d,c.getSnapshot=b,r(c)&&g({inst:c})}),[a,d,b]),m((function(){return r(c)&&g({inst:c}),a((function(){r(c)&&g({inst:c})}))}),[a]),p(d),d};exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u},"./node_modules/use-sync-external-store/shim/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js")}}]);